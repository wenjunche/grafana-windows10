{"version":3,"sources":["webpack:///./public/app/features/users/UsersTable.tsx","webpack:///./public/app/features/users/InviteeRow.tsx","webpack:///./public/app/features/users/InviteesTable.tsx","webpack:///./public/app/features/users/UsersListPage.tsx","webpack:///./public/app/core/components/FilterInput/FilterInput.tsx","webpack:///./public/app/features/users/state/selectors.ts","webpack:///./public/app/features/users/state/actions.ts","webpack:///./public/app/features/users/UsersActionBar.tsx"],"names":["UsersTable","props","users","onRoleChange","onRemoveUser","className","style","width","map","user","index","key","userId","src","avatarUrl","login","email","name","lastSeenAtAge","value","role","onChange","event","target","option","onClick","InviteeRow","copyUrlRef","createRef","copyToClipboard","node","current","select","document","execCommand","this","invitee","revokeInvite","readOnly","url","position","bottom","right","opacity","zIndex","ref","code","PureComponent","mapDispatchToProps","connect","InviteesTable","invitees","id","UsersListPage","updatedUser","updateUser","appEvents","emit","CoreEvents","showConfirmModal","title","text","yesText","icon","onConfirm","removeUser","onShowInvites","setState","prevState","showInvites","externalUserMngInfo","externalUserMngInfoHtml","renderMarkdown","state","fetchUsers","fetchInvitees","loadUsers","loadInvitees","navModel","hasFetched","Contents","isLoading","dangerouslySetInnerHTML","__html","renderTable","setUsersSearchQuery","hot","module","getNavModel","navIndex","getUsers","searchQuery","getUsersSearchQuery","getInvitees","FilterInput","forwardRef","labelClassName","type","inputClassName","unEscapeStringFromRegex","escapeStringForRegex","placeholder","regex","RegExp","filter","test","getInviteesCount","length","dispatch","getBackendSrv","get","usersLoaded","inviteesLoaded","patch","delete","UsersActionBar","canInvite","externalUserMngLinkName","externalUserMngLinkUrl","pendingInvitesCount","pendingInvitesButtonStyle","classNames","btn","active","usersButtonStyle","marginLeft","href","rel"],"mappings":"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","file":"UsersListPage.898fe9e20a782b4232fe.js","sourcesContent":["import React, { FC } from 'react';\nimport { OrgUser } from 'app/types';\n\nexport interface Props {\n  users: OrgUser[];\n  onRoleChange: (role: string, user: OrgUser) => void;\n  onRemoveUser: (user: OrgUser) => void;\n}\n\nconst UsersTable: FC<Props> = props => {\n  const { users, onRoleChange, onRemoveUser } = props;\n\n  return (\n    <table className=\"filter-table form-inline\">\n      <thead>\n        <tr>\n          <th />\n          <th>Login</th>\n          <th>Email</th>\n          <th>Name</th>\n          <th>Seen</th>\n          <th>Role</th>\n          <th style={{ width: '34px' }} />\n        </tr>\n      </thead>\n      <tbody>\n        {users.map((user, index) => {\n          return (\n            <tr key={`${user.userId}-${index}`}>\n              <td className=\"width-4 text-center\">\n                <img className=\"filter-table__avatar\" src={user.avatarUrl} />\n              </td>\n              <td>{user.login}</td>\n              <td>\n                <span className=\"ellipsis\">{user.email}</span>\n              </td>\n              <td>{user.name}</td>\n              <td>{user.lastSeenAtAge}</td>\n              <td>\n                <div className=\"gf-form-select-wrapper width-12\">\n                  <select\n                    value={user.role}\n                    className=\"gf-form-input\"\n                    onChange={event => onRoleChange(event.target.value, user)}\n                  >\n                    {['Viewer', 'Editor', 'Admin'].map((option, index) => {\n                      return (\n                        <option value={option} key={`${option}-${index}`}>\n                          {option}\n                        </option>\n                      );\n                    })}\n                  </select>\n                </div>\n              </td>\n              <td>\n                <div onClick={() => onRemoveUser(user)} className=\"btn btn-danger btn-small\">\n                  <i className=\"fa fa-remove\" />\n                </div>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default UsersTable;\n","import React, { createRef, PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Invitee } from 'app/types';\nimport { revokeInvite } from './state/actions';\n\nexport interface Props {\n  invitee: Invitee;\n  revokeInvite: typeof revokeInvite;\n}\n\nclass InviteeRow extends PureComponent<Props> {\n  private copyUrlRef = createRef<HTMLTextAreaElement>();\n\n  copyToClipboard = () => {\n    const node = this.copyUrlRef.current;\n\n    if (node) {\n      node.select();\n      document.execCommand('copy');\n    }\n  };\n\n  render() {\n    const { invitee, revokeInvite } = this.props;\n    return (\n      <tr>\n        <td>{invitee.email}</td>\n        <td>{invitee.name}</td>\n        <td className=\"text-right\">\n          <button className=\"btn btn-inverse btn-small\" onClick={this.copyToClipboard}>\n            <textarea\n              readOnly={true}\n              value={invitee.url}\n              style={{ position: 'absolute', bottom: 0, right: 0, opacity: 0, zIndex: -10 }}\n              ref={this.copyUrlRef}\n            />\n            Copy Invite\n          </button>\n          &nbsp;\n        </td>\n        <td>\n          <button className=\"btn btn-danger btn-small\" onClick={() => revokeInvite(invitee.code)}>\n            <i className=\"fa fa-remove\" />\n          </button>\n        </td>\n      </tr>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  revokeInvite,\n};\n\nexport default connect(() => {\n  return {};\n}, mapDispatchToProps)(InviteeRow);\n","import React, { PureComponent } from 'react';\nimport { Invitee } from 'app/types';\nimport InviteeRow from './InviteeRow';\n\nexport interface Props {\n  invitees: Invitee[];\n}\n\nexport default class InviteesTable extends PureComponent<Props> {\n  render() {\n    const { invitees } = this.props;\n\n    return (\n      <table className=\"filter-table form-inline\">\n        <thead>\n          <tr>\n            <th>Email</th>\n            <th>Name</th>\n            <th />\n            <th style={{ width: '34px' }} />\n          </tr>\n        </thead>\n        <tbody>\n          {invitees.map((invitee, index) => {\n            return <InviteeRow key={`${invitee.id}-${index}`} invitee={invitee} />;\n          })}\n        </tbody>\n      </table>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect } from 'react-redux';\nimport { NavModel, renderMarkdown } from '@grafana/data';\n\nimport Page from 'app/core/components/Page/Page';\nimport UsersActionBar from './UsersActionBar';\nimport UsersTable from './UsersTable';\nimport InviteesTable from './InviteesTable';\nimport { CoreEvents, Invitee, OrgUser } from 'app/types';\nimport appEvents from 'app/core/app_events';\nimport { loadInvitees, loadUsers, removeUser, updateUser } from './state/actions';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { getInvitees, getUsers, getUsersSearchQuery } from './state/selectors';\nimport { setUsersSearchQuery } from './state/reducers';\n\nexport interface Props {\n  navModel: NavModel;\n  invitees: Invitee[];\n  users: OrgUser[];\n  searchQuery: string;\n  externalUserMngInfo: string;\n  hasFetched: boolean;\n  loadUsers: typeof loadUsers;\n  loadInvitees: typeof loadInvitees;\n  setUsersSearchQuery: typeof setUsersSearchQuery;\n  updateUser: typeof updateUser;\n  removeUser: typeof removeUser;\n}\n\nexport interface State {\n  showInvites: boolean;\n}\n\nexport class UsersListPage extends PureComponent<Props, State> {\n  externalUserMngInfoHtml: string;\n\n  constructor(props: Props) {\n    super(props);\n\n    if (this.props.externalUserMngInfo) {\n      this.externalUserMngInfoHtml = renderMarkdown(this.props.externalUserMngInfo);\n    }\n\n    this.state = {\n      showInvites: false,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n    this.fetchInvitees();\n  }\n\n  async fetchUsers() {\n    return await this.props.loadUsers();\n  }\n\n  async fetchInvitees() {\n    return await this.props.loadInvitees();\n  }\n\n  onRoleChange = (role: string, user: OrgUser) => {\n    const updatedUser = { ...user, role: role };\n\n    this.props.updateUser(updatedUser);\n  };\n\n  onRemoveUser = (user: OrgUser) => {\n    appEvents.emit(CoreEvents.showConfirmModal, {\n      title: 'Delete',\n      text: 'Are you sure you want to delete user ' + user.login + '?',\n      yesText: 'Delete',\n      icon: 'fa-warning',\n      onConfirm: () => {\n        this.props.removeUser(user.userId);\n      },\n    });\n  };\n\n  onShowInvites = () => {\n    this.setState(prevState => ({\n      showInvites: !prevState.showInvites,\n    }));\n  };\n\n  renderTable() {\n    const { invitees, users } = this.props;\n\n    if (this.state.showInvites) {\n      return <InviteesTable invitees={invitees} />;\n    } else {\n      return (\n        <UsersTable\n          users={users}\n          onRoleChange={(role, user) => this.onRoleChange(role, user)}\n          onRemoveUser={user => this.onRemoveUser(user)}\n        />\n      );\n    }\n  }\n\n  render() {\n    const { navModel, hasFetched } = this.props;\n    const externalUserMngInfoHtml = this.externalUserMngInfoHtml;\n\n    return (\n      <Page navModel={navModel}>\n        <Page.Contents isLoading={!hasFetched}>\n          <>\n            <UsersActionBar onShowInvites={this.onShowInvites} showInvites={this.state.showInvites} />\n            {externalUserMngInfoHtml && (\n              <div className=\"grafana-info-box\" dangerouslySetInnerHTML={{ __html: externalUserMngInfoHtml }} />\n            )}\n            {hasFetched && this.renderTable()}\n          </>\n        </Page.Contents>\n      </Page>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    navModel: getNavModel(state.navIndex, 'users'),\n    users: getUsers(state.users),\n    searchQuery: getUsersSearchQuery(state.users),\n    invitees: getInvitees(state.users),\n    externalUserMngInfo: state.users.externalUserMngInfo,\n    hasFetched: state.users.hasFetched,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadUsers,\n  loadInvitees,\n  setUsersSearchQuery,\n  updateUser,\n  removeUser,\n};\n\nexport default hot(module)(connect(mapStateToProps, mapDispatchToProps)(UsersListPage));\n","import React, { forwardRef } from 'react';\nimport { escapeStringForRegex, unEscapeStringFromRegex } from '@grafana/data';\n\nexport interface Props {\n  value: string | undefined;\n  placeholder?: string;\n  labelClassName?: string;\n  inputClassName?: string;\n  onChange: (value: string) => void;\n}\n\nexport const FilterInput = forwardRef<HTMLInputElement, Props>((props, ref) => (\n  <label className={props.labelClassName}>\n    <input\n      ref={ref}\n      type=\"text\"\n      className={props.inputClassName}\n      value={unEscapeStringFromRegex(props.value)}\n      onChange={event => props.onChange(escapeStringForRegex(event.target.value))}\n      placeholder={props.placeholder ? props.placeholder : null}\n    />\n    <i className=\"gf-form-input-icon fa fa-search\" />\n  </label>\n));\n","import { UsersState } from 'app/types';\n\nexport const getUsers = (state: UsersState) => {\n  const regex = new RegExp(state.searchQuery, 'i');\n\n  return state.users.filter(user => {\n    return regex.test(user.login) || regex.test(user.email) || regex.test(user.name);\n  });\n};\n\nexport const getInvitees = (state: UsersState) => {\n  const regex = new RegExp(state.searchQuery, 'i');\n\n  return state.invitees.filter(invitee => {\n    return regex.test(invitee.name) || regex.test(invitee.email);\n  });\n};\n\nexport const getInviteesCount = (state: UsersState) => state.invitees.length;\nexport const getUsersSearchQuery = (state: UsersState) => state.searchQuery;\n","import { ThunkResult } from '../../../types';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { OrgUser } from 'app/types';\nimport { inviteesLoaded, usersLoaded } from './reducers';\n\nexport function loadUsers(): ThunkResult<void> {\n  return async dispatch => {\n    const users = await getBackendSrv().get('/api/org/users');\n    dispatch(usersLoaded(users));\n  };\n}\n\nexport function loadInvitees(): ThunkResult<void> {\n  return async dispatch => {\n    const invitees = await getBackendSrv().get('/api/org/invites');\n    dispatch(inviteesLoaded(invitees));\n  };\n}\n\nexport function updateUser(user: OrgUser): ThunkResult<void> {\n  return async dispatch => {\n    await getBackendSrv().patch(`/api/org/users/${user.userId}`, { role: user.role });\n    dispatch(loadUsers());\n  };\n}\n\nexport function removeUser(userId: number): ThunkResult<void> {\n  return async dispatch => {\n    await getBackendSrv().delete(`/api/org/users/${userId}`);\n    dispatch(loadUsers());\n  };\n}\n\nexport function revokeInvite(code: string): ThunkResult<void> {\n  return async dispatch => {\n    await getBackendSrv().patch(`/api/org/invites/${code}/revoke`, {});\n    dispatch(loadInvitees());\n  };\n}\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport { setUsersSearchQuery } from './state/reducers';\nimport { getInviteesCount, getUsersSearchQuery } from './state/selectors';\nimport { FilterInput } from 'app/core/components/FilterInput/FilterInput';\n\nexport interface Props {\n  searchQuery: string;\n  setUsersSearchQuery: typeof setUsersSearchQuery;\n  onShowInvites: () => void;\n  pendingInvitesCount: number;\n  canInvite: boolean;\n  showInvites: boolean;\n  externalUserMngLinkUrl: string;\n  externalUserMngLinkName: string;\n}\n\nexport class UsersActionBar extends PureComponent<Props> {\n  render() {\n    const {\n      canInvite,\n      externalUserMngLinkName,\n      externalUserMngLinkUrl,\n      searchQuery,\n      pendingInvitesCount,\n      setUsersSearchQuery,\n      onShowInvites,\n      showInvites,\n    } = this.props;\n\n    const pendingInvitesButtonStyle = classNames({\n      btn: true,\n      'toggle-btn': true,\n      active: showInvites,\n    });\n\n    const usersButtonStyle = classNames({\n      btn: true,\n      'toggle-btn': true,\n      active: !showInvites,\n    });\n\n    return (\n      <div className=\"page-action-bar\">\n        <div className=\"gf-form gf-form--grow\">\n          <FilterInput\n            labelClassName=\"gf-form--has-input-icon\"\n            inputClassName=\"gf-form-input width-20\"\n            value={searchQuery}\n            onChange={setUsersSearchQuery}\n            placeholder=\"Filter by email, login or name\"\n          />\n          {pendingInvitesCount > 0 && (\n            <div style={{ marginLeft: '1rem' }}>\n              <button className={usersButtonStyle} key=\"users\" onClick={onShowInvites}>\n                Users\n              </button>\n              <button className={pendingInvitesButtonStyle} onClick={onShowInvites} key=\"pending-invites\">\n                Pending Invites ({pendingInvitesCount})\n              </button>\n            </div>\n          )}\n          <div className=\"page-action-bar__spacer\" />\n          {canInvite && (\n            <a className=\"btn btn-primary\" href=\"org/users/invite\">\n              <span>Invite</span>\n            </a>\n          )}\n          {externalUserMngLinkUrl && (\n            <a className=\"btn btn-primary\" href={externalUserMngLinkUrl} target=\"_blank\" rel=\"noopener\">\n              {externalUserMngLinkName}\n            </a>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    searchQuery: getUsersSearchQuery(state.users),\n    pendingInvitesCount: getInviteesCount(state.users),\n    externalUserMngLinkName: state.users.externalUserMngLinkName,\n    externalUserMngLinkUrl: state.users.externalUserMngLinkUrl,\n    canInvite: state.users.canInvite,\n  };\n}\n\nconst mapDispatchToProps = {\n  setUsersSearchQuery,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersActionBar);\n"],"sourceRoot":""}