{"version":3,"sources":["webpack:///./public/app/core/utils/version.ts","webpack:///./public/app/plugins/datasource/graphite/gfunc.ts","webpack:///./public/app/plugins/datasource/graphite/types.ts","webpack:///./public/app/plugins/datasource/graphite/datasource.ts","webpack:///./public/app/plugins/datasource/graphite/add_graphite_func.ts","webpack:///./public/app/plugins/datasource/graphite/func_editor.ts","webpack:///./public/app/plugins/datasource/graphite/lexer.ts","webpack:///./public/app/plugins/datasource/graphite/parser.ts","webpack:///./public/app/plugins/datasource/graphite/graphite_query.ts","webpack:///./public/app/plugins/datasource/graphite/query_ctrl.ts","webpack:///./public/app/plugins/datasource/graphite/configuration/ConfigEditor.styles.ts","webpack:///./public/app/plugins/datasource/graphite/configuration/ConfigEditor.tsx","webpack:///./public/app/plugins/datasource/graphite/meta.ts","webpack:///./public/app/plugins/datasource/graphite/MetricTankMetaInspector.tsx","webpack:///./public/app/plugins/datasource/graphite/module.ts"],"names":["versionPattern","SemVersion","version","match","exec","this","major","Number","minor","patch","meta","compared","i","comparable","length","_","isNumber","isVersionGtOrEq","a","b","isGtOrEq","index","addFuncDef","funcDef","params","defaultParams","name","shortName","optionalSeriesRefArgs","type","optional","multiple","isVersionRelatedFunction","obj","graphiteVersion","category","options","fake","FuncInstance","def","withDefaultParams","slice","updateText","metricExp","replaceVariables","str","parameters","map","value","paramType","get","last","includes","valueInterpolated","isString","isFinite","toString","pop","unshift","join","strValue","indexOf","_hasMultipleParamsInString","each","split","partVal","idx","updateParam","trim","splice","text","getFuncDef","message","GraphiteType","createFuncInstance","getFuncDefs","funcs","forEach","assign","filter","param","parseFuncDefs","rawDefs","funcDefs","funcName","group","description","replace","func","test","required","shift","rawParam","undefined","default","push","suggestions","GraphiteDatasource","instanceSettings","templateSrv","funcDefsPromise","convertResponseToDataFrames","result","data","series","isArray","s","y","datapoints","frame","toDataFrame","custom","request","info","basicAuth","url","jsonData","isMetricTank","graphiteType","Metrictank","supportsTags","cacheTimeout","withCredentials","_seriesRefLetters","maxDataPoints","links","graphOptions","from","translateTime","rangeRaw","timezone","until","to","targets","format","buildGraphiteParams","scopedVars","Promise","resolve","httpOptions","method","headers","addTracingHeaders","panelId","requestId","doGraphiteRequest","then","dashboardId","tagString","tags","queries","expandedQueries","query","datasource","target","annotation","graphiteQuery","list","time","fields","values","title","events","range","results","e","parseTags","when","what","err","reject","variableExists","date","roundUp","substring","dateMath","parse","add","subtract","unix","optionalOptions","interpolatedQuery","getSearchFilterScopedVar","wildcardChar","matches","expressions","exprRegex","limit","getTagValuesAutoComplete","getTagsAutoComplete","metric","expandable","tag","id","key","tagPrefix","expr","expression","valuePrefix","isValid","catch","gfunc","status","console","log","Authorization","inspect","getBackendSrv","datasourceRequest","targetValue","graphiteOptions","cleanOptions","regex","intervalFormatFixRegex","hasTargets","fixIntervalFormat","refId","nestedSeriesRegexReplacer","g1","hide","encodeURIComponent","DataSourceApi","graphiteAddFunc","$compile","link","$scope","elem","drop","ctrl","$input","$","$button","appendTo","allFunctions","sort","functionMenu","categories","click","sortBy","submenu","createFunctionDropDownMenu","attr","typeahead","source","minLength","items","updater","toLowerCase","find","$apply","addFunction","trigger","show","focus","keyup","toggleClass","val","blur","setTimeout","removeClass","contents","cleanUpDrop","destroy","on","shortDesc","contentElement","document","createElement","rst2html","innerHTML","Drop","content","classes","openOn","tetherOptions","attachment","targetAttachment","$on","graphiteFuncEditor","restrict","$funcLink","scheduledRelink","paramCountAtLink","cancelBlur","clickFuncParam","paramIndex","$link","$comma","prev","next","select","lookup","paramDef","switchToLink","inputElem","clearTimeout","newValue","html","highlightVariablesAsHtml","relink","targetChanged","hasClass","addClass","inputBlur","inputKeyPress","which","inputKeyDown","style","width","addElementsAndCompile","defParams","clone","lastParam","paramValue","hasValue","linkClass","$paramLink","partial","keypress","$element","process","addTypeahead","children","remove","added","first","handleRemoveFunction","removeFunction","handleMoveLeft","moveFunction","handleMoveRight","coreModule","directive","unicodeLetterTable","identifierStartTable","identifierPartTable","Lexer","input","char","charAt","token","peek","skip","scanStringLiteral","scanPunctuator","scanNumericLiteral","scanIdentifier","scanTemplateSequence","pos","isUnicodeLetter","code","isHexDigit","readUnicodeEscapeSequence","bind","ch1","ch2","ch3","ch4","parseInt","getIdentifierStart","chr","charCodeAt","getIdentifierPart","bad","isDecimalDigit","isOctalDigit","isIdentifierStart","ch","isMalformed","base","isPunctuator","quote","isUnclosed","Parser","lexer","tokens","tokenize","start","functionCall","metricExpression","curlySegment","consumeToken","errorMark","curly","curlyBraceSegment","parts","node","segments","metricSegment","segment","functionParameters","numericLiteral","seriesRefExpression","boolExpression","stringLiteral","concat","parseFloat","currentToken","token1","token2","matchToken","GraphiteQuery","parseTarget","removeTagValue","functions","seriesByTagUsed","error","textEditor","astNode","getAst","parseTargetRecursive","checkOtherSegmentsIndex","arr","reduce","innerFunc","hidden","splitSeriesByTagParams","getSeriesByTagFuncIndex","addFunctionParameter","newFunc","without","offset","move","metricPath","getSegmentPathUpTo","render","updateRenderedTarget","targetsByRefId","keyBy","nestedSeriesRefRegex","targetWithNestedQueries","t","refCount","count","countTargetRefs","updated","targetFull","tagPattern","flatten","operator","findIndex","seriesByTagFuncIndex","newTagParam","renderTagString","getSeriesByTagFunc","tagIndex","removeTag","excludeIndex","compact","tagExpr","GRAPHITE_TAG_OPERATORS","GraphiteQueryCtrl","$injector","uiSegmentSrv","$timeout","paused","waitForFuncDefsLoaded","queryModel","buildSegments","modifyLastSegment","newSegment","promiseToDigest","checkOtherSegments","fixTagSegments","addSelectMetricSegment","newSelectMetric","fromIndex","path","metricFindQuery","appEvents","emit","AppEvents","alertError","segmentIndex","prefix","panelCtrl","altSegments","eachRight","panel","variables","variable","removeTaggedEntry","addAltTagSegments","getTagsAsSegments","tagSegments","updateSegmentValue","pause","addSeriesByTagFunc","setSegmentFocus","spliceSegments","updateModelTarget","refresh","oldTarget","smartlyHandleNewAliasByNode","emptySegments","tagParam","getTags","altTags","mapToDropdownOptions","tagExpressions","renderTagExpressions","tagKey","getTagValues","altValues","updateTag","newTag","addTag","addTagSegments","newPlusButton","QueryCtrl","templateUrl","styles","helpbtn","css","graphiteVersions","label","graphiteTypes","Object","entries","ConfigEditor","props","state","showMetricTankHelp","onOptionsChange","currentVersion","item","defaultUrl","dataSourceConfig","onChange","className","tooltip","onUpdateDatasourceJsonDataOptionSelect","variant","size","onClick","setState","prevState","href","PureComponent","toInteger","toBooleanOrTimestamp","parseSchemaRetentions","spec","vals","interval","retention","chunkspan","numchunks","ready","MetricTankMetaInspector","renderInfo","buckets","row","JSON","stringify","AnnotationsQueryCtrl","plugin","DataSourcePlugin","setQueryCtrl","setConfigEditor","setMetadataInspector","setAnnotationQueryCtrl"],"mappings":"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","file":"graphitePlugin.898fe9e20a782b4232fe.js","sourcesContent":["import _ from 'lodash';\n\nconst versionPattern = /^(\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))?(?:-([0-9A-Za-z\\.]+))?/;\n\nexport class SemVersion {\n  major: number;\n  minor: number;\n  patch: number;\n  meta: string;\n\n  constructor(version: string) {\n    const match = versionPattern.exec(version);\n    if (match) {\n      this.major = Number(match[1]);\n      this.minor = Number(match[2] || 0);\n      this.patch = Number(match[3] || 0);\n      this.meta = match[4];\n    }\n  }\n\n  isGtOrEq(version: string): boolean {\n    const compared = new SemVersion(version);\n\n    for (let i = 0; i < this.comparable.length; ++i) {\n      if (this.comparable[i] > compared.comparable[i]) {\n        return true;\n      }\n      if (this.comparable[i] < compared.comparable[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  isValid(): boolean {\n    return _.isNumber(this.major);\n  }\n\n  get comparable() {\n    return [this.major, this.minor, this.patch];\n  }\n}\n\nexport function isVersionGtOrEq(a: string, b: string): boolean {\n  const aSemver = new SemVersion(a);\n  return aSemver.isGtOrEq(b);\n}\n","import _ from 'lodash';\nimport { isVersionGtOrEq } from 'app/core/utils/version';\nimport { InterpolateFunction } from '@grafana/data';\n\nconst index: any = {};\n\nexport interface FuncDef {\n  name: any;\n  category?: string;\n  params?: any;\n  defaultParams?: any;\n  shortName?: any;\n  fake?: boolean;\n  version?: string;\n  description?: string;\n}\n\nfunction addFuncDef(funcDef: FuncDef) {\n  funcDef.params = funcDef.params || [];\n  funcDef.defaultParams = funcDef.defaultParams || [];\n\n  index[funcDef.name] = funcDef;\n  if (funcDef.shortName) {\n    index[funcDef.shortName] = funcDef;\n  }\n}\n\nconst optionalSeriesRefArgs = [{ name: 'other', type: 'value_or_series', optional: true, multiple: true }];\n\naddFuncDef({\n  name: 'scaleToSeconds',\n  category: 'Transform',\n  params: [{ name: 'seconds', type: 'int' }],\n  defaultParams: [1],\n});\n\naddFuncDef({\n  name: 'perSecond',\n  category: 'Transform',\n  params: [{ name: 'max value', type: 'int', optional: true }],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'holtWintersForecast',\n  category: 'Calculate',\n});\n\naddFuncDef({\n  name: 'holtWintersConfidenceBands',\n  category: 'Calculate',\n  params: [{ name: 'delta', type: 'int' }],\n  defaultParams: [3],\n});\n\naddFuncDef({\n  name: 'holtWintersAberration',\n  category: 'Calculate',\n  params: [{ name: 'delta', type: 'int' }],\n  defaultParams: [3],\n});\n\naddFuncDef({\n  name: 'nPercentile',\n  category: 'Calculate',\n  params: [{ name: 'Nth percentile', type: 'int' }],\n  defaultParams: [95],\n});\n\naddFuncDef({\n  name: 'diffSeries',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A'],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'stddevSeries',\n  params: optionalSeriesRefArgs,\n  defaultParams: [''],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'divideSeries',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A'],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'multiplySeries',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A'],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'asPercent',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A'],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'group',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A', '#B'],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'sumSeries',\n  shortName: 'sum',\n  category: 'Combine',\n  params: optionalSeriesRefArgs,\n  defaultParams: [''],\n});\n\naddFuncDef({\n  name: 'averageSeries',\n  shortName: 'avg',\n  category: 'Combine',\n  params: optionalSeriesRefArgs,\n  defaultParams: [''],\n});\n\naddFuncDef({\n  name: 'rangeOfSeries',\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'percentileOfSeries',\n  category: 'Combine',\n  params: [\n    { name: 'n', type: 'int' },\n    { name: 'interpolate', type: 'boolean', options: ['true', 'false'] },\n  ],\n  defaultParams: [95, 'false'],\n});\n\naddFuncDef({\n  name: 'sumSeriesWithWildcards',\n  category: 'Combine',\n  params: [{ name: 'node', type: 'int', multiple: true }],\n  defaultParams: [3],\n});\n\naddFuncDef({\n  name: 'maxSeries',\n  shortName: 'max',\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'minSeries',\n  shortName: 'min',\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'averageSeriesWithWildcards',\n  category: 'Combine',\n  params: [{ name: 'node', type: 'int', multiple: true }],\n  defaultParams: [3],\n});\n\naddFuncDef({\n  name: 'alias',\n  category: 'Alias',\n  params: [{ name: 'alias', type: 'string' }],\n  defaultParams: ['alias'],\n});\n\naddFuncDef({\n  name: 'aliasSub',\n  category: 'Alias',\n  params: [\n    { name: 'search', type: 'string' },\n    { name: 'replace', type: 'string' },\n  ],\n  defaultParams: ['', '\\\\1'],\n});\n\naddFuncDef({\n  name: 'consolidateBy',\n  category: 'Special',\n  params: [\n    {\n      name: 'function',\n      type: 'string',\n      options: ['sum', 'average', 'min', 'max'],\n    },\n  ],\n  defaultParams: ['max'],\n});\n\naddFuncDef({\n  name: 'cumulative',\n  category: 'Special',\n  params: [],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'groupByNode',\n  category: 'Combine',\n  params: [\n    {\n      name: 'node',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n    },\n    {\n      name: 'function',\n      type: 'string',\n      options: ['sum', 'avg', 'maxSeries'],\n    },\n  ],\n  defaultParams: [3, 'sum'],\n});\n\naddFuncDef({\n  name: 'aliasByNode',\n  category: 'Alias',\n  params: [\n    {\n      name: 'node',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n      multiple: true,\n    },\n  ],\n  defaultParams: [3],\n});\n\naddFuncDef({\n  name: 'substr',\n  category: 'Special',\n  params: [\n    {\n      name: 'start',\n      type: 'int',\n      options: [-6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n    },\n    {\n      name: 'stop',\n      type: 'int',\n      options: [-6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n    },\n  ],\n  defaultParams: [0, 0],\n});\n\naddFuncDef({\n  name: 'sortByName',\n  category: 'Sorting',\n  params: [\n    {\n      name: 'natural',\n      type: 'boolean',\n      options: ['true', 'false'],\n      optional: true,\n    },\n  ],\n  defaultParams: ['false'],\n});\n\naddFuncDef({\n  name: 'sortByMaxima',\n  category: 'Sorting',\n});\n\naddFuncDef({\n  name: 'sortByMinima',\n  category: 'Sorting',\n});\n\naddFuncDef({\n  name: 'sortByTotal',\n  category: 'Sorting',\n});\n\naddFuncDef({\n  name: 'aliasByMetric',\n  category: 'Alias',\n});\n\naddFuncDef({\n  name: 'randomWalk',\n  fake: true,\n  category: 'Special',\n  params: [{ name: 'name', type: 'string' }],\n  defaultParams: ['randomWalk'],\n});\n\naddFuncDef({\n  name: 'countSeries',\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'constantLine',\n  category: 'Special',\n  params: [{ name: 'value', type: 'int' }],\n  defaultParams: [10],\n});\n\naddFuncDef({\n  name: 'cactiStyle',\n  category: 'Special',\n});\n\naddFuncDef({\n  name: 'keepLastValue',\n  category: 'Transform',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [100],\n});\n\naddFuncDef({\n  name: 'changed',\n  category: 'Special',\n  params: [],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'scale',\n  category: 'Transform',\n  params: [{ name: 'factor', type: 'int' }],\n  defaultParams: [1],\n});\n\naddFuncDef({\n  name: 'offset',\n  category: 'Transform',\n  params: [{ name: 'amount', type: 'int' }],\n  defaultParams: [10],\n});\n\naddFuncDef({\n  name: 'transformNull',\n  category: 'Transform',\n  params: [{ name: 'amount', type: 'int' }],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'integral',\n  category: 'Transform',\n});\n\naddFuncDef({\n  name: 'derivative',\n  category: 'Transform',\n});\n\naddFuncDef({\n  name: 'nonNegativeDerivative',\n  category: 'Transform',\n  params: [{ name: 'max value or 0', type: 'int', optional: true }],\n  defaultParams: [''],\n});\n\naddFuncDef({\n  name: 'timeShift',\n  category: 'Transform',\n  params: [\n    {\n      name: 'amount',\n      type: 'select',\n      options: ['1h', '6h', '12h', '1d', '2d', '7d', '14d', '30d'],\n    },\n  ],\n  defaultParams: ['1d'],\n});\n\naddFuncDef({\n  name: 'timeStack',\n  category: 'Transform',\n  params: [\n    {\n      name: 'timeShiftUnit',\n      type: 'select',\n      options: ['1h', '6h', '12h', '1d', '2d', '7d', '14d', '30d'],\n    },\n    { name: 'timeShiftStart', type: 'int' },\n    { name: 'timeShiftEnd', type: 'int' },\n  ],\n  defaultParams: ['1d', 0, 7],\n});\n\naddFuncDef({\n  name: 'summarize',\n  category: 'Transform',\n  params: [\n    { name: 'interval', type: 'string' },\n    {\n      name: 'func',\n      type: 'select',\n      options: ['sum', 'avg', 'min', 'max', 'last'],\n    },\n    {\n      name: 'alignToFrom',\n      type: 'boolean',\n      optional: true,\n      options: ['false', 'true'],\n    },\n  ],\n  defaultParams: ['1h', 'sum', 'false'],\n});\n\naddFuncDef({\n  name: 'smartSummarize',\n  category: 'Transform',\n  params: [\n    { name: 'interval', type: 'string' },\n    {\n      name: 'func',\n      type: 'select',\n      options: ['sum', 'avg', 'min', 'max', 'last'],\n    },\n  ],\n  defaultParams: ['1h', 'sum'],\n});\n\naddFuncDef({\n  name: 'absolute',\n  category: 'Transform',\n});\n\naddFuncDef({\n  name: 'hitcount',\n  category: 'Transform',\n  params: [{ name: 'interval', type: 'string' }],\n  defaultParams: ['10s'],\n});\n\naddFuncDef({\n  name: 'log',\n  category: 'Transform',\n  params: [{ name: 'base', type: 'int' }],\n  defaultParams: ['10'],\n});\n\naddFuncDef({\n  name: 'averageAbove',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [25],\n});\n\naddFuncDef({\n  name: 'averageBelow',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [25],\n});\n\naddFuncDef({\n  name: 'currentAbove',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [25],\n});\n\naddFuncDef({\n  name: 'currentBelow',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [25],\n});\n\naddFuncDef({\n  name: 'maximumAbove',\n  category: 'Filter Series',\n  params: [{ name: 'value', type: 'int' }],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'maximumBelow',\n  category: 'Filter Series',\n  params: [{ name: 'value', type: 'int' }],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'minimumAbove',\n  category: 'Filter Series',\n  params: [{ name: 'value', type: 'int' }],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'minimumBelow',\n  category: 'Filter Series',\n  params: [{ name: 'value', type: 'int' }],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'limit',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'mostDeviant',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [10],\n});\n\naddFuncDef({\n  name: 'exclude',\n  category: 'Filter Series',\n  params: [{ name: 'exclude', type: 'string' }],\n  defaultParams: ['exclude'],\n});\n\naddFuncDef({\n  name: 'highestCurrent',\n  category: 'Filter Series',\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'highestMax',\n  category: 'Filter Series',\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'lowestCurrent',\n  category: 'Filter Series',\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'movingAverage',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: [10],\n});\n\naddFuncDef({\n  name: 'movingMedian',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: ['5'],\n});\n\naddFuncDef({\n  name: 'stdev',\n  category: 'Calculate',\n  params: [\n    { name: 'n', type: 'int' },\n    { name: 'tolerance', type: 'int' },\n  ],\n  defaultParams: [5, 0.1],\n});\n\naddFuncDef({\n  name: 'highestAverage',\n  category: 'Filter Series',\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'lowestAverage',\n  category: 'Filter Series',\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'removeAbovePercentile',\n  category: 'Filter Data',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'removeAboveValue',\n  category: 'Filter Data',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'removeBelowPercentile',\n  category: 'Filter Data',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'removeBelowValue',\n  category: 'Filter Data',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'useSeriesAbove',\n  category: 'Filter Series',\n  params: [\n    { name: 'value', type: 'int' },\n    { name: 'search', type: 'string' },\n    { name: 'replace', type: 'string' },\n  ],\n  defaultParams: [0, 'search', 'replace'],\n});\n\n////////////////////\n// Graphite 1.0.x //\n////////////////////\n\naddFuncDef({\n  name: 'aggregateLine',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'func',\n      type: 'select',\n      options: ['sum', 'avg', 'min', 'max', 'last'],\n    },\n  ],\n  defaultParams: ['avg'],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'averageOutsidePercentile',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [95],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'delay',\n  category: 'Transform',\n  params: [{ name: 'steps', type: 'int' }],\n  defaultParams: [1],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'exponentialMovingAverage',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: [10],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'fallbackSeries',\n  category: 'Special',\n  params: [{ name: 'fallback', type: 'string' }],\n  defaultParams: ['constantLine(0)'],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'grep',\n  category: 'Filter Series',\n  params: [{ name: 'grep', type: 'string' }],\n  defaultParams: ['grep'],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'groupByNodes',\n  category: 'Combine',\n  params: [\n    {\n      name: 'function',\n      type: 'string',\n      options: ['sum', 'avg', 'maxSeries'],\n    },\n    {\n      name: 'node',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n      multiple: true,\n    },\n  ],\n  defaultParams: ['sum', 3],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'integralByInterval',\n  category: 'Transform',\n  params: [\n    {\n      name: 'intervalUnit',\n      type: 'select',\n      options: ['1h', '6h', '12h', '1d', '2d', '7d', '14d', '30d'],\n    },\n  ],\n  defaultParams: ['1d'],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'interpolate',\n  category: 'Transform',\n  params: [{ name: 'limit', type: 'int', optional: true }],\n  defaultParams: [],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'invert',\n  category: 'Transform',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'isNonNull',\n  category: 'Combine',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'linearRegression',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'startSourceAt',\n      type: 'select',\n      options: ['-1h', '-6h', '-12h', '-1d', '-2d', '-7d', '-14d', '-30d'],\n      optional: true,\n    },\n    {\n      name: 'endSourceAt',\n      type: 'select',\n      options: ['-1h', '-6h', '-12h', '-1d', '-2d', '-7d', '-14d', '-30d'],\n      optional: true,\n    },\n  ],\n  defaultParams: [],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'mapSeries',\n  shortName: 'map',\n  params: [{ name: 'node', type: 'int' }],\n  defaultParams: [3],\n  category: 'Combine',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'movingMin',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: [10],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'movingMax',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: [10],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'movingSum',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: [10],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'multiplySeriesWithWildcards',\n  category: 'Combine',\n  params: [\n    {\n      name: 'position',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n      multiple: true,\n    },\n  ],\n  defaultParams: [2],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'offsetToZero',\n  category: 'Transform',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'pow',\n  category: 'Transform',\n  params: [{ name: 'factor', type: 'int' }],\n  defaultParams: [10],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'powSeries',\n  category: 'Transform',\n  params: optionalSeriesRefArgs,\n  defaultParams: [''],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'reduceSeries',\n  shortName: 'reduce',\n  params: [\n    {\n      name: 'function',\n      type: 'string',\n      options: ['asPercent', 'diffSeries', 'divideSeries'],\n    },\n    {\n      name: 'reduceNode',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],\n    },\n    { name: 'reduceMatchers', type: 'string', multiple: true },\n  ],\n  defaultParams: ['asPercent', 2, 'used_bytes'],\n  category: 'Combine',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'removeBetweenPercentile',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [95],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'removeEmptySeries',\n  category: 'Filter Series',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'squareRoot',\n  category: 'Transform',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'timeSlice',\n  category: 'Transform',\n  params: [\n    {\n      name: 'startSliceAt',\n      type: 'select',\n      options: ['-1h', '-6h', '-12h', '-1d', '-2d', '-7d', '-14d', '-30d'],\n    },\n    {\n      name: 'endSliceAt',\n      type: 'select',\n      options: ['-1h', '-6h', '-12h', '-1d', '-2d', '-7d', '-14d', '-30d'],\n      optional: true,\n    },\n  ],\n  defaultParams: ['-1h'],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'weightedAverage',\n  category: 'Combine',\n  params: [\n    { name: 'other', type: 'value_or_series', optional: true },\n    {\n      name: 'node',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n    },\n  ],\n  defaultParams: ['#A', 4],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'seriesByTag',\n  category: 'Special',\n  params: [{ name: 'tagExpression', type: 'string', multiple: true }],\n  version: '1.1',\n});\n\naddFuncDef({\n  name: 'groupByTags',\n  category: 'Combine',\n  params: [\n    {\n      name: 'function',\n      type: 'string',\n      options: ['sum', 'avg', 'maxSeries'],\n    },\n    { name: 'tag', type: 'string', multiple: true },\n  ],\n  defaultParams: ['sum', 'tag'],\n  version: '1.1',\n});\n\naddFuncDef({\n  name: 'aliasByTags',\n  category: 'Alias',\n  params: [{ name: 'tag', type: 'string', multiple: true }],\n  defaultParams: ['tag'],\n  version: '1.1',\n});\n\nfunction isVersionRelatedFunction(obj: { version: string }, graphiteVersion: string) {\n  return !obj.version || isVersionGtOrEq(graphiteVersion, obj.version);\n}\n\nexport class FuncInstance {\n  def: any;\n  params: any;\n  text: any;\n  added: boolean;\n\n  constructor(funcDef: any, options: { withDefaultParams: any }) {\n    this.def = funcDef;\n    this.params = [];\n\n    if (options && options.withDefaultParams) {\n      this.params = funcDef.defaultParams.slice(0);\n    }\n\n    this.updateText();\n  }\n\n  render(metricExp: string, replaceVariables: InterpolateFunction): string {\n    const str = this.def.name + '(';\n\n    const parameters = _.map(this.params, (value, index) => {\n      let paramType;\n\n      if (index < this.def.params.length) {\n        paramType = this.def.params[index].type;\n      } else if (_.get(_.last(this.def.params), 'multiple')) {\n        paramType = _.get(_.last(this.def.params), 'type');\n      }\n\n      // param types that should never be quoted\n      if (_.includes(['value_or_series', 'boolean', 'int', 'float', 'node'], paramType)) {\n        return value;\n      }\n\n      const valueInterpolated = _.isString(value) ? replaceVariables(value) : value;\n\n      // param types that might be quoted\n      // To quote variables correctly we need to interpolate it to check if it contains a numeric or string value\n      if (_.includes(['int_or_interval', 'node_or_tag'], paramType) && _.isFinite(+valueInterpolated)) {\n        return _.toString(value);\n      }\n\n      return \"'\" + value + \"'\";\n    });\n\n    // don't send any blank parameters to graphite\n    while (parameters[parameters.length - 1] === '') {\n      parameters.pop();\n    }\n\n    if (metricExp) {\n      parameters.unshift(metricExp);\n    }\n\n    return str + parameters.join(', ') + ')';\n  }\n\n  _hasMultipleParamsInString(strValue: any, index: number) {\n    if (strValue.indexOf(',') === -1) {\n      return false;\n    }\n\n    if (this.def.params[index + 1] && this.def.params[index + 1].optional) {\n      return true;\n    }\n\n    if (index + 1 >= this.def.params.length && _.get(_.last(this.def.params), 'multiple')) {\n      return true;\n    }\n\n    return false;\n  }\n\n  updateParam(strValue: any, index: any) {\n    // handle optional parameters\n    // if string contains ',' and next param is optional, split and update both\n    if (this._hasMultipleParamsInString(strValue, index)) {\n      _.each(strValue.split(','), (partVal, idx) => {\n        this.updateParam(partVal.trim(), index + idx);\n      });\n      return;\n    }\n\n    if (strValue === '' && (index >= this.def.params.length || this.def.params[index].optional)) {\n      this.params.splice(index, 1);\n    } else {\n      this.params[index] = strValue;\n    }\n\n    this.updateText();\n  }\n\n  updateText() {\n    if (this.params.length === 0) {\n      this.text = this.def.name + '()';\n      return;\n    }\n\n    let text = this.def.name + '(';\n    text += this.params.join(', ');\n    text += ')';\n    this.text = text;\n  }\n}\n\nfunction createFuncInstance(funcDef: any, options?: { withDefaultParams: any }, idx?: any) {\n  if (_.isString(funcDef)) {\n    funcDef = getFuncDef(funcDef, idx);\n  }\n  return new FuncInstance(funcDef, options);\n}\n\nfunction getFuncDef(name: string, idx?: any) {\n  if (!(idx || index)[name]) {\n    throw { message: 'Method not found ' + name };\n  }\n  return (idx || index)[name];\n}\n\nfunction getFuncDefs(graphiteVersion: string, idx?: any) {\n  const funcs: any = {};\n  _.forEach(idx || index, funcDef => {\n    if (isVersionRelatedFunction(funcDef, graphiteVersion)) {\n      funcs[funcDef.name] = _.assign({}, funcDef, {\n        params: _.filter(funcDef.params, param => {\n          return isVersionRelatedFunction(param, graphiteVersion);\n        }),\n      });\n    }\n  });\n  return funcs;\n}\n\n// parse response from graphite /functions endpoint into internal format\nfunction parseFuncDefs(rawDefs: any) {\n  const funcDefs: any = {};\n\n  _.forEach(rawDefs || {}, (funcDef, funcName) => {\n    // skip graphite graph functions\n    if (funcDef.group === 'Graph') {\n      return;\n    }\n\n    let description = funcDef.description;\n    if (description) {\n      // tidy up some pydoc syntax that rst2html can't handle\n      description = description\n        .replace(/:py:func:`(.+)( <[^>]*>)?`/g, '``$1``')\n        .replace(/.. seealso:: /g, 'See also: ')\n        .replace(/.. code-block *:: *none/g, '.. code-block::');\n    }\n\n    const func: FuncDef = {\n      name: funcDef.name,\n      description,\n      category: funcDef.group,\n      params: [],\n      defaultParams: [],\n      fake: false,\n    };\n\n    // get rid of the first \"seriesList\" param\n    if (/^seriesLists?$/.test(_.get(funcDef, 'params[0].type', ''))) {\n      // handle functions that accept multiple seriesLists\n      // we leave the param in place but mark it optional, so users can add more series if they wish\n      if (funcDef.params[0].multiple) {\n        funcDef.params[0].required = false;\n        // otherwise chop off the first param, it'll be handled separately\n      } else {\n        funcDef.params.shift();\n      }\n      // tag function as fake\n    } else {\n      func.fake = true;\n    }\n\n    _.forEach(funcDef.params, rawParam => {\n      const param: any = {\n        name: rawParam.name,\n        type: 'string',\n        optional: !rawParam.required,\n        multiple: !!rawParam.multiple,\n        options: undefined,\n      };\n\n      if (rawParam.default !== undefined) {\n        func.defaultParams.push(_.toString(rawParam.default));\n      } else if (rawParam.suggestions) {\n        func.defaultParams.push(_.toString(rawParam.suggestions[0]));\n      } else {\n        func.defaultParams.push('');\n      }\n\n      if (rawParam.type === 'boolean') {\n        param.type = 'boolean';\n        param.options = ['true', 'false'];\n      } else if (rawParam.type === 'integer') {\n        param.type = 'int';\n      } else if (rawParam.type === 'float') {\n        param.type = 'float';\n      } else if (rawParam.type === 'node') {\n        param.type = 'node';\n        param.options = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];\n      } else if (rawParam.type === 'nodeOrTag') {\n        param.type = 'node_or_tag';\n        param.options = ['name', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];\n      } else if (rawParam.type === 'intOrInterval') {\n        param.type = 'int_or_interval';\n      } else if (rawParam.type === 'seriesList') {\n        param.type = 'value_or_series';\n      }\n\n      if (rawParam.options) {\n        param.options = _.map(rawParam.options, _.toString);\n      } else if (rawParam.suggestions) {\n        param.options = _.map(rawParam.suggestions, _.toString);\n      }\n\n      func.params.push(param);\n    });\n\n    funcDefs[funcName] = func;\n  });\n\n  return funcDefs;\n}\n\nexport default {\n  createFuncInstance: createFuncInstance,\n  getFuncDef: getFuncDef,\n  getFuncDefs: getFuncDefs,\n  parseFuncDefs: parseFuncDefs,\n};\n","import { DataQuery, DataSourceJsonData } from '@grafana/data';\n\nexport interface GraphiteQuery extends DataQuery {\n  target?: string;\n}\n\nexport interface GraphiteOptions extends DataSourceJsonData {\n  graphiteVersion: string;\n  graphiteType: GraphiteType;\n}\n\nexport enum GraphiteType {\n  Default = 'default',\n  Metrictank = 'metrictank',\n}\n\nexport interface MetricTankRequestMeta {\n  [key: string]: any; // TODO -- fill this with real values from metrictank\n}\n\nexport interface MetricTankResultMeta {\n  'schema-name': string;\n  'schema-retentions': string; //\"1s:35d:20min:5:1542274085,1min:38d:2h:1:true,10min:120d:6h:1:true,2h:2y:6h:2\",\n  'archive-read': number;\n  'archive-interval': number;\n  'aggnum-norm': number;\n  'consolidate-normfetch': string; //\"MaximumConsolidator\",\n  'aggnum-rc': number;\n  'consolidate-rc': string; //\"MaximumConsolidator\",\n  count: number;\n}\n\nexport interface MetricTankMeta {\n  request: MetricTankRequestMeta;\n  info: MetricTankResultMeta[];\n}\n","import _ from 'lodash';\nimport {\n  DataFrame,\n  dateMath,\n  ScopedVars,\n  DataQueryResponse,\n  DataQueryRequest,\n  toDataFrame,\n  DataSourceApi,\n} from '@grafana/data';\nimport { isVersionGtOrEq, SemVersion } from 'app/core/utils/version';\nimport gfunc from './gfunc';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { TemplateSrv } from 'app/features/templating/template_srv';\n//Types\nimport { GraphiteOptions, GraphiteQuery, GraphiteType } from './types';\nimport { getSearchFilterScopedVar } from '../../../features/templating/variable';\n\nexport class GraphiteDatasource extends DataSourceApi<GraphiteQuery, GraphiteOptions> {\n  basicAuth: string;\n  url: string;\n  name: string;\n  graphiteVersion: any;\n  supportsTags: boolean;\n  isMetricTank: boolean;\n  cacheTimeout: any;\n  withCredentials: boolean;\n  funcDefs: any = null;\n  funcDefsPromise: Promise<any> = null;\n  _seriesRefLetters: string;\n\n  /** @ngInject */\n  constructor(instanceSettings: any, private templateSrv: TemplateSrv) {\n    super(instanceSettings);\n    this.basicAuth = instanceSettings.basicAuth;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.graphiteVersion = instanceSettings.jsonData.graphiteVersion || '0.9';\n    this.isMetricTank = instanceSettings.jsonData.graphiteType === GraphiteType.Metrictank;\n    this.supportsTags = supportsTags(this.graphiteVersion);\n    this.cacheTimeout = instanceSettings.cacheTimeout;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.funcDefs = null;\n    this.funcDefsPromise = null;\n    this._seriesRefLetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  }\n\n  getQueryOptionsInfo() {\n    return {\n      maxDataPoints: true,\n      cacheTimeout: true,\n      links: [\n        {\n          text: 'Help',\n          url: 'http://docs.grafana.org/features/datasources/graphite/#using-graphite-in-grafana',\n        },\n      ],\n    };\n  }\n\n  async query(options: DataQueryRequest<GraphiteQuery>): Promise<DataQueryResponse> {\n    const graphOptions = {\n      from: this.translateTime(options.rangeRaw.from, false, options.timezone),\n      until: this.translateTime(options.rangeRaw.to, true, options.timezone),\n      targets: options.targets,\n      format: (options as any).format,\n      cacheTimeout: options.cacheTimeout || this.cacheTimeout,\n      maxDataPoints: options.maxDataPoints,\n    };\n\n    const params = this.buildGraphiteParams(graphOptions, options.scopedVars);\n    if (params.length === 0) {\n      return Promise.resolve({ data: [] });\n    }\n\n    if (this.isMetricTank) {\n      params.push('meta=true');\n    }\n\n    const httpOptions: any = {\n      method: 'POST',\n      url: '/render',\n      data: params.join('&'),\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    };\n\n    this.addTracingHeaders(httpOptions, options);\n\n    if (options.panelId) {\n      httpOptions.requestId = this.name + '.panelId.' + options.panelId;\n    }\n\n    return this.doGraphiteRequest(httpOptions).then(this.convertResponseToDataFrames);\n  }\n\n  addTracingHeaders(httpOptions: { headers: any }, options: { dashboardId: any; panelId: any }) {\n    const proxyMode = !this.url.match(/^http/);\n    if (proxyMode) {\n      httpOptions.headers['X-Dashboard-Id'] = options.dashboardId;\n      httpOptions.headers['X-Panel-Id'] = options.panelId;\n    }\n  }\n\n  convertResponseToDataFrames = (result: any): DataQueryResponse => {\n    const data: DataFrame[] = [];\n    if (!result || !result.data) {\n      return { data };\n    }\n    // Series are either at the root or under a node called 'series'\n    const series = result.data.series || result.data;\n    if (!_.isArray(series)) {\n      throw { message: 'Missing series in result', data: result };\n    }\n\n    for (let i = 0; i < series.length; i++) {\n      const s = series[i];\n      for (let y = 0; y < s.datapoints.length; y++) {\n        s.datapoints[y][1] *= 1000;\n      }\n      const frame = toDataFrame(s);\n\n      // Metrictank metadata\n      if (s.meta) {\n        frame.meta = {\n          custom: {\n            request: result.data.meta, // info for the whole request\n            info: s.meta, // Array of metadata\n          },\n        };\n      }\n      data.push(frame);\n    }\n    return { data };\n  };\n\n  parseTags(tagString: string) {\n    let tags: string[] = [];\n    tags = tagString.split(',');\n    if (tags.length === 1) {\n      tags = tagString.split(' ');\n      if (tags[0] === '') {\n        tags = [];\n      }\n    }\n    return tags;\n  }\n\n  interpolateVariablesInQueries(queries: GraphiteQuery[], scopedVars: ScopedVars): GraphiteQuery[] {\n    let expandedQueries = queries;\n    if (queries && queries.length > 0) {\n      expandedQueries = queries.map(query => {\n        const expandedQuery = {\n          ...query,\n          datasource: this.name,\n          target: this.templateSrv.replace(query.target, scopedVars),\n        };\n        return expandedQuery;\n      });\n    }\n    return expandedQueries;\n  }\n\n  annotationQuery(options: any) {\n    // Graphite metric as annotation\n    if (options.annotation.target) {\n      const target = this.templateSrv.replace(options.annotation.target, {}, 'glob');\n      const graphiteQuery = ({\n        rangeRaw: options.rangeRaw,\n        targets: [{ target: target }],\n        format: 'json',\n        maxDataPoints: 100,\n      } as unknown) as DataQueryRequest<GraphiteQuery>;\n\n      return this.query(graphiteQuery).then(result => {\n        const list = [];\n\n        for (let i = 0; i < result.data.length; i++) {\n          const target = result.data[i];\n\n          for (let y = 0; y < target.length; y++) {\n            const time = target.fields[1].values.get(y);\n            const value = target.fields[0].values.get(y);\n\n            if (!value) {\n              continue;\n            }\n\n            list.push({\n              annotation: options.annotation,\n              time,\n              title: target.name,\n            });\n          }\n        }\n\n        return list;\n      });\n    } else {\n      // Graphite event as annotation\n      const tags = this.templateSrv.replace(options.annotation.tags);\n      return this.events({ range: options.rangeRaw, tags: tags }).then((results: any) => {\n        const list = [];\n        for (let i = 0; i < results.data.length; i++) {\n          const e = results.data[i];\n\n          let tags = e.tags;\n          if (_.isString(e.tags)) {\n            tags = this.parseTags(e.tags);\n          }\n\n          list.push({\n            annotation: options.annotation,\n            time: e.when * 1000,\n            title: e.what,\n            tags: tags,\n            text: e.data,\n          });\n        }\n\n        return list;\n      });\n    }\n  }\n\n  events(options: { range: any; tags: any; timezone?: any }) {\n    try {\n      let tags = '';\n      if (options.tags) {\n        tags = '&tags=' + options.tags;\n      }\n      return this.doGraphiteRequest({\n        method: 'GET',\n        url:\n          '/events/get_data?from=' +\n          this.translateTime(options.range.from, false, options.timezone) +\n          '&until=' +\n          this.translateTime(options.range.to, true, options.timezone) +\n          tags,\n      });\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n\n  targetContainsTemplate(target: GraphiteQuery) {\n    return this.templateSrv.variableExists(target.target);\n  }\n\n  translateTime(date: any, roundUp: any, timezone: any) {\n    if (_.isString(date)) {\n      if (date === 'now') {\n        return 'now';\n      } else if (date.indexOf('now-') >= 0 && date.indexOf('/') === -1) {\n        date = date.substring(3);\n        date = date.replace('m', 'min');\n        date = date.replace('M', 'mon');\n        return date;\n      }\n      date = dateMath.parse(date, roundUp, timezone);\n    }\n\n    // graphite' s from filter is exclusive\n    // here we step back one minute in order\n    // to guarantee that we get all the data that\n    // exists for the specified range\n    if (roundUp) {\n      if (date.get('s')) {\n        date.add(1, 's');\n      }\n    } else if (roundUp === false) {\n      if (date.get('s')) {\n        date.subtract(1, 's');\n      }\n    }\n\n    return date.unix();\n  }\n\n  metricFindQuery(query: string, optionalOptions: any) {\n    const options: any = optionalOptions || {};\n    let interpolatedQuery = this.templateSrv.replace(\n      query,\n      getSearchFilterScopedVar({ query, wildcardChar: '', options: optionalOptions })\n    );\n\n    // special handling for tag_values(<tag>[,<expression>]*), this is used for template variables\n    let matches = interpolatedQuery.match(/^tag_values\\(([^,]+)((, *[^,]+)*)\\)$/);\n    if (matches) {\n      const expressions = [];\n      const exprRegex = /, *([^,]+)/g;\n      let match = exprRegex.exec(matches[2]);\n      while (match !== null) {\n        expressions.push(match[1]);\n        match = exprRegex.exec(matches[2]);\n      }\n      options.limit = 10000;\n      return this.getTagValuesAutoComplete(expressions, matches[1], undefined, options);\n    }\n\n    // special handling for tags(<expression>[,<expression>]*), this is used for template variables\n    matches = interpolatedQuery.match(/^tags\\(([^,]*)((, *[^,]+)*)\\)$/);\n    if (matches) {\n      const expressions = [];\n      if (matches[1]) {\n        expressions.push(matches[1]);\n        const exprRegex = /, *([^,]+)/g;\n        let match = exprRegex.exec(matches[2]);\n        while (match !== null) {\n          expressions.push(match[1]);\n          match = exprRegex.exec(matches[2]);\n        }\n      }\n      options.limit = 10000;\n      return this.getTagsAutoComplete(expressions, undefined, options);\n    }\n\n    interpolatedQuery = this.templateSrv.replace(\n      query,\n      getSearchFilterScopedVar({ query, wildcardChar: '*', options: optionalOptions })\n    );\n\n    const httpOptions: any = {\n      method: 'POST',\n      url: '/metrics/find',\n      params: {},\n      data: `query=${interpolatedQuery}`,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      // for cancellations\n      requestId: options.requestId,\n    };\n\n    if (options.range) {\n      httpOptions.params.from = this.translateTime(options.range.from, false, options.timezone);\n      httpOptions.params.until = this.translateTime(options.range.to, true, options.timezone);\n    }\n\n    return this.doGraphiteRequest(httpOptions).then((results: any) => {\n      return _.map(results.data, metric => {\n        return {\n          text: metric.text,\n          expandable: metric.expandable ? true : false,\n        };\n      });\n    });\n  }\n\n  getTags(optionalOptions: any) {\n    const options = optionalOptions || {};\n\n    const httpOptions: any = {\n      method: 'GET',\n      url: '/tags',\n      // for cancellations\n      requestId: options.requestId,\n    };\n\n    if (options.range) {\n      httpOptions.params.from = this.translateTime(options.range.from, false, options.timezone);\n      httpOptions.params.until = this.translateTime(options.range.to, true, options.timezone);\n    }\n\n    return this.doGraphiteRequest(httpOptions).then((results: any) => {\n      return _.map(results.data, tag => {\n        return {\n          text: tag.tag,\n          id: tag.id,\n        };\n      });\n    });\n  }\n\n  getTagValues(options: any = {}) {\n    const httpOptions: any = {\n      method: 'GET',\n      url: '/tags/' + this.templateSrv.replace(options.key),\n      // for cancellations\n      requestId: options.requestId,\n    };\n\n    if (options.range) {\n      httpOptions.params.from = this.translateTime(options.range.from, false, options.timezone);\n      httpOptions.params.until = this.translateTime(options.range.to, true, options.timezone);\n    }\n\n    return this.doGraphiteRequest(httpOptions).then((results: any) => {\n      if (results.data && results.data.values) {\n        return _.map(results.data.values, value => {\n          return {\n            text: value.value,\n            id: value.id,\n          };\n        });\n      } else {\n        return [];\n      }\n    });\n  }\n\n  getTagsAutoComplete(expressions: any[], tagPrefix: any, optionalOptions: any) {\n    const options = optionalOptions || {};\n\n    const httpOptions: any = {\n      method: 'GET',\n      url: '/tags/autoComplete/tags',\n      params: {\n        expr: _.map(expressions, expression => this.templateSrv.replace((expression || '').trim())),\n      },\n      // for cancellations\n      requestId: options.requestId,\n    };\n\n    if (tagPrefix) {\n      httpOptions.params.tagPrefix = tagPrefix;\n    }\n    if (options.limit) {\n      httpOptions.params.limit = options.limit;\n    }\n    if (options.range) {\n      httpOptions.params.from = this.translateTime(options.range.from, false, options.timezone);\n      httpOptions.params.until = this.translateTime(options.range.to, true, options.timezone);\n    }\n\n    return this.doGraphiteRequest(httpOptions).then((results: any) => {\n      if (results.data) {\n        return _.map(results.data, tag => {\n          return { text: tag };\n        });\n      } else {\n        return [];\n      }\n    });\n  }\n\n  getTagValuesAutoComplete(expressions: any[], tag: any, valuePrefix: any, optionalOptions: any) {\n    const options = optionalOptions || {};\n\n    const httpOptions: any = {\n      method: 'GET',\n      url: '/tags/autoComplete/values',\n      params: {\n        expr: _.map(expressions, expression => this.templateSrv.replace((expression || '').trim())),\n        tag: this.templateSrv.replace((tag || '').trim()),\n      },\n      // for cancellations\n      requestId: options.requestId,\n    };\n\n    if (valuePrefix) {\n      httpOptions.params.valuePrefix = valuePrefix;\n    }\n    if (options.limit) {\n      httpOptions.params.limit = options.limit;\n    }\n    if (options.range) {\n      httpOptions.params.from = this.translateTime(options.range.from, false, options.timezone);\n      httpOptions.params.until = this.translateTime(options.range.to, true, options.timezone);\n    }\n\n    return this.doGraphiteRequest(httpOptions).then((results: any) => {\n      if (results.data) {\n        return _.map(results.data, value => {\n          return { text: value };\n        });\n      } else {\n        return [];\n      }\n    });\n  }\n\n  getVersion(optionalOptions: any) {\n    const options = optionalOptions || {};\n\n    const httpOptions = {\n      method: 'GET',\n      url: '/version',\n      requestId: options.requestId,\n    };\n\n    return this.doGraphiteRequest(httpOptions)\n      .then((results: any) => {\n        if (results.data) {\n          const semver = new SemVersion(results.data);\n          return semver.isValid() ? results.data : '';\n        }\n        return '';\n      })\n      .catch(() => {\n        return '';\n      });\n  }\n\n  createFuncInstance(funcDef: any, options?: any) {\n    return gfunc.createFuncInstance(funcDef, options, this.funcDefs);\n  }\n\n  getFuncDef(name: string) {\n    return gfunc.getFuncDef(name, this.funcDefs);\n  }\n\n  waitForFuncDefsLoaded() {\n    return this.getFuncDefs();\n  }\n\n  getFuncDefs() {\n    if (this.funcDefsPromise !== null) {\n      return this.funcDefsPromise;\n    }\n\n    if (!supportsFunctionIndex(this.graphiteVersion)) {\n      this.funcDefs = gfunc.getFuncDefs(this.graphiteVersion);\n      this.funcDefsPromise = Promise.resolve(this.funcDefs);\n      return this.funcDefsPromise;\n    }\n\n    const httpOptions = {\n      method: 'GET',\n      url: '/functions',\n    };\n\n    this.funcDefsPromise = this.doGraphiteRequest(httpOptions)\n      .then((results: any) => {\n        if (results.status !== 200 || typeof results.data !== 'object') {\n          this.funcDefs = gfunc.getFuncDefs(this.graphiteVersion);\n        } else {\n          this.funcDefs = gfunc.parseFuncDefs(results.data);\n        }\n        return this.funcDefs;\n      })\n      .catch((err: any) => {\n        console.log('Fetching graphite functions error', err);\n        this.funcDefs = gfunc.getFuncDefs(this.graphiteVersion);\n        return this.funcDefs;\n      });\n\n    return this.funcDefsPromise;\n  }\n\n  testDatasource() {\n    const query = ({\n      panelId: 3,\n      rangeRaw: { from: 'now-1h', to: 'now' },\n      targets: [{ target: 'constantLine(100)' }],\n      maxDataPoints: 300,\n    } as unknown) as DataQueryRequest<GraphiteQuery>;\n    return this.query(query).then(() => {\n      return { status: 'success', message: 'Data source is working' };\n    });\n  }\n\n  doGraphiteRequest(options: {\n    method?: string;\n    url: any;\n    requestId?: any;\n    withCredentials?: any;\n    headers?: any;\n    inspect?: any;\n  }) {\n    if (this.basicAuth || this.withCredentials) {\n      options.withCredentials = true;\n    }\n    if (this.basicAuth) {\n      options.headers = options.headers || {};\n      options.headers.Authorization = this.basicAuth;\n    }\n\n    options.url = this.url + options.url;\n    options.inspect = { type: 'graphite' };\n\n    return getBackendSrv().datasourceRequest(options);\n  }\n\n  buildGraphiteParams(options: any, scopedVars: ScopedVars): string[] {\n    const graphiteOptions = ['from', 'until', 'rawData', 'format', 'maxDataPoints', 'cacheTimeout'];\n    const cleanOptions = [],\n      targets: any = {};\n    let target, targetValue, i;\n    const regex = /\\#([A-Z])/g;\n    const intervalFormatFixRegex = /'(\\d+)m'/gi;\n    let hasTargets = false;\n\n    options['format'] = 'json';\n\n    function fixIntervalFormat(match: any) {\n      return match.replace('m', 'min').replace('M', 'mon');\n    }\n\n    for (i = 0; i < options.targets.length; i++) {\n      target = options.targets[i];\n      if (!target.target) {\n        continue;\n      }\n\n      if (!target.refId) {\n        target.refId = this._seriesRefLetters[i];\n      }\n\n      targetValue = this.templateSrv.replace(target.target, scopedVars);\n      targetValue = targetValue.replace(intervalFormatFixRegex, fixIntervalFormat);\n      targets[target.refId] = targetValue;\n    }\n\n    function nestedSeriesRegexReplacer(match: any, g1: string | number) {\n      return targets[g1] || match;\n    }\n\n    for (i = 0; i < options.targets.length; i++) {\n      target = options.targets[i];\n      if (!target.target) {\n        continue;\n      }\n\n      targetValue = targets[target.refId];\n      targetValue = targetValue.replace(regex, nestedSeriesRegexReplacer);\n      targets[target.refId] = targetValue;\n\n      if (!target.hide) {\n        hasTargets = true;\n        cleanOptions.push('target=' + encodeURIComponent(targetValue));\n      }\n    }\n\n    _.each(options, (value, key) => {\n      if (_.indexOf(graphiteOptions, key) === -1) {\n        return;\n      }\n      if (value) {\n        cleanOptions.push(key + '=' + encodeURIComponent(value));\n      }\n    });\n\n    if (!hasTargets) {\n      return [];\n    }\n\n    return cleanOptions;\n  }\n}\n\nfunction supportsTags(version: string): boolean {\n  return isVersionGtOrEq(version, '1.1');\n}\n\nfunction supportsFunctionIndex(version: string): boolean {\n  return isVersionGtOrEq(version, '1.1');\n}\n","import _ from 'lodash';\nimport $ from 'jquery';\n// @ts-ignore\nimport Drop from 'tether-drop';\nimport coreModule from 'app/core/core_module';\nimport { FuncDef } from './gfunc';\n\n/** @ngInject */\nexport function graphiteAddFunc($compile: any) {\n  const inputTemplate =\n    '<input type=\"text\"' + ' class=\"gf-form-input\"' + ' spellcheck=\"false\" style=\"display:none\"></input>';\n\n  const buttonTemplate =\n    '<a class=\"gf-form-label query-part dropdown-toggle\"' +\n    ' tabindex=\"1\" gf-dropdown=\"functionMenu\" data-toggle=\"dropdown\">' +\n    '<i class=\"fa fa-plus\"></i></a>';\n\n  return {\n    link: function($scope: any, elem: JQuery) {\n      const ctrl = $scope.ctrl;\n\n      const $input = $(inputTemplate);\n      const $button = $(buttonTemplate);\n\n      $input.appendTo(elem);\n      $button.appendTo(elem);\n\n      ctrl.datasource.getFuncDefs().then((funcDefs: FuncDef[]) => {\n        const allFunctions = _.map(funcDefs, 'name').sort();\n\n        $scope.functionMenu = createFunctionDropDownMenu(funcDefs);\n\n        $input.attr('data-provide', 'typeahead');\n        $input.typeahead({\n          source: allFunctions,\n          minLength: 1,\n          items: 10,\n          updater: (value: any) => {\n            let funcDef: any = ctrl.datasource.getFuncDef(value);\n            if (!funcDef) {\n              // try find close match\n              value = value.toLowerCase();\n              funcDef = _.find(allFunctions, funcName => {\n                return funcName.toLowerCase().indexOf(value) === 0;\n              });\n\n              if (!funcDef) {\n                return '';\n              }\n            }\n\n            $scope.$apply(() => {\n              ctrl.addFunction(funcDef);\n            });\n\n            $input.trigger('blur');\n            return '';\n          },\n        });\n\n        $button.click(() => {\n          $button.hide();\n          $input.show();\n          $input.focus();\n        });\n\n        $input.keyup(() => {\n          elem.toggleClass('open', $input.val() === '');\n        });\n\n        $input.blur(() => {\n          // clicking the function dropdown menu won't\n          // work if you remove class at once\n          setTimeout(() => {\n            $input.val('');\n            $input.hide();\n            $button.show();\n            elem.removeClass('open');\n          }, 200);\n        });\n\n        $compile(elem.contents())($scope);\n      });\n\n      let drop: any;\n      const cleanUpDrop = () => {\n        if (drop) {\n          drop.destroy();\n          drop = null;\n        }\n      };\n\n      $(elem)\n        .on('mouseenter', 'ul.dropdown-menu li', async () => {\n          cleanUpDrop();\n\n          let funcDef;\n          try {\n            funcDef = ctrl.datasource.getFuncDef($('a', this).text());\n          } catch (e) {\n            // ignore\n          }\n\n          if (funcDef && funcDef.description) {\n            let shortDesc = funcDef.description;\n            if (shortDesc.length > 500) {\n              shortDesc = shortDesc.substring(0, 497) + '...';\n            }\n\n            const contentElement = document.createElement('div');\n            // @ts-ignore\n            const { default: rst2html } = await import(/* webpackChunkName: \"rst2html\" */ 'rst2html');\n            contentElement.innerHTML = '<h4>' + funcDef.name + '</h4>' + rst2html(shortDesc);\n\n            drop = new Drop({\n              target: this,\n              content: contentElement,\n              classes: 'drop-popover',\n              openOn: 'always',\n              tetherOptions: {\n                attachment: 'bottom left',\n                targetAttachment: 'bottom right',\n              },\n            });\n          }\n        })\n        .on('mouseout', 'ul.dropdown-menu li', () => {\n          cleanUpDrop();\n        });\n\n      $scope.$on('$destroy', cleanUpDrop);\n    },\n  };\n}\n\ncoreModule.directive('graphiteAddFunc', graphiteAddFunc);\n\nfunction createFunctionDropDownMenu(funcDefs: FuncDef[]) {\n  const categories: any = {};\n\n  _.forEach(funcDefs, funcDef => {\n    if (!funcDef.category) {\n      return;\n    }\n    if (!categories[funcDef.category]) {\n      categories[funcDef.category] = [];\n    }\n    categories[funcDef.category].push({\n      text: funcDef.name,\n      click: \"ctrl.addFunction('\" + funcDef.name + \"')\",\n    });\n  });\n\n  return _.sortBy(\n    _.map(categories, (submenu, category) => {\n      return {\n        text: category,\n        submenu: _.sortBy(submenu, 'text'),\n      };\n    }),\n    'text'\n  );\n}\n","import _ from 'lodash';\nimport $ from 'jquery';\nimport coreModule from 'app/core/core_module';\nimport { TemplateSrv } from 'app/features/templating/template_srv';\n\n/** @ngInject */\nexport function graphiteFuncEditor($compile: any, templateSrv: TemplateSrv) {\n  const funcSpanTemplate = `\n    <function-editor\n      func=\"func\"\n      onRemove=\"ctrl.handleRemoveFunction\"\n      onMoveLeft=\"ctrl.handleMoveLeft\"\n      onMoveRight=\"ctrl.handleMoveRight\"\n    /><span>(</span>\n  `;\n  const paramTemplate =\n    '<input type=\"text\" style=\"display:none\"' + ' class=\"input-small tight-form-func-param\"></input>';\n\n  return {\n    restrict: 'A',\n    link: function postLink($scope: any, elem: JQuery) {\n      const $funcLink = $(funcSpanTemplate);\n      const ctrl = $scope.ctrl;\n      const func = $scope.func;\n      let scheduledRelink = false;\n      let paramCountAtLink = 0;\n      let cancelBlur: any = null;\n\n      ctrl.handleRemoveFunction = (func: any) => {\n        ctrl.removeFunction(func);\n      };\n\n      ctrl.handleMoveLeft = (func: any) => {\n        ctrl.moveFunction(func, -1);\n      };\n\n      ctrl.handleMoveRight = (func: any) => {\n        ctrl.moveFunction(func, 1);\n      };\n\n      function clickFuncParam(this: any, paramIndex: any) {\n        const $link = $(this);\n        const $comma = $link.prev('.comma');\n        const $input = $link.next();\n\n        $input.val(func.params[paramIndex]);\n\n        $comma.removeClass('query-part__last');\n        $link.hide();\n        $input.show();\n        $input.focus();\n        $input.select();\n\n        const typeahead = $input.data('typeahead');\n        if (typeahead) {\n          $input.val('');\n          typeahead.lookup();\n        }\n      }\n\n      function scheduledRelinkIfNeeded() {\n        if (paramCountAtLink === func.params.length) {\n          return;\n        }\n\n        if (!scheduledRelink) {\n          scheduledRelink = true;\n          setTimeout(() => {\n            relink();\n            scheduledRelink = false;\n          }, 200);\n        }\n      }\n\n      function paramDef(index: number) {\n        if (index < func.def.params.length) {\n          return func.def.params[index];\n        }\n        if ((_.last(func.def.params) as any).multiple) {\n          return _.assign({}, _.last(func.def.params), { optional: true });\n        }\n        return {};\n      }\n\n      function switchToLink(inputElem: HTMLElement, paramIndex: any) {\n        const $input = $(inputElem);\n\n        clearTimeout(cancelBlur);\n        cancelBlur = null;\n\n        const $link = $input.prev();\n        const $comma = $link.prev('.comma');\n        const newValue = $input.val();\n\n        // remove optional empty params\n        if (newValue !== '' || paramDef(paramIndex).optional) {\n          func.updateParam(newValue, paramIndex);\n          $link.html(newValue ? templateSrv.highlightVariablesAsHtml(newValue) : '&nbsp;');\n        }\n\n        scheduledRelinkIfNeeded();\n\n        $scope.$apply(() => {\n          ctrl.targetChanged();\n        });\n\n        if ($link.hasClass('query-part__last') && newValue === '') {\n          $comma.addClass('query-part__last');\n        } else {\n          $link.removeClass('query-part__last');\n        }\n\n        $input.hide();\n        $link.show();\n      }\n\n      // this = input element\n      function inputBlur(this: any, paramIndex: any) {\n        const inputElem = this;\n        // happens long before the click event on the typeahead options\n        // need to have long delay because the blur\n        cancelBlur = setTimeout(() => {\n          switchToLink(inputElem, paramIndex);\n        }, 200);\n      }\n\n      function inputKeyPress(this: any, paramIndex: any, e: any) {\n        if (e.which === 13) {\n          $(this).blur();\n        }\n      }\n\n      function inputKeyDown(this: any) {\n        this.style.width = (3 + this.value.length) * 8 + 'px';\n      }\n\n      function addTypeahead($input: any, paramIndex: any) {\n        $input.attr('data-provide', 'typeahead');\n\n        let options = paramDef(paramIndex).options;\n        if (paramDef(paramIndex).type === 'int') {\n          options = _.map(options, val => {\n            return val.toString();\n          });\n        }\n\n        $input.typeahead({\n          source: options,\n          minLength: 0,\n          items: 20,\n          updater: (value: any) => {\n            $input.val(value);\n            switchToLink($input[0], paramIndex);\n            return value;\n          },\n        });\n\n        const typeahead = $input.data('typeahead');\n        typeahead.lookup = function() {\n          this.query = this.$element.val() || '';\n          return this.process(this.source);\n        };\n      }\n\n      function addElementsAndCompile() {\n        $funcLink.appendTo(elem);\n\n        const defParams: any = _.clone(func.def.params);\n        const lastParam: any = _.last(func.def.params);\n\n        while (func.params.length >= defParams.length && lastParam && lastParam.multiple) {\n          defParams.push(_.assign({}, lastParam, { optional: true }));\n        }\n\n        _.each(defParams, (param: any, index: number) => {\n          if (param.optional && func.params.length < index) {\n            return false;\n          }\n\n          let paramValue = templateSrv.highlightVariablesAsHtml(func.params[index]);\n          const hasValue = paramValue !== null && paramValue !== undefined && paramValue !== '';\n          const last = index >= func.params.length - 1 && param.optional && !hasValue;\n          let linkClass = 'query-part__link';\n\n          if (last) {\n            linkClass += ' query-part__last';\n          }\n\n          if (last && param.multiple) {\n            paramValue = '+';\n          } else if (!hasValue) {\n            // for params with no value default to param name\n            paramValue = param.name;\n            linkClass += ' query-part__link--no-value';\n          }\n\n          if (index > 0) {\n            $('<span class=\"comma' + (last ? ' query-part__last' : '') + '\">, </span>').appendTo(elem);\n          }\n\n          const $paramLink = $(`<a ng-click=\"\" class=\"${linkClass}\">${paramValue}</a>`);\n          const $input = $(paramTemplate);\n          $input.attr('placeholder', param.name);\n\n          paramCountAtLink++;\n\n          $paramLink.appendTo(elem);\n          $input.appendTo(elem);\n\n          $input.blur(_.partial(inputBlur, index));\n          $input.keyup(inputKeyDown);\n          $input.keypress(_.partial(inputKeyPress, index));\n          $paramLink.click(_.partial(clickFuncParam, index));\n\n          if (param.options) {\n            addTypeahead($input, index);\n          }\n\n          return true;\n        });\n\n        $('<span>)</span>').appendTo(elem);\n\n        $compile(elem.contents())($scope);\n      }\n\n      function ifJustAddedFocusFirstParam() {\n        if ($scope.func.added) {\n          $scope.func.added = false;\n          setTimeout(() => {\n            elem\n              .find('.query-part__link')\n              .first()\n              .click();\n          }, 10);\n        }\n      }\n\n      function relink() {\n        elem.children().remove();\n        addElementsAndCompile();\n        ifJustAddedFocusFirstParam();\n      }\n\n      relink();\n    },\n  };\n}\n\ncoreModule.directive('graphiteFuncEditor', graphiteFuncEditor);\n","import _ from 'lodash';\n\n// This is auto generated from the unicode tables.\n// The tables are at:\n// http://www.fileformat.info/info/unicode/category/Lu/list.htm\n// http://www.fileformat.info/info/unicode/category/Ll/list.htm\n// http://www.fileformat.info/info/unicode/category/Lt/list.htm\n// http://www.fileformat.info/info/unicode/category/Lm/list.htm\n// http://www.fileformat.info/info/unicode/category/Lo/list.htm\n// http://www.fileformat.info/info/unicode/category/Nl/list.htm\n\nconst unicodeLetterTable = [\n  170,\n  170,\n  181,\n  181,\n  186,\n  186,\n  192,\n  214,\n  216,\n  246,\n  248,\n  705,\n  710,\n  721,\n  736,\n  740,\n  748,\n  748,\n  750,\n  750,\n  880,\n  884,\n  886,\n  887,\n  890,\n  893,\n  902,\n  902,\n  904,\n  906,\n  908,\n  908,\n  910,\n  929,\n  931,\n  1013,\n  1015,\n  1153,\n  1162,\n  1319,\n  1329,\n  1366,\n  1369,\n  1369,\n  1377,\n  1415,\n  1488,\n  1514,\n  1520,\n  1522,\n  1568,\n  1610,\n  1646,\n  1647,\n  1649,\n  1747,\n  1749,\n  1749,\n  1765,\n  1766,\n  1774,\n  1775,\n  1786,\n  1788,\n  1791,\n  1791,\n  1808,\n  1808,\n  1810,\n  1839,\n  1869,\n  1957,\n  1969,\n  1969,\n  1994,\n  2026,\n  2036,\n  2037,\n  2042,\n  2042,\n  2048,\n  2069,\n  2074,\n  2074,\n  2084,\n  2084,\n  2088,\n  2088,\n  2112,\n  2136,\n  2308,\n  2361,\n  2365,\n  2365,\n  2384,\n  2384,\n  2392,\n  2401,\n  2417,\n  2423,\n  2425,\n  2431,\n  2437,\n  2444,\n  2447,\n  2448,\n  2451,\n  2472,\n  2474,\n  2480,\n  2482,\n  2482,\n  2486,\n  2489,\n  2493,\n  2493,\n  2510,\n  2510,\n  2524,\n  2525,\n  2527,\n  2529,\n  2544,\n  2545,\n  2565,\n  2570,\n  2575,\n  2576,\n  2579,\n  2600,\n  2602,\n  2608,\n  2610,\n  2611,\n  2613,\n  2614,\n  2616,\n  2617,\n  2649,\n  2652,\n  2654,\n  2654,\n  2674,\n  2676,\n  2693,\n  2701,\n  2703,\n  2705,\n  2707,\n  2728,\n  2730,\n  2736,\n  2738,\n  2739,\n  2741,\n  2745,\n  2749,\n  2749,\n  2768,\n  2768,\n  2784,\n  2785,\n  2821,\n  2828,\n  2831,\n  2832,\n  2835,\n  2856,\n  2858,\n  2864,\n  2866,\n  2867,\n  2869,\n  2873,\n  2877,\n  2877,\n  2908,\n  2909,\n  2911,\n  2913,\n  2929,\n  2929,\n  2947,\n  2947,\n  2949,\n  2954,\n  2958,\n  2960,\n  2962,\n  2965,\n  2969,\n  2970,\n  2972,\n  2972,\n  2974,\n  2975,\n  2979,\n  2980,\n  2984,\n  2986,\n  2990,\n  3001,\n  3024,\n  3024,\n  3077,\n  3084,\n  3086,\n  3088,\n  3090,\n  3112,\n  3114,\n  3123,\n  3125,\n  3129,\n  3133,\n  3133,\n  3160,\n  3161,\n  3168,\n  3169,\n  3205,\n  3212,\n  3214,\n  3216,\n  3218,\n  3240,\n  3242,\n  3251,\n  3253,\n  3257,\n  3261,\n  3261,\n  3294,\n  3294,\n  3296,\n  3297,\n  3313,\n  3314,\n  3333,\n  3340,\n  3342,\n  3344,\n  3346,\n  3386,\n  3389,\n  3389,\n  3406,\n  3406,\n  3424,\n  3425,\n  3450,\n  3455,\n  3461,\n  3478,\n  3482,\n  3505,\n  3507,\n  3515,\n  3517,\n  3517,\n  3520,\n  3526,\n  3585,\n  3632,\n  3634,\n  3635,\n  3648,\n  3654,\n  3713,\n  3714,\n  3716,\n  3716,\n  3719,\n  3720,\n  3722,\n  3722,\n  3725,\n  3725,\n  3732,\n  3735,\n  3737,\n  3743,\n  3745,\n  3747,\n  3749,\n  3749,\n  3751,\n  3751,\n  3754,\n  3755,\n  3757,\n  3760,\n  3762,\n  3763,\n  3773,\n  3773,\n  3776,\n  3780,\n  3782,\n  3782,\n  3804,\n  3805,\n  3840,\n  3840,\n  3904,\n  3911,\n  3913,\n  3948,\n  3976,\n  3980,\n  4096,\n  4138,\n  4159,\n  4159,\n  4176,\n  4181,\n  4186,\n  4189,\n  4193,\n  4193,\n  4197,\n  4198,\n  4206,\n  4208,\n  4213,\n  4225,\n  4238,\n  4238,\n  4256,\n  4293,\n  4304,\n  4346,\n  4348,\n  4348,\n  4352,\n  4680,\n  4682,\n  4685,\n  4688,\n  4694,\n  4696,\n  4696,\n  4698,\n  4701,\n  4704,\n  4744,\n  4746,\n  4749,\n  4752,\n  4784,\n  4786,\n  4789,\n  4792,\n  4798,\n  4800,\n  4800,\n  4802,\n  4805,\n  4808,\n  4822,\n  4824,\n  4880,\n  4882,\n  4885,\n  4888,\n  4954,\n  4992,\n  5007,\n  5024,\n  5108,\n  5121,\n  5740,\n  5743,\n  5759,\n  5761,\n  5786,\n  5792,\n  5866,\n  5870,\n  5872,\n  5888,\n  5900,\n  5902,\n  5905,\n  5920,\n  5937,\n  5952,\n  5969,\n  5984,\n  5996,\n  5998,\n  6000,\n  6016,\n  6067,\n  6103,\n  6103,\n  6108,\n  6108,\n  6176,\n  6263,\n  6272,\n  6312,\n  6314,\n  6314,\n  6320,\n  6389,\n  6400,\n  6428,\n  6480,\n  6509,\n  6512,\n  6516,\n  6528,\n  6571,\n  6593,\n  6599,\n  6656,\n  6678,\n  6688,\n  6740,\n  6823,\n  6823,\n  6917,\n  6963,\n  6981,\n  6987,\n  7043,\n  7072,\n  7086,\n  7087,\n  7104,\n  7141,\n  7168,\n  7203,\n  7245,\n  7247,\n  7258,\n  7293,\n  7401,\n  7404,\n  7406,\n  7409,\n  7424,\n  7615,\n  7680,\n  7957,\n  7960,\n  7965,\n  7968,\n  8005,\n  8008,\n  8013,\n  8016,\n  8023,\n  8025,\n  8025,\n  8027,\n  8027,\n  8029,\n  8029,\n  8031,\n  8061,\n  8064,\n  8116,\n  8118,\n  8124,\n  8126,\n  8126,\n  8130,\n  8132,\n  8134,\n  8140,\n  8144,\n  8147,\n  8150,\n  8155,\n  8160,\n  8172,\n  8178,\n  8180,\n  8182,\n  8188,\n  8305,\n  8305,\n  8319,\n  8319,\n  8336,\n  8348,\n  8450,\n  8450,\n  8455,\n  8455,\n  8458,\n  8467,\n  8469,\n  8469,\n  8473,\n  8477,\n  8484,\n  8484,\n  8486,\n  8486,\n  8488,\n  8488,\n  8490,\n  8493,\n  8495,\n  8505,\n  8508,\n  8511,\n  8517,\n  8521,\n  8526,\n  8526,\n  8544,\n  8584,\n  11264,\n  11310,\n  11312,\n  11358,\n  11360,\n  11492,\n  11499,\n  11502,\n  11520,\n  11557,\n  11568,\n  11621,\n  11631,\n  11631,\n  11648,\n  11670,\n  11680,\n  11686,\n  11688,\n  11694,\n  11696,\n  11702,\n  11704,\n  11710,\n  11712,\n  11718,\n  11720,\n  11726,\n  11728,\n  11734,\n  11736,\n  11742,\n  11823,\n  11823,\n  12293,\n  12295,\n  12321,\n  12329,\n  12337,\n  12341,\n  12344,\n  12348,\n  12353,\n  12438,\n  12445,\n  12447,\n  12449,\n  12538,\n  12540,\n  12543,\n  12549,\n  12589,\n  12593,\n  12686,\n  12704,\n  12730,\n  12784,\n  12799,\n  13312,\n  13312,\n  19893,\n  19893,\n  19968,\n  19968,\n  40907,\n  40907,\n  40960,\n  42124,\n  42192,\n  42237,\n  42240,\n  42508,\n  42512,\n  42527,\n  42538,\n  42539,\n  42560,\n  42606,\n  42623,\n  42647,\n  42656,\n  42735,\n  42775,\n  42783,\n  42786,\n  42888,\n  42891,\n  42894,\n  42896,\n  42897,\n  42912,\n  42921,\n  43002,\n  43009,\n  43011,\n  43013,\n  43015,\n  43018,\n  43020,\n  43042,\n  43072,\n  43123,\n  43138,\n  43187,\n  43250,\n  43255,\n  43259,\n  43259,\n  43274,\n  43301,\n  43312,\n  43334,\n  43360,\n  43388,\n  43396,\n  43442,\n  43471,\n  43471,\n  43520,\n  43560,\n  43584,\n  43586,\n  43588,\n  43595,\n  43616,\n  43638,\n  43642,\n  43642,\n  43648,\n  43695,\n  43697,\n  43697,\n  43701,\n  43702,\n  43705,\n  43709,\n  43712,\n  43712,\n  43714,\n  43714,\n  43739,\n  43741,\n  43777,\n  43782,\n  43785,\n  43790,\n  43793,\n  43798,\n  43808,\n  43814,\n  43816,\n  43822,\n  43968,\n  44002,\n  44032,\n  44032,\n  55203,\n  55203,\n  55216,\n  55238,\n  55243,\n  55291,\n  63744,\n  64045,\n  64048,\n  64109,\n  64112,\n  64217,\n  64256,\n  64262,\n  64275,\n  64279,\n  64285,\n  64285,\n  64287,\n  64296,\n  64298,\n  64310,\n  64312,\n  64316,\n  64318,\n  64318,\n  64320,\n  64321,\n  64323,\n  64324,\n  64326,\n  64433,\n  64467,\n  64829,\n  64848,\n  64911,\n  64914,\n  64967,\n  65008,\n  65019,\n  65136,\n  65140,\n  65142,\n  65276,\n  65313,\n  65338,\n  65345,\n  65370,\n  65382,\n  65470,\n  65474,\n  65479,\n  65482,\n  65487,\n  65490,\n  65495,\n  65498,\n  65500,\n  65536,\n  65547,\n  65549,\n  65574,\n  65576,\n  65594,\n  65596,\n  65597,\n  65599,\n  65613,\n  65616,\n  65629,\n  65664,\n  65786,\n  65856,\n  65908,\n  66176,\n  66204,\n  66208,\n  66256,\n  66304,\n  66334,\n  66352,\n  66378,\n  66432,\n  66461,\n  66464,\n  66499,\n  66504,\n  66511,\n  66513,\n  66517,\n  66560,\n  66717,\n  67584,\n  67589,\n  67592,\n  67592,\n  67594,\n  67637,\n  67639,\n  67640,\n  67644,\n  67644,\n  67647,\n  67669,\n  67840,\n  67861,\n  67872,\n  67897,\n  68096,\n  68096,\n  68112,\n  68115,\n  68117,\n  68119,\n  68121,\n  68147,\n  68192,\n  68220,\n  68352,\n  68405,\n  68416,\n  68437,\n  68448,\n  68466,\n  68608,\n  68680,\n  69635,\n  69687,\n  69763,\n  69807,\n  73728,\n  74606,\n  74752,\n  74850,\n  77824,\n  78894,\n  92160,\n  92728,\n  110592,\n  110593,\n  119808,\n  119892,\n  119894,\n  119964,\n  119966,\n  119967,\n  119970,\n  119970,\n  119973,\n  119974,\n  119977,\n  119980,\n  119982,\n  119993,\n  119995,\n  119995,\n  119997,\n  120003,\n  120005,\n  120069,\n  120071,\n  120074,\n  120077,\n  120084,\n  120086,\n  120092,\n  120094,\n  120121,\n  120123,\n  120126,\n  120128,\n  120132,\n  120134,\n  120134,\n  120138,\n  120144,\n  120146,\n  120485,\n  120488,\n  120512,\n  120514,\n  120538,\n  120540,\n  120570,\n  120572,\n  120596,\n  120598,\n  120628,\n  120630,\n  120654,\n  120656,\n  120686,\n  120688,\n  120712,\n  120714,\n  120744,\n  120746,\n  120770,\n  120772,\n  120779,\n  131072,\n  131072,\n  173782,\n  173782,\n  173824,\n  173824,\n  177972,\n  177972,\n  177984,\n  177984,\n  178205,\n  178205,\n  194560,\n  195101,\n];\n\nconst identifierStartTable: any[] = [];\n\nfor (let i = 0; i < 128; i++) {\n  identifierStartTable[i] =\n    (i >= 48 && i <= 57) || // 0-9\n    i === 36 || // $\n    i === 126 || // ~\n    i === 124 || // |\n    (i >= 65 && i <= 90) || // A-Z\n    i === 95 || // _\n    i === 45 || // -\n    i === 42 || // *\n    i === 58 || // :\n    i === 91 || // templateStart [\n    i === 93 || // templateEnd ]\n    i === 63 || // ?\n    i === 37 || // %\n    i === 35 || // #\n    i === 61 || // =\n    (i >= 97 && i <= 122); // a-z\n}\n\nconst identifierPartTable = identifierStartTable;\n\nexport class Lexer {\n  input: any;\n  char: number;\n  from: number;\n\n  constructor(expression: any) {\n    this.input = expression;\n    this.char = 1;\n    this.from = 1;\n  }\n\n  peek(i?: number) {\n    return this.input.charAt(i || 0);\n  }\n\n  skip(i?: number) {\n    i = i || 1;\n    this.char += i;\n    this.input = this.input.slice(i);\n  }\n\n  tokenize() {\n    const list = [];\n    let token = this.next();\n    while (token) {\n      list.push(token);\n      token = this.next();\n    }\n    return list;\n  }\n\n  next() {\n    this.from = this.char;\n\n    // Move to the next non-space character.\n    if (/\\s/.test(this.peek())) {\n      while (/\\s/.test(this.peek())) {\n        this.from += 1;\n        this.skip();\n      }\n\n      if (this.peek() === '') {\n        // EOL\n        return null;\n      }\n    }\n\n    let match = this.scanStringLiteral();\n    if (match) {\n      return match;\n    }\n\n    match = this.scanPunctuator() || this.scanNumericLiteral() || this.scanIdentifier() || this.scanTemplateSequence();\n\n    if (match) {\n      this.skip(match.value.length);\n      return match;\n    }\n\n    // No token could be matched, give up.\n    return null;\n  }\n\n  scanTemplateSequence() {\n    if (this.peek() === '[' && this.peek(1) === '[') {\n      return {\n        type: 'templateStart',\n        value: '[[',\n        pos: this.char,\n      };\n    }\n\n    if (this.peek() === ']' && this.peek(1) === ']') {\n      return {\n        type: 'templateEnd',\n        value: '[[',\n        pos: this.char,\n      };\n    }\n\n    return null;\n  }\n\n  /*\n   * Extract a JavaScript identifier out of the next sequence of\n   * characters or return 'null' if its not possible. In addition,\n   * to Identifier this method can also produce BooleanLiteral\n   * (true/false) and NullLiteral (null).\n   */\n  scanIdentifier() {\n    let id = '';\n    let index = 0;\n    let type, char;\n\n    // Detects any character in the Unicode categories \"Uppercase\n    // letter (Lu)\", \"Lowercase letter (Ll)\", \"Titlecase letter\n    // (Lt)\", \"Modifier letter (Lm)\", \"Other letter (Lo)\", or\n    // \"Letter number (Nl)\".\n    //\n    // Both approach and unicodeLetterTable were borrowed from\n    // Google's Traceur.\n\n    function isUnicodeLetter(code: number) {\n      for (let i = 0; i < unicodeLetterTable.length; ) {\n        if (code < unicodeLetterTable[i++]) {\n          return false;\n        }\n\n        if (code <= unicodeLetterTable[i++]) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    function isHexDigit(str: string) {\n      return /^[0-9a-fA-F]$/.test(str);\n    }\n\n    const readUnicodeEscapeSequence = _.bind(function(this: any) {\n      index += 1;\n\n      if (this.peek(index) !== 'u') {\n        return null;\n      }\n\n      const ch1 = this.peek(index + 1);\n      const ch2 = this.peek(index + 2);\n      const ch3 = this.peek(index + 3);\n      const ch4 = this.peek(index + 4);\n      let code;\n\n      if (isHexDigit(ch1) && isHexDigit(ch2) && isHexDigit(ch3) && isHexDigit(ch4)) {\n        code = parseInt(ch1 + ch2 + ch3 + ch4, 16);\n\n        if (isUnicodeLetter(code)) {\n          index += 5;\n          return '\\\\u' + ch1 + ch2 + ch3 + ch4;\n        }\n\n        return null;\n      }\n\n      return null;\n    }, this);\n\n    const getIdentifierStart = _.bind(function(this: any) {\n      const chr = this.peek(index);\n      const code = chr.charCodeAt(0);\n\n      if (chr === '*') {\n        index += 1;\n        return chr;\n      }\n\n      if (code === 92) {\n        return readUnicodeEscapeSequence();\n      }\n\n      if (code < 128) {\n        if (identifierStartTable[code]) {\n          index += 1;\n          return chr;\n        }\n\n        return null;\n      }\n\n      if (isUnicodeLetter(code)) {\n        index += 1;\n        return chr;\n      }\n\n      return null;\n    }, this);\n\n    const getIdentifierPart = _.bind(function(this: any) {\n      const chr = this.peek(index);\n      const code = chr.charCodeAt(0);\n\n      if (code === 92) {\n        return readUnicodeEscapeSequence();\n      }\n\n      if (code < 128) {\n        if (identifierPartTable[code]) {\n          index += 1;\n          return chr;\n        }\n\n        return null;\n      }\n\n      if (isUnicodeLetter(code)) {\n        index += 1;\n        return chr;\n      }\n\n      return null;\n    }, this);\n\n    char = getIdentifierStart();\n    if (char === null) {\n      return null;\n    }\n\n    id = char;\n    for (;;) {\n      char = getIdentifierPart();\n\n      if (char === null) {\n        break;\n      }\n\n      id += char;\n    }\n\n    switch (id) {\n      case 'true': {\n        type = 'bool';\n        break;\n      }\n      case 'false': {\n        type = 'bool';\n        break;\n      }\n      default:\n        type = 'identifier';\n    }\n\n    return {\n      type: type,\n      value: id,\n      pos: this.char,\n    };\n  }\n\n  /*\n   * Extract a numeric literal out of the next sequence of\n   * characters or return 'null' if its not possible. This method\n   * supports all numeric literals described in section 7.8.3\n   * of the EcmaScript 5 specification.\n   *\n   * This method's implementation was heavily influenced by the\n   * scanNumericLiteral function in the Esprima parser's source code.\n   */\n  scanNumericLiteral(): any {\n    let index = 0;\n    let value = '';\n    const length = this.input.length;\n    let char = this.peek(index);\n    let bad;\n\n    function isDecimalDigit(str: string) {\n      return /^[0-9]$/.test(str);\n    }\n\n    function isOctalDigit(str: string) {\n      return /^[0-7]$/.test(str);\n    }\n\n    function isHexDigit(str: string) {\n      return /^[0-9a-fA-F]$/.test(str);\n    }\n\n    function isIdentifierStart(ch: string) {\n      return ch === '$' || ch === '_' || ch === '\\\\' || (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z');\n    }\n\n    // handle negative num literals\n    if (char === '-') {\n      value += char;\n      index += 1;\n      char = this.peek(index);\n    }\n\n    // Numbers must start either with a decimal digit or a point.\n    if (char !== '.' && !isDecimalDigit(char)) {\n      return null;\n    }\n\n    if (char !== '.') {\n      value += this.peek(index);\n      index += 1;\n      char = this.peek(index);\n\n      if (value === '0') {\n        // Base-16 numbers.\n        if (char === 'x' || char === 'X') {\n          index += 1;\n          value += char;\n\n          while (index < length) {\n            char = this.peek(index);\n            if (!isHexDigit(char)) {\n              break;\n            }\n            value += char;\n            index += 1;\n          }\n\n          if (value.length <= 2) {\n            // 0x\n            return {\n              type: 'number',\n              value: value,\n              isMalformed: true,\n              pos: this.char,\n            };\n          }\n\n          if (index < length) {\n            char = this.peek(index);\n            if (isIdentifierStart(char)) {\n              return null;\n            }\n          }\n\n          return {\n            type: 'number',\n            value: value,\n            base: 16,\n            isMalformed: false,\n            pos: this.char,\n          };\n        }\n\n        // Base-8 numbers.\n        if (isOctalDigit(char)) {\n          index += 1;\n          value += char;\n          bad = false;\n\n          while (index < length) {\n            char = this.peek(index);\n\n            // Numbers like '019' (note the 9) are not valid octals\n            // but we still parse them and mark as malformed.\n\n            if (isDecimalDigit(char)) {\n              bad = true;\n            }\n            if (!isOctalDigit(char)) {\n              // if the char is a non punctuator then its not a valid number\n              if (!this.isPunctuator(char)) {\n                return null;\n              }\n              break;\n            }\n            value += char;\n            index += 1;\n          }\n\n          if (index < length) {\n            char = this.peek(index);\n            if (isIdentifierStart(char)) {\n              return null;\n            }\n          }\n\n          return {\n            type: 'number',\n            value: value,\n            base: 8,\n            isMalformed: bad,\n          };\n        }\n\n        // Decimal numbers that start with '0' such as '09' are illegal\n        // but we still parse them and return as malformed.\n\n        if (isDecimalDigit(char)) {\n          index += 1;\n          value += char;\n        }\n      }\n\n      while (index < length) {\n        char = this.peek(index);\n        if (!isDecimalDigit(char)) {\n          break;\n        }\n        value += char;\n        index += 1;\n      }\n    }\n\n    // Decimal digits.\n\n    if (char === '.') {\n      value += char;\n      index += 1;\n\n      while (index < length) {\n        char = this.peek(index);\n        if (!isDecimalDigit(char)) {\n          break;\n        }\n        value += char;\n        index += 1;\n      }\n    }\n\n    // Exponent part.\n\n    if (char === 'e' || char === 'E') {\n      value += char;\n      index += 1;\n      char = this.peek(index);\n\n      if (char === '+' || char === '-') {\n        value += this.peek(index);\n        index += 1;\n      }\n\n      char = this.peek(index);\n      if (isDecimalDigit(char)) {\n        value += char;\n        index += 1;\n\n        while (index < length) {\n          char = this.peek(index);\n          if (!isDecimalDigit(char)) {\n            break;\n          }\n          value += char;\n          index += 1;\n        }\n      } else {\n        return null;\n      }\n    }\n\n    if (index < length) {\n      char = this.peek(index);\n      if (!this.isPunctuator(char)) {\n        return null;\n      }\n    }\n\n    return {\n      type: 'number',\n      value: value,\n      base: 10,\n      pos: this.char,\n      isMalformed: !isFinite(+value),\n    };\n  }\n\n  isPunctuator(ch1: string) {\n    switch (ch1) {\n      case '.':\n      case '(':\n      case ')':\n      case ',':\n      case '{':\n      case '}':\n        return true;\n    }\n\n    return false;\n  }\n\n  scanPunctuator() {\n    const ch1 = this.peek();\n\n    if (this.isPunctuator(ch1)) {\n      return {\n        type: ch1,\n        value: ch1,\n        pos: this.char,\n      };\n    }\n\n    return null;\n  }\n\n  /*\n   * Extract a string out of the next sequence of characters and/or\n   * lines or return 'null' if its not possible. Since strings can\n   * span across multiple lines this method has to move the char\n   * pointer.\n   *\n   * This method recognizes pseudo-multiline JavaScript strings:\n   *\n   *   var str = \"hello\\\n   *   world\";\n   */\n  scanStringLiteral() {\n    const quote = this.peek();\n\n    // String must start with a quote.\n    if (quote !== '\"' && quote !== \"'\") {\n      return null;\n    }\n\n    let value = '';\n\n    this.skip();\n\n    while (this.peek() !== quote) {\n      if (this.peek() === '') {\n        // End Of Line\n        return {\n          type: 'string',\n          value: value,\n          isUnclosed: true,\n          quote: quote,\n          pos: this.char,\n        };\n      }\n\n      const char = this.peek();\n      const jump = 1; // A length of a jump, after we're done\n      // parsing this character.\n\n      value += char;\n      this.skip(jump);\n    }\n\n    this.skip();\n    return {\n      type: 'string',\n      value: value,\n      isUnclosed: false,\n      quote: quote,\n      pos: this.char,\n    };\n  }\n}\n","import { Lexer } from './lexer';\n\nexport class Parser {\n  expression: any;\n  lexer: Lexer;\n  tokens: any;\n  index: number;\n\n  constructor(expression: any) {\n    this.expression = expression;\n    this.lexer = new Lexer(expression);\n    this.tokens = this.lexer.tokenize();\n    this.index = 0;\n  }\n\n  getAst() {\n    return this.start();\n  }\n\n  start() {\n    try {\n      return this.functionCall() || this.metricExpression();\n    } catch (e) {\n      return {\n        type: 'error',\n        message: e.message,\n        pos: e.pos,\n      };\n    }\n  }\n\n  curlyBraceSegment() {\n    if (this.match('identifier', '{') || this.match('{')) {\n      let curlySegment = '';\n\n      while (!this.match('') && !this.match('}')) {\n        curlySegment += this.consumeToken().value;\n      }\n\n      if (!this.match('}')) {\n        this.errorMark(\"Expected closing '}'\");\n      }\n\n      curlySegment += this.consumeToken().value;\n\n      // if curly segment is directly followed by identifier\n      // include it in the segment\n      if (this.match('identifier')) {\n        curlySegment += this.consumeToken().value;\n      }\n\n      return {\n        type: 'segment',\n        value: curlySegment,\n      };\n    } else {\n      return null;\n    }\n  }\n\n  metricSegment() {\n    const curly = this.curlyBraceSegment();\n    if (curly) {\n      return curly;\n    }\n\n    if (this.match('identifier') || this.match('number')) {\n      // hack to handle float numbers in metric segments\n      const parts = this.consumeToken().value.split('.');\n      if (parts.length === 2) {\n        this.tokens.splice(this.index, 0, { type: '.' });\n        this.tokens.splice(this.index + 1, 0, {\n          type: 'number',\n          value: parts[1],\n        });\n      }\n\n      return {\n        type: 'segment',\n        value: parts[0],\n      };\n    }\n\n    if (!this.match('templateStart')) {\n      this.errorMark('Expected metric identifier');\n    }\n\n    this.consumeToken();\n\n    if (!this.match('identifier')) {\n      this.errorMark('Expected identifier after templateStart');\n    }\n\n    const node = {\n      type: 'template',\n      value: this.consumeToken().value,\n    };\n\n    if (!this.match('templateEnd')) {\n      this.errorMark('Expected templateEnd');\n    }\n\n    this.consumeToken();\n    return node;\n  }\n\n  metricExpression() {\n    if (!this.match('templateStart') && !this.match('identifier') && !this.match('number') && !this.match('{')) {\n      return null;\n    }\n\n    const node: any = {\n      type: 'metric',\n      segments: [],\n    };\n\n    node.segments.push(this.metricSegment());\n\n    while (this.match('.')) {\n      this.consumeToken();\n\n      const segment = this.metricSegment();\n      if (!segment) {\n        this.errorMark('Expected metric identifier');\n      }\n\n      node.segments.push(segment);\n    }\n\n    return node;\n  }\n\n  functionCall() {\n    if (!this.match('identifier', '(')) {\n      return null;\n    }\n\n    const node: any = {\n      type: 'function',\n      name: this.consumeToken().value,\n    };\n\n    // consume left parenthesis\n    this.consumeToken();\n\n    node.params = this.functionParameters();\n\n    if (!this.match(')')) {\n      this.errorMark('Expected closing parenthesis');\n    }\n\n    this.consumeToken();\n\n    return node;\n  }\n\n  boolExpression() {\n    if (!this.match('bool')) {\n      return null;\n    }\n\n    return {\n      type: 'bool',\n      value: this.consumeToken().value === 'true',\n    };\n  }\n\n  functionParameters(): any {\n    if (this.match(')') || this.match('')) {\n      return [];\n    }\n\n    const param =\n      this.functionCall() ||\n      this.numericLiteral() ||\n      this.seriesRefExpression() ||\n      this.boolExpression() ||\n      this.metricExpression() ||\n      this.stringLiteral();\n\n    if (!this.match(',')) {\n      return [param];\n    }\n\n    this.consumeToken();\n    return [param].concat(this.functionParameters());\n  }\n\n  seriesRefExpression() {\n    if (!this.match('identifier')) {\n      return null;\n    }\n\n    const value = this.tokens[this.index].value;\n    if (!value.match(/\\#[A-Z]/)) {\n      return null;\n    }\n\n    const token = this.consumeToken();\n\n    return {\n      type: 'series-ref',\n      value: token.value,\n    };\n  }\n\n  numericLiteral() {\n    if (!this.match('number')) {\n      return null;\n    }\n\n    return {\n      type: 'number',\n      value: parseFloat(this.consumeToken().value),\n    };\n  }\n\n  stringLiteral() {\n    if (!this.match('string')) {\n      return null;\n    }\n\n    const token = this.consumeToken();\n    if (token.isUnclosed) {\n      throw { message: 'Unclosed string parameter', pos: token.pos };\n    }\n\n    return {\n      type: 'string',\n      value: token.value,\n    };\n  }\n\n  errorMark(text: string) {\n    const currentToken = this.tokens[this.index];\n    const type = currentToken ? currentToken.type : 'end of string';\n    throw {\n      message: text + ' instead found ' + type,\n      pos: currentToken ? currentToken.pos : this.lexer.char,\n    };\n  }\n\n  // returns token value and incre\n  consumeToken() {\n    this.index++;\n    return this.tokens[this.index - 1];\n  }\n\n  matchToken(type: any, index: number) {\n    const token = this.tokens[this.index + index];\n    return (token === undefined && type === '') || (token && token.type === type);\n  }\n\n  match(token1: any, token2?: any) {\n    return this.matchToken(token1, 0) && (!token2 || this.matchToken(token2, 1));\n  }\n}\n","import _ from 'lodash';\nimport { Parser } from './parser';\nimport { TemplateSrv } from 'app/features/templating/template_srv';\nimport { ScopedVars } from '@grafana/data';\n\nexport default class GraphiteQuery {\n  datasource: any;\n  target: any;\n  functions: any[];\n  segments: any[];\n  tags: any[];\n  error: any;\n  seriesByTagUsed: boolean;\n  checkOtherSegmentsIndex: number;\n  removeTagValue: string;\n  templateSrv: any;\n  scopedVars: any;\n\n  /** @ngInject */\n  constructor(datasource: any, target: any, templateSrv?: TemplateSrv, scopedVars?: ScopedVars) {\n    this.datasource = datasource;\n    this.target = target;\n    this.templateSrv = templateSrv;\n    this.scopedVars = scopedVars;\n    this.parseTarget();\n\n    this.removeTagValue = '-- remove tag --';\n  }\n\n  parseTarget() {\n    this.functions = [];\n    this.segments = [];\n    this.tags = [];\n    this.seriesByTagUsed = false;\n    this.error = null;\n\n    if (this.target.textEditor) {\n      return;\n    }\n\n    const parser = new Parser(this.target.target);\n    const astNode = parser.getAst();\n    if (astNode === null) {\n      this.checkOtherSegmentsIndex = 0;\n      return;\n    }\n\n    if (astNode.type === 'error') {\n      this.error = astNode.message + ' at position: ' + astNode.pos;\n      this.target.textEditor = true;\n      return;\n    }\n\n    try {\n      this.parseTargetRecursive(astNode, null);\n    } catch (err) {\n      console.log('error parsing target:', err.message);\n      this.error = err.message;\n      this.target.textEditor = true;\n    }\n\n    this.checkOtherSegmentsIndex = this.segments.length - 1;\n  }\n\n  getSegmentPathUpTo(index: number) {\n    const arr = this.segments.slice(0, index);\n\n    return _.reduce(\n      arr,\n      (result, segment) => {\n        return result ? result + '.' + segment.value : segment.value;\n      },\n      ''\n    );\n  }\n\n  parseTargetRecursive(astNode: any, func: any): any {\n    if (astNode === null) {\n      return null;\n    }\n\n    switch (astNode.type) {\n      case 'function':\n        const innerFunc = this.datasource.createFuncInstance(astNode.name, {\n          withDefaultParams: false,\n        });\n        _.each(astNode.params, param => {\n          this.parseTargetRecursive(param, innerFunc);\n        });\n\n        innerFunc.updateText();\n        this.functions.push(innerFunc);\n\n        // extract tags from seriesByTag function and hide function\n        if (innerFunc.def.name === 'seriesByTag' && !this.seriesByTagUsed) {\n          this.seriesByTagUsed = true;\n          innerFunc.hidden = true;\n          this.tags = this.splitSeriesByTagParams(innerFunc);\n        }\n\n        break;\n      case 'series-ref':\n        if (this.segments.length > 0 || this.getSeriesByTagFuncIndex() >= 0) {\n          this.addFunctionParameter(func, astNode.value);\n        } else {\n          this.segments.push(astNode);\n        }\n        break;\n      case 'bool':\n      case 'string':\n      case 'number':\n        this.addFunctionParameter(func, astNode.value);\n        break;\n      case 'metric':\n        if (this.segments.length || this.tags.length) {\n          this.addFunctionParameter(func, _.join(_.map(astNode.segments, 'value'), '.'));\n        } else {\n          this.segments = astNode.segments;\n        }\n        break;\n    }\n  }\n\n  updateSegmentValue(segment: any, index: number) {\n    this.segments[index].value = segment.value;\n  }\n\n  addSelectMetricSegment() {\n    this.segments.push({ value: 'select metric' });\n  }\n\n  addFunction(newFunc: any) {\n    this.functions.push(newFunc);\n  }\n\n  addFunctionParameter(func: any, value: string) {\n    if (func.params.length >= func.def.params.length && !_.get(_.last(func.def.params), 'multiple', false)) {\n      throw { message: 'too many parameters for function ' + func.def.name };\n    }\n    func.params.push(value);\n  }\n\n  removeFunction(func: any) {\n    this.functions = _.without(this.functions, func);\n  }\n\n  moveFunction(func: any, offset: number) {\n    const index = this.functions.indexOf(func);\n    // @ts-ignore\n    _.move(this.functions, index, index + offset);\n  }\n\n  updateModelTarget(targets: any) {\n    const wrapFunction = (target: string, func: any) => {\n      return func.render(target, (value: string) => {\n        return this.templateSrv.replace(value, this.scopedVars);\n      });\n    };\n\n    if (!this.target.textEditor) {\n      const metricPath = this.getSegmentPathUpTo(this.segments.length).replace(/\\.select metric$/, '');\n      this.target.target = _.reduce(this.functions, wrapFunction, metricPath);\n    }\n\n    this.updateRenderedTarget(this.target, targets);\n\n    // loop through other queries and update targetFull as needed\n    for (const target of targets || []) {\n      if (target.refId !== this.target.refId) {\n        this.updateRenderedTarget(target, targets);\n      }\n    }\n  }\n\n  updateRenderedTarget(target: { refId: string | number; target: any; targetFull: any }, targets: any) {\n    // render nested query\n    const targetsByRefId = _.keyBy(targets, 'refId');\n\n    // no references to self\n    delete targetsByRefId[target.refId];\n\n    const nestedSeriesRefRegex = /\\#([A-Z])/g;\n    let targetWithNestedQueries = target.target;\n\n    // Use ref count to track circular references\n    function countTargetRefs(targetsByRefId: any, refId: string) {\n      let refCount = 0;\n      _.each(targetsByRefId, (t, id) => {\n        if (id !== refId) {\n          const match = nestedSeriesRefRegex.exec(t.target);\n          const count = match && match.length ? match.length - 1 : 0;\n          refCount += count;\n        }\n      });\n      targetsByRefId[refId].refCount = refCount;\n    }\n    _.each(targetsByRefId, (t, id) => {\n      countTargetRefs(targetsByRefId, id);\n    });\n\n    // Keep interpolating until there are no query references\n    // The reason for the loop is that the referenced query might contain another reference to another query\n    while (targetWithNestedQueries.match(nestedSeriesRefRegex)) {\n      const updated = targetWithNestedQueries.replace(nestedSeriesRefRegex, (match: string, g1: string) => {\n        const t = targetsByRefId[g1];\n        if (!t) {\n          return match;\n        }\n\n        // no circular references\n        if (t.refCount === 0) {\n          delete targetsByRefId[g1];\n        }\n        t.refCount--;\n\n        return t.target;\n      });\n\n      if (updated === targetWithNestedQueries) {\n        break;\n      }\n\n      targetWithNestedQueries = updated;\n    }\n\n    delete target.targetFull;\n    if (target.target !== targetWithNestedQueries) {\n      target.targetFull = targetWithNestedQueries;\n    }\n  }\n\n  splitSeriesByTagParams(func: { params: any }) {\n    const tagPattern = /([^\\!=~]+)(\\!?=~?)(.*)/;\n    return _.flatten(\n      _.map(func.params, (param: string) => {\n        const matches = tagPattern.exec(param);\n        if (matches) {\n          const tag = matches.slice(1);\n          if (tag.length === 3) {\n            return {\n              key: tag[0],\n              operator: tag[1],\n              value: tag[2],\n            };\n          }\n        }\n        return [];\n      })\n    );\n  }\n\n  getSeriesByTagFuncIndex() {\n    return _.findIndex(this.functions, func => func.def.name === 'seriesByTag');\n  }\n\n  getSeriesByTagFunc() {\n    const seriesByTagFuncIndex = this.getSeriesByTagFuncIndex();\n    if (seriesByTagFuncIndex >= 0) {\n      return this.functions[seriesByTagFuncIndex];\n    } else {\n      return undefined;\n    }\n  }\n\n  addTag(tag: { key: any; operator: string; value: string }) {\n    const newTagParam = renderTagString(tag);\n    this.getSeriesByTagFunc().params.push(newTagParam);\n    this.tags.push(tag);\n  }\n\n  removeTag(index: number) {\n    this.getSeriesByTagFunc().params.splice(index, 1);\n    this.tags.splice(index, 1);\n  }\n\n  updateTag(tag: { key: string }, tagIndex: number) {\n    this.error = null;\n\n    if (tag.key === this.removeTagValue) {\n      this.removeTag(tagIndex);\n      return;\n    }\n\n    const newTagParam = renderTagString(tag);\n    this.getSeriesByTagFunc().params[tagIndex] = newTagParam;\n    this.tags[tagIndex] = tag;\n  }\n\n  renderTagExpressions(excludeIndex = -1) {\n    return _.compact(\n      _.map(this.tags, (tagExpr, index) => {\n        // Don't render tag that we want to lookup\n        if (index !== excludeIndex) {\n          return tagExpr.key + tagExpr.operator + tagExpr.value;\n        }\n      })\n    );\n  }\n}\n\nfunction renderTagString(tag: { key: any; operator?: any; value?: any }) {\n  return tag.key + tag.operator + tag.value;\n}\n","import './add_graphite_func';\nimport './func_editor';\n\nimport _ from 'lodash';\nimport GraphiteQuery from './graphite_query';\nimport { QueryCtrl } from 'app/plugins/sdk';\nimport appEvents from 'app/core/app_events';\nimport { promiseToDigest } from 'app/core/utils/promiseToDigest';\nimport { auto } from 'angular';\nimport { TemplateSrv } from 'app/features/templating/template_srv';\nimport { AppEvents } from '@grafana/data';\n\nconst GRAPHITE_TAG_OPERATORS = ['=', '!=', '=~', '!=~'];\nconst TAG_PREFIX = 'tag: ';\n\nexport class GraphiteQueryCtrl extends QueryCtrl {\n  static templateUrl = 'partials/query.editor.html';\n\n  queryModel: GraphiteQuery;\n  segments: any[];\n  addTagSegments: any[];\n  removeTagValue: string;\n  supportsTags: boolean;\n  paused: boolean;\n\n  /** @ngInject */\n  constructor(\n    $scope: any,\n    $injector: auto.IInjectorService,\n    private uiSegmentSrv: any,\n    private templateSrv: TemplateSrv,\n    $timeout: any\n  ) {\n    super($scope, $injector);\n    this.supportsTags = this.datasource.supportsTags;\n    this.paused = false;\n    this.target.target = this.target.target || '';\n\n    this.datasource.waitForFuncDefsLoaded().then(() => {\n      this.queryModel = new GraphiteQuery(this.datasource, this.target, templateSrv);\n      this.buildSegments(false);\n    });\n\n    this.removeTagValue = '-- remove tag --';\n  }\n\n  parseTarget() {\n    this.queryModel.parseTarget();\n    this.buildSegments();\n  }\n\n  toggleEditorMode() {\n    this.target.textEditor = !this.target.textEditor;\n    this.parseTarget();\n  }\n\n  buildSegments(modifyLastSegment = true) {\n    this.segments = _.map(this.queryModel.segments, segment => {\n      return this.uiSegmentSrv.newSegment(segment);\n    });\n\n    const checkOtherSegmentsIndex = this.queryModel.checkOtherSegmentsIndex || 0;\n\n    promiseToDigest(this.$scope)(this.checkOtherSegments(checkOtherSegmentsIndex, modifyLastSegment));\n\n    if (this.queryModel.seriesByTagUsed) {\n      this.fixTagSegments();\n    }\n  }\n\n  addSelectMetricSegment() {\n    this.queryModel.addSelectMetricSegment();\n    this.segments.push(this.uiSegmentSrv.newSelectMetric());\n  }\n\n  checkOtherSegments(fromIndex: number, modifyLastSegment = true) {\n    if (this.queryModel.segments.length === 1 && this.queryModel.segments[0].type === 'series-ref') {\n      return;\n    }\n\n    if (fromIndex === 0) {\n      this.addSelectMetricSegment();\n      return;\n    }\n\n    const path = this.queryModel.getSegmentPathUpTo(fromIndex + 1);\n    if (path === '') {\n      return Promise.resolve();\n    }\n\n    return this.datasource\n      .metricFindQuery(path)\n      .then((segments: any) => {\n        if (segments.length === 0) {\n          if (path !== '' && modifyLastSegment) {\n            this.queryModel.segments = this.queryModel.segments.splice(0, fromIndex);\n            this.segments = this.segments.splice(0, fromIndex);\n            this.addSelectMetricSegment();\n          }\n        } else if (segments[0].expandable) {\n          if (this.segments.length === fromIndex) {\n            this.addSelectMetricSegment();\n          } else {\n            return this.checkOtherSegments(fromIndex + 1);\n          }\n        }\n      })\n      .catch((err: any) => {\n        appEvents.emit(AppEvents.alertError, ['Error', err]);\n      });\n  }\n\n  setSegmentFocus(segmentIndex: any) {\n    _.each(this.segments, (segment, index) => {\n      segment.focus = segmentIndex === index;\n    });\n  }\n\n  getAltSegments(index: number, prefix: string) {\n    let query = prefix && prefix.length > 0 ? '*' + prefix + '*' : '*';\n    if (index > 0) {\n      query = this.queryModel.getSegmentPathUpTo(index) + '.' + query;\n    }\n    const options = {\n      range: this.panelCtrl.range,\n      requestId: 'get-alt-segments',\n    };\n\n    return this.datasource\n      .metricFindQuery(query, options)\n      .then((segments: any[]) => {\n        const altSegments = _.map(segments, segment => {\n          return this.uiSegmentSrv.newSegment({\n            value: segment.text,\n            expandable: segment.expandable,\n          });\n        });\n\n        if (index > 0 && altSegments.length === 0) {\n          return altSegments;\n        }\n\n        // add query references\n        if (index === 0) {\n          _.eachRight(this.panelCtrl.panel.targets, target => {\n            if (target.refId === this.queryModel.target.refId) {\n              return;\n            }\n\n            altSegments.unshift(\n              this.uiSegmentSrv.newSegment({\n                type: 'series-ref',\n                value: '#' + target.refId,\n                expandable: false,\n              })\n            );\n          });\n        }\n\n        // add template variables\n        _.eachRight(this.templateSrv.variables, variable => {\n          altSegments.unshift(\n            this.uiSegmentSrv.newSegment({\n              type: 'template',\n              value: '$' + variable.name,\n              expandable: true,\n            })\n          );\n        });\n\n        // add wildcard option\n        altSegments.unshift(this.uiSegmentSrv.newSegment('*'));\n\n        if (this.supportsTags && index === 0) {\n          this.removeTaggedEntry(altSegments);\n          return this.addAltTagSegments(prefix, altSegments);\n        } else {\n          return altSegments;\n        }\n      })\n      .catch((err: any): any[] => {\n        return [];\n      });\n  }\n\n  addAltTagSegments(prefix: string, altSegments: any[]) {\n    return this.getTagsAsSegments(prefix).then((tagSegments: any[]) => {\n      tagSegments = _.map(tagSegments, segment => {\n        segment.value = TAG_PREFIX + segment.value;\n        return segment;\n      });\n      return altSegments.concat(...tagSegments);\n    });\n  }\n\n  removeTaggedEntry(altSegments: any[]) {\n    altSegments = _.remove(altSegments, s => s.value === '_tagged');\n  }\n\n  segmentValueChanged(segment: { type: string; value: string; expandable: any }, segmentIndex: number) {\n    this.error = null;\n    this.queryModel.updateSegmentValue(segment, segmentIndex);\n\n    if (this.queryModel.functions.length > 0 && this.queryModel.functions[0].def.fake) {\n      this.queryModel.functions = [];\n    }\n\n    if (segment.type === 'tag') {\n      const tag = removeTagPrefix(segment.value);\n      this.pause();\n      this.addSeriesByTagFunc(tag);\n      return null;\n    }\n\n    if (segment.expandable) {\n      return promiseToDigest(this.$scope)(\n        this.checkOtherSegments(segmentIndex + 1).then(() => {\n          this.setSegmentFocus(segmentIndex + 1);\n          this.targetChanged();\n        })\n      );\n    } else {\n      this.spliceSegments(segmentIndex + 1);\n    }\n\n    this.setSegmentFocus(segmentIndex + 1);\n    this.targetChanged();\n\n    return null;\n  }\n\n  spliceSegments(index: any) {\n    this.segments = this.segments.splice(0, index);\n    this.queryModel.segments = this.queryModel.segments.splice(0, index);\n  }\n\n  emptySegments() {\n    this.queryModel.segments = [];\n    this.segments = [];\n  }\n\n  targetTextChanged() {\n    this.updateModelTarget();\n    this.refresh();\n  }\n\n  updateModelTarget() {\n    this.queryModel.updateModelTarget(this.panelCtrl.panel.targets);\n  }\n\n  targetChanged() {\n    if (this.queryModel.error) {\n      return;\n    }\n\n    const oldTarget = this.queryModel.target.target;\n    this.updateModelTarget();\n\n    if (this.queryModel.target !== oldTarget && !this.paused) {\n      this.panelCtrl.refresh();\n    }\n  }\n\n  addFunction(funcDef: any) {\n    const newFunc = this.datasource.createFuncInstance(funcDef, {\n      withDefaultParams: true,\n    });\n    newFunc.added = true;\n    this.queryModel.addFunction(newFunc);\n    this.smartlyHandleNewAliasByNode(newFunc);\n\n    if (this.segments.length === 1 && this.segments[0].fake) {\n      this.emptySegments();\n    }\n\n    if (!newFunc.params.length && newFunc.added) {\n      this.targetChanged();\n    }\n\n    if (newFunc.def.name === 'seriesByTag') {\n      this.parseTarget();\n    }\n  }\n\n  removeFunction(func: any) {\n    this.queryModel.removeFunction(func);\n    this.targetChanged();\n  }\n\n  moveFunction(func: any, offset: any) {\n    this.queryModel.moveFunction(func, offset);\n    this.targetChanged();\n  }\n\n  addSeriesByTagFunc(tag: string) {\n    const newFunc = this.datasource.createFuncInstance('seriesByTag', {\n      withDefaultParams: false,\n    });\n    const tagParam = `${tag}=`;\n    newFunc.params = [tagParam];\n    this.queryModel.addFunction(newFunc);\n    newFunc.added = true;\n\n    this.emptySegments();\n    this.targetChanged();\n    this.parseTarget();\n  }\n\n  smartlyHandleNewAliasByNode(func: { def: { name: string }; params: number[]; added: boolean }) {\n    if (func.def.name !== 'aliasByNode') {\n      return;\n    }\n\n    for (let i = 0; i < this.segments.length; i++) {\n      if (this.segments[i].value.indexOf('*') >= 0) {\n        func.params[0] = i;\n        func.added = false;\n        this.targetChanged();\n        return;\n      }\n    }\n  }\n\n  getAllTags() {\n    return this.datasource.getTags().then((values: any[]) => {\n      const altTags = _.map(values, 'text');\n      altTags.splice(0, 0, this.removeTagValue);\n      return mapToDropdownOptions(altTags);\n    });\n  }\n\n  getTags(index: number, tagPrefix: any) {\n    const tagExpressions = this.queryModel.renderTagExpressions(index);\n    return this.datasource.getTagsAutoComplete(tagExpressions, tagPrefix).then((values: any) => {\n      const altTags = _.map(values, 'text');\n      altTags.splice(0, 0, this.removeTagValue);\n      return mapToDropdownOptions(altTags);\n    });\n  }\n\n  getTagsAsSegments(tagPrefix: string) {\n    const tagExpressions = this.queryModel.renderTagExpressions();\n    return this.datasource.getTagsAutoComplete(tagExpressions, tagPrefix).then((values: any) => {\n      return _.map(values, val => {\n        return this.uiSegmentSrv.newSegment({\n          value: val.text,\n          type: 'tag',\n          expandable: false,\n        });\n      });\n    });\n  }\n\n  getTagOperators() {\n    return mapToDropdownOptions(GRAPHITE_TAG_OPERATORS);\n  }\n\n  getAllTagValues(tag: { key: any }) {\n    const tagKey = tag.key;\n    return this.datasource.getTagValues(tagKey).then((values: any[]) => {\n      const altValues = _.map(values, 'text');\n      return mapToDropdownOptions(altValues);\n    });\n  }\n\n  getTagValues(tag: { key: any }, index: number, valuePrefix: any) {\n    const tagExpressions = this.queryModel.renderTagExpressions(index);\n    const tagKey = tag.key;\n    return this.datasource.getTagValuesAutoComplete(tagExpressions, tagKey, valuePrefix).then((values: any[]) => {\n      const altValues = _.map(values, 'text');\n      // Add template variables as additional values\n      _.eachRight(this.templateSrv.variables, variable => {\n        altValues.push('${' + variable.name + ':regex}');\n      });\n      return mapToDropdownOptions(altValues);\n    });\n  }\n\n  tagChanged(tag: any, tagIndex: any) {\n    this.queryModel.updateTag(tag, tagIndex);\n    this.targetChanged();\n  }\n\n  addNewTag(segment: { value: any }) {\n    const newTagKey = segment.value;\n    const newTag = { key: newTagKey, operator: '=', value: '' };\n    this.queryModel.addTag(newTag);\n    this.targetChanged();\n    this.fixTagSegments();\n  }\n\n  removeTag(index: any) {\n    this.queryModel.removeTag(index);\n    this.targetChanged();\n  }\n\n  fixTagSegments() {\n    // Adding tag with the same name as just removed works incorrectly if single segment is used (instead of array)\n    this.addTagSegments = [this.uiSegmentSrv.newPlusButton()];\n  }\n\n  showDelimiter(index: number) {\n    return index !== this.queryModel.tags.length - 1;\n  }\n\n  pause() {\n    this.paused = true;\n  }\n\n  unpause() {\n    this.paused = false;\n    this.panelCtrl.refresh();\n  }\n\n  getCollapsedText() {\n    return this.target.target;\n  }\n}\n\nfunction mapToDropdownOptions(results: any[]) {\n  return _.map(results, value => {\n    return { text: value, value: value };\n  });\n}\n\nfunction removeTagPrefix(value: string): string {\n  return value.replace(TAG_PREFIX, '');\n}\n","import { css } from 'emotion';\n\nconst styles = {\n  helpbtn: css`\n    margin-left: 8px;\n    margin-top: 5px;\n  `,\n};\n\nexport default styles;\n","import React, { PureComponent } from 'react';\nimport { DataSourceHttpSettings, FormLabel, Button, Select } from '@grafana/ui';\nimport { DataSourcePluginOptionsEditorProps, onUpdateDatasourceJsonDataOptionSelect } from '@grafana/data';\nimport { GraphiteOptions, GraphiteType } from '../types';\nimport styles from './ConfigEditor.styles';\n\nconst graphiteVersions = [\n  { label: '0.9.x', value: '0.9' },\n  { label: '1.0.x', value: '1.0' },\n  { label: '1.1.x', value: '1.1' },\n];\n\nconst graphiteTypes = Object.entries(GraphiteType).map(([label, value]) => ({\n  label,\n  value,\n}));\n\nexport type Props = DataSourcePluginOptionsEditorProps<GraphiteOptions>;\n\ninterface State {\n  showMetricTankHelp: boolean;\n}\n\nexport class ConfigEditor extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      showMetricTankHelp: false,\n    };\n  }\n\n  render() {\n    const { options, onOptionsChange } = this.props;\n    const { showMetricTankHelp } = this.state;\n\n    const currentVersion =\n      graphiteVersions.find(item => item.value === options.jsonData.graphiteVersion) ?? graphiteVersions[2];\n\n    return (\n      <>\n        <DataSourceHttpSettings\n          defaultUrl=\"http://localhost:8080\"\n          dataSourceConfig={options}\n          onChange={onOptionsChange}\n        />\n        <h3 className=\"page-heading\">Graphite details</h3>\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form\">\n              <FormLabel tooltip=\"This option controls what functions are available in the Graphite query editor.\">\n                Version\n              </FormLabel>\n              <Select\n                value={currentVersion}\n                options={graphiteVersions}\n                width={8}\n                onChange={onUpdateDatasourceJsonDataOptionSelect(this.props, 'graphiteVersion')}\n              />\n            </div>\n          </div>\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form\">\n              <FormLabel>Type</FormLabel>\n              <Select\n                options={graphiteTypes}\n                value={graphiteTypes.find(type => type.value === options.jsonData.graphiteType)}\n                width={8}\n                onChange={onUpdateDatasourceJsonDataOptionSelect(this.props, 'graphiteType')}\n              />\n\n              <div className={styles.helpbtn}>\n                <Button\n                  variant=\"secondary\"\n                  size=\"sm\"\n                  onClick={() =>\n                    this.setState((prevState: State) => ({ showMetricTankHelp: !prevState.showMetricTankHelp }))\n                  }\n                >\n                  Help <i className={showMetricTankHelp ? 'fa fa-caret-down' : 'fa fa-caret-right'} />\n                </Button>\n              </div>\n            </div>\n          </div>\n          {showMetricTankHelp && (\n            <div className=\"grafana-info-box m-t-2\">\n              <div className=\"alert-body\">\n                <p>\n                  There are different types of Graphite compatible backends. Here you can specify the type you are\n                  using. If you are using{' '}\n                  <a href=\"https://github.com/grafana/metrictank\" className=\"pointer\" target=\"_blank\">\n                    Metrictank\n                  </a>{' '}\n                  then select that here. This will enable Metrictank specific features like query processing meta data.\n                  Metrictank is a multi-tenant timeseries engine for Graphite and friends.\n                </p>\n              </div>\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","export interface MetricTankResultMeta {\n  'schema-name': string;\n  'schema-retentions': string; //\"1s:35d:20min:5:1542274085,1min:38d:2h:1:true,10min:120d:6h:1:true,2h:2y:6h:2\",\n}\n\n// https://github.com/grafana/metrictank/blob/master/scripts/config/storage-schemas.conf#L15-L46\n\nexport interface RetentionInfo {\n  interval: string;\n  retention?: string;\n  chunkspan?: string;\n  numchunks?: number;\n  ready?: boolean | number; // whether, or as of what data timestamp, the archive is ready for querying.\n}\n\nfunction toInteger(val?: string): number | undefined {\n  if (val) {\n    return parseInt(val, 10);\n  }\n  return undefined;\n}\nfunction toBooleanOrTimestamp(val?: string): number | boolean | undefined {\n  if (val) {\n    if (val === 'true') {\n      return true;\n    }\n    if (val === 'false') {\n      return false;\n    }\n    return parseInt(val, 10);\n  }\n  return undefined;\n}\n\nexport function parseSchemaRetentions(spec: string): RetentionInfo[] {\n  if (!spec) {\n    return [];\n  }\n  return spec.split(',').map(str => {\n    const vals = str.split(':');\n    return {\n      interval: vals[0],\n      retention: vals[1],\n      chunkspan: vals[2],\n      numchunks: toInteger(vals[3]),\n      ready: toBooleanOrTimestamp(vals[4]),\n    };\n  });\n}\n","import React, { PureComponent } from 'react';\nimport { MetadataInspectorProps, DataFrame } from '@grafana/data';\nimport { GraphiteDatasource } from './datasource';\nimport { GraphiteQuery, GraphiteOptions, MetricTankMeta, MetricTankResultMeta } from './types';\nimport { parseSchemaRetentions } from './meta';\n\nexport type Props = MetadataInspectorProps<GraphiteDatasource, GraphiteQuery, GraphiteOptions>;\n\nexport interface State {\n  index: number;\n}\n\nexport class MetricTankMetaInspector extends PureComponent<Props, State> {\n  state = { index: 0 };\n\n  renderInfo = (info: MetricTankResultMeta, frame: DataFrame) => {\n    const buckets = parseSchemaRetentions(info['schema-retentions']);\n    return (\n      <div>\n        <h3>Info</h3>\n        <table>\n          <tbody>\n            {buckets.map(row => (\n              <tr key={row.interval}>\n                <td>{row.interval} &nbsp;</td>\n                <td>{row.retention} &nbsp;</td>\n                <td>{row.chunkspan} &nbsp;</td>\n                <td>{row.numchunks} &nbsp;</td>\n                <td>{row.ready} &nbsp;</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <pre>{JSON.stringify(info, null, 2)}</pre>\n      </div>\n    );\n  };\n\n  render() {\n    const { data } = this.props;\n    if (!data || !data.length) {\n      return <div>No Metadata</div>;\n    }\n\n    const frame = data[this.state.index];\n    const meta = frame.meta?.custom as MetricTankMeta;\n    if (!meta || !meta.info) {\n      return <>No Metadatata on DataFrame</>;\n    }\n    return (\n      <div>\n        <h3>MetricTank Request</h3>\n        <pre>{JSON.stringify(meta.request, null, 2)}</pre>\n        {meta.info.map(info => this.renderInfo(info, frame))}\n      </div>\n    );\n  }\n}\n","import { GraphiteDatasource } from './datasource';\nimport { GraphiteQueryCtrl } from './query_ctrl';\nimport { DataSourcePlugin } from '@grafana/data';\nimport { ConfigEditor } from './configuration/ConfigEditor';\nimport { MetricTankMetaInspector } from './MetricTankMetaInspector';\n\nclass AnnotationsQueryCtrl {\n  static templateUrl = 'partials/annotations.editor.html';\n}\n\nexport const plugin = new DataSourcePlugin(GraphiteDatasource)\n  .setQueryCtrl(GraphiteQueryCtrl)\n  .setConfigEditor(ConfigEditor)\n  .setMetadataInspector(MetricTankMetaInspector)\n  .setAnnotationQueryCtrl(AnnotationsQueryCtrl);\n"],"sourceRoot":""}