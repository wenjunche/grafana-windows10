{"version":3,"sources":["webpack:///./public/app/features/explore/ErrorContainer.tsx","webpack:///./public/app/features/explore/ExploreGraphPanel.tsx","webpack:///./public/app/features/explore/RichHistory/RichHistorySettings.tsx","webpack:///./public/app/features/explore/RichHistory/RichHistoryQueriesTab.tsx","webpack:///./public/app/features/explore/RichHistory/RichHistoryStarredTab.tsx","webpack:///./public/app/features/explore/RichHistory/RichHistory.tsx","webpack:///./node_modules/fast-memoize/src/index.js","webpack:///./public/app/features/explore/QueryRow.tsx","webpack:///./public/app/features/explore/ElapsedTime.tsx","webpack:///./public/app/features/explore/LiveLogs.tsx","webpack:///./public/app/features/explore/ResponsiveButton.tsx","webpack:///./public/app/features/explore/RichHistory/RichHistoryContainer.tsx","webpack:///./node_modules/re-resizable/lib/resizer.js","webpack:///./node_modules/lodash/has.js","webpack:///./public/app/features/explore/useLiveTailControls.ts","webpack:///./public/app/features/explore/NoDataSourceCallToAction.tsx","webpack:///./node_modules/re-resizable/lib/index.js","webpack:///./public/app/features/explore/LogsContainer.tsx","webpack:///./public/app/features/explore/ExploreToolbar.tsx","webpack:///./public/app/features/explore/QueryRows.tsx","webpack:///./public/app/features/explore/Wrapper.tsx","webpack:///./public/app/features/explore/Logs.tsx","webpack:///./public/app/features/explore/MetaInfoText.tsx","webpack:///./public/app/features/explore/QueryRowActions.tsx","webpack:///./public/app/features/explore/TimeSyncButton.tsx","webpack:///./public/app/features/explore/ExploreTimeControls.tsx","webpack:///./public/app/features/explore/utils/LogsCrossFadeTransition.tsx","webpack:///./node_modules/lodash/_baseHas.js","webpack:///./public/app/features/explore/RunButton.tsx","webpack:///./public/app/features/explore/LiveTailButton.tsx","webpack:///./public/app/features/explore/Explore.tsx","webpack:///./public/app/features/explore/RichHistory/RichHistoryCard.tsx","webpack:///./public/app/features/explore/QueryEditor.tsx","webpack:///./public/app/features/explore/TableContainer.tsx"],"names":["ErrorContainer","props","queryError","showError","duration","message","in","className","UnThemedExploreGraphPanel","state","hiddenSeries","showAllTimeSeries","onShowAllTimeSeries","setState","onClickGraphButton","onToggleGraph","showingGraph","onChangeTime","from","to","onUpdateTimeRange","renderGraph","width","series","onHiddenSeriesChanged","timeZone","absoluteRange","showPanel","showingTable","showBars","showLines","isStacked","timeRange","dateTimeForTimeZone","raw","height","lineWidth","seriesToShow","slice","onSeriesToggle","toggledSeries","displayMode","LegendDisplayMode","List","isLegendVisible","placement","showPoints","onToggleSort","onHorizontalRegionSelected","Tooltip","mode","this","loading","theme","style","timeSeriesDisclaimer","css","spacing","sm","border","radius","md","selectThemeVariant","light","colors","white","dark","dark4","type","disclaimerIcon","yellow","xs","linkExternal","getStyles","length","cx","onClick","label","collapsible","isOpen","onToggle","PureComponent","ExploreGraphPanel","withTheme","displayName","stylesFactory","container","typography","size","lg","input","switch","retentionPeriodOptions","value","RichHistorySettings","retentionPeriod","starredTabAsFirstTab","activeDatasourceOnly","onChangeRetentionPeriod","toggleStarredTabAsFirstTab","toggleactiveDatasourceOnly","deleteRichHistory","useTheme","styles","selectedOption","find","v","Field","description","Select","options","onChange","Switch","weight","bold","Button","variant","appEvents","emit","CoreEvents","showConfirmModal","title","text","yesText","icon","onConfirm","AppEvents","alertSuccess","bgColor","isLight","gray5","sliderHeight","semibold","containerContent","containerSlider","slider","selectors","multiselect","xxs","sort","sessionName","heading","h4","feedback","queries","regular","RichHistoryQueriesTab","datasourceFilters","onSelectDatasourceFilters","onChangeSortOrder","sortOrder","exploreId","useState","sliderRetentionFilter","setSliderRetentionFilter","datasourcesRetrievedFromQueryHistory","uniqBy","map","d","datasourceName","listOfDatasources","createDatasourcesList","listOfDatasourceFilters","filteredQueriesByDatasource","filter","q","includes","sortedQueries","sortQueries","queriesWithinSelectedTimeline","ts","createRetentionPeriodBoundary","mappedQueriesToHeadings","mapQueriesToHeadings","mapNumbertoTimeInSlider","tooltipAlwaysVisible","min","max","orientation","formatTooltipResult","reverse","onAfterChange","aria-label","isMulti","placeholder","sortOrderOptions","order","e","Object","keys","key","idx","findIndex","RichHistoryCard","query","dsImg","imgUrl","isRemoved","href","Tabs","RichHistoryStarredTab","starredQueries","starred","starredQueriesFilteredByDatasource","sortedStarredQueries","SortOrder","Ascending","Descending","DatasourceAZ","DatasourceZA","borderColor","dark6","tabBarBg","black","tabContentBg","gray7","dark2","tabContent","close","tabs","UnThemedRichHistory","store","set","RICH_HISTORY_SETTING_KEYS","setObject","onSelectTab","item","activeTab","firstTab","getObject","getBool","activeDatasourceInstance","updateFilters","prevProps","prevState","richHistory","onClose","RichHistory","content","Starred","Settings","t","active","onChangeTab","monadic","fn","cache","serializer","arg","cacheKey","computedValue","get","call","variadic","args","Array","prototype","arguments","apply","assemble","context","strategy","serialize","bind","strategyDefault","create","serializerDefault","JSON","stringify","ObjectWithoutPrototypeCache","has","cacheDefault","module","exports","strategies","noopOnBlur","QueryRow","textEditModeEnabled","onRunQuery","runQueries","override","datasourceInstance","index","changeQuery","getHighlighterExpression","updateLogsHighlights","onClickToggleDisabled","newQuery","hide","onClickRemoveButton","removeQueryRowAction","onClickToggleEditorMode","debounce","expressions","highlightLogsExpressionAction","console","log","QueryField","history","exploreEvents","range","queryResponse","latency","canToggleEditorModes","ExploreMode","Metrics","isNotStarted","LoadingState","NotStarted","queryErrors","error","refId","components","ExploreMetricsQueryField","Logs","ExploreLogsQueryField","ExploreQueryField","datasource","onBlur","data","exploreMode","onQueryChange","onExecuteQuery","initialQuery","isDisabled","mapDispatchToProps","modifyQueries","hot","connect","explore","ElapsedTime","elapsed","tick","Date","now","offset","timer","window","setInterval","nextProps","time","clearInterval","start","resetKey","humanize","displayValue","toFixed","toDuration","hours","minutes","seconds","LiveLogs","liveEndDiv","scrollContainerRef","React","createRef","lastScrollPos","onScroll","event","isPaused","onPause","currentTarget","scrollTop","clientHeight","distanceFromBottom","scrollHeight","rowsToRender","logRowsToRender","logRows","current","scrollTo","scrollIntoView","onResume","logsRowsLive","fontFamily","monospace","logsRowFade","tinycolor","blueLight","setAlpha","toString","logsRowsIndicator","button","fullWidth","showUtc","getLogRowStyles","logsRow","logsRowLocalTime","logsRowMessage","undefined","ref","row","uid","timeLocal","timeFromNow","timeUtc","entry","element","stopLive","LiveLogsWithTheme","IconSide","ResponsiveButton","forwardRef","iconSide","left","buttonClassName","iconClassName","splitted","disabled","divElementProps","right","formatBtnTitle","containerBackground","containerBorderColor","handleBackground","gray15","handleDots","gray70","gray33","handleBackgroundHover","handleDotsHover","dark7","drawerActive","drawerNotActive","rzHandle","name","visible","setVisible","setHeight","useEffect","setTimeout","clearTimeout","drawerWidth","defaultSize","handleClasses","top","enable","bottom","topRight","bottomRight","bottomLeft","topLeft","maxHeight","maxWidth","minWidth","onResize","dir","Number","extendStatics","__extends","b","setPrototypeOf","__proto__","p","hasOwnProperty","__","constructor","__assign","assign","s","i","n","__importStar","mod","__esModule","result","k","defineProperty","cursor","position","Resizer","_super","_this","onMouseDown","onResizeStart","direction","onTouchStart","render","createElement","userSelect","replaceStyles","children","baseHas","hasPath","object","path","LiveTailControls","dispatch","pause","resume","stop","controls","useDispatch","useCallback","setPausedStateAction","changeRefreshInterval","RefreshPicker","offOption","liveOption","NoDataSourceCallToAction","useContext","ThemeContext","footer","target","rel","ctaElement","cardClassName","breakpoints","callToActionElement","__importDefault","resizer_1","fast_memoize_1","DEFAULT_SIZE","clamp","default","Math","snap","round","hasDirection","RegExp","test","findClosestSnap","snapArray","snapGap","closestGapIndex","reduce","prev","curr","abs","gap","endsWith","str","searchStr","substr","getStringSize","getPixelSize","parentSize","ratio","replace","innerWidth","innerHeight","calculateNewMax","minHeight","definedProps","Resizable","resizable","parentLeft","parentTop","resizableLeft","resizableTop","targetLeft","targetTop","c","isResizing","propsSize","original","x","y","backgroundStyle","backgroundColor","opacity","zIndex","onMouseMove","onMouseUp","parentNode","enumerable","configurable","parent","_i","children_1","HTMLElement","classList","contains","orgWidth","offsetWidth","orgHeight","offsetHeight","orgPosition","getSize","getParentSize","base","wrapChanged","wrap","flexWrap","bindEvents","addEventListener","unbindEvents","removeEventListener","componentDidMount","computedStyle","getComputedStyle","flexBasis","document","transform","flex","add","appendChild","componentWillUnmount","parent_1","Node","removeChild","createSizeForCssProperty","newSize","kind","calculateNewMaxFromBoundary","bounds","parent_2","boundWidth","boundHeight","calculateNewSizeFromDirection","clientX","clientY","scale","resizeRatio","_a","_b","lockAspectRatio","lockAspectRatioExtraHeight","lockAspectRatioExtraWidth","newWidth","newHeight","extraHeight","extraWidth","calculateNewSizeFromAspectRatio","computedMinWidth","computedMaxWidth","computedMinHeight","computedMaxHeight","extraMinWidth","extraMaxWidth","extraMinHeight","extraMaxHeight","lockedMinWidth","lockedMaxWidth","lockedMinHeight","lockedMaxHeight","setBoundingClientRect","parent_3","parentRect","getBoundingClientRect","targetRect","top_1","nativeEvent","MouseEvent","which","TouchEvent","touches","parent_4","flexDirection","flexDir","startsWith","_c","boundaryMax","grid","newGridWidth","newGridHeight","delta","newState","onResizeStop","updateSize","renderResizer","handleStyles","handleWrapperStyle","handleWrapperClass","handleComponent","resizers","extendsProps","acc","indexOf","sizeStyle","boxSizing","flexShrink","defaultProps","LogsContainer","updateTimeRange","handleDedupStrategyChange","dedupStrategy","changeDedupStrategy","handleToggleLogLevel","hiddenLogLevels","toggleLogLevelAction","getLogRowContext","logsHighlighterExpressions","logsMeta","logsSeries","dedupedRows","onClickFilterLabel","onClickFilterOutLabel","onStartScanning","onStopScanning","scanning","isLive","LogsDedupStrategy","none","highlighterExpressions","onDedupStrategyChange","onToggleLogLevel","scanRange","getRowContext","getFieldLinks","getLinksFromLogsField","logsResult","deduplicatedRowsSelector","getTimeZone","user","rows","meta","memoizeOne","liveTailButtons","UnConnectedExploreToolbar","onChangeDatasource","option","changeDatasource","onClearAll","clearAll","onChangeRefreshInterval","onModeChange","changeMode","onChangeTimeSync","syncTimes","returnToPanel","withChanges","originPanelId","dashboardSrv","getDashboardSrv","dash","getCurrent","titleSlug","kbn","slugifyForUrl","setDashboardQueriesToUpdateOnLoad","panelId","cleanQueries","dashViewOptions","fullscreen","edit","isEditing","updateLocation","omitBy","getSelectedDatasource","exploreDatasources","getExploreDatasources","datasourceMissing","closeSplit","syncedTimes","refreshInterval","split","supportedModes","selectedMode","hasLiveOption","datasourceLoading","containerWidth","originDashboardIsEditable","isInteger","panelReturnClasses","classNames","showSmallDataSourcePicker","showSmallTimePicker","datasources","showLoading","hideTextValue","transparent","selected","maxMenuHeight","hideText","onRun","showDropdown","func","interval","clearQueries","splitClose","splitOpen","ExploreToolbar","exploreItem","streaming","QueryRows","queryKeys","Wrapper","resetExploreAction","autoHeightMin","autoHeightMax","ExploreId","Component","SETTINGS_KEYS","showLabels","showTime","wrapLogMessage","onChangeDedup","dedup","onChangeLabels","checked","onChangewrapLogMessage","hiddenRawLevels","level","LogLevel","onClickScan","preventDefault","onClickStopScan","hasData","dedupCount","sum","duplicates","push","LogsMetaKind","scanText","rangeUtil","describeTimeRange","dedupType","tooltip","LogsDedupDescription","metaItems","LabelsMap","labels","deduplicatedRows","rowLimit","metaContainer","textWeak","metaItem","metaLabel","metaValue","MetaInfoItem","memo","MetaInfoText","QueryRowActions","noRightBorderStyle","topPadding","TimeSyncButton","isSynced","ExploreTimeControls","onMoveTimePicker","getShiftedTimeRange","onMoveForward","onMoveBack","onChangeTimePicker","onZoom","getZoomedTimeRange","timeSyncButton","timePickerCommonProps","onMoveBackward","TimePickerWithHistory","logsEnter","logsEnterActive","logsExit","logsExitActive","LogsCrossFadeTransition","mountOnEnter","unmountOnExit","timeout","transitionDuration","enter","enterActive","exit","exitActive","selectButtonOverride","RunButton","runButton","onIntervalChanged","buttonSelectClassName","refreshButton","dark1","orangeLighter","orangeDark","lighten","pulseTextColor","desaturate","liveButton","stopButtonEnter","stopButtonEnterActive","stopButtonExit","stopButtonExitActive","defaultLiveTooltip","LiveTailButton","onClickMain","logsMain","Explore","getRef","el","rawRange","onClickExample","setQueries","onModifyQueries","onClickAddQueryRowButton","addQueryRow","action","modifyQuery","modification","changeSize","scanStart","scanStopAction","toggleGraph","toggleShowRichHistory","showRichHistory","refreshExplore","update","ui","renderEmptyState","Emitter","initialized","initialDatasource","initialQueries","initialRange","initialUI","initializeExplore","removeAllListeners","graphResult","exploreClass","StartPage","ExploreStartPage","showStartPage","getFirstNonQueryRowSpecificError","disableHeight","onClickCell","ensureQueriesMemoized","ensureQueries","getTimeRangeFromUrlMemoized","getTimeRangeFromUrl","newMode","urlState","urlRange","urlMode","lastUsedDatasourceKeyForOrgId","orgId","getTimeRange","DEFAULT_RANGE","urlModeIsValid","DEFAULT_UI_STATE","gray25","cardColor","gray95","gray05","cardBoxShadow","queryCard","orange","cardRow","datasourceContainer","queryActionButtons","queryContainer","queryRow","updateCommentContainer","comment","commentButtonRow","textArea","updateRichHistory","activeUpdateComment","setActiveUpdateComment","setComment","toggleActiveUpdateComment","dataQueries","createDataQuery","updateComment","TextArea","join","copyStringToClipboard","url","createUrlFromRichHistory","src","QueryEditor","initTimeSrv","loader","getAngularLoader","scopeProps","ctrl","refresh","events","panel","targets","dashboard","component","load","angularScope","hasToggledEditorMode","hasNewError","toggleEditorMode","digest","destroy","getTimeSrv","init","dateTime","getTimezone","timeRangeUpdated","TableContainer","onClickTableButton","toggleTable","tableResult","getTableHeight","tableWidth","config","panelPadding","PANEL_BORDER","hasTableResult","onCellClick","loadingInState"],"mappings":"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","file":"explore.898fe9e20a782b4232fe.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { DataQueryError } from '@grafana/data';\nimport { FadeIn } from 'app/core/components/Animations/FadeIn';\n\nexport interface ErrorContainerProps {\n  queryError?: DataQueryError;\n}\n\nexport const ErrorContainer: FunctionComponent<ErrorContainerProps> = props => {\n  const { queryError } = props;\n  const showError = queryError ? true : false;\n  const duration = showError ? 100 : 10;\n  const message = queryError ? queryError.message : null;\n\n  return (\n    <FadeIn in={showError} duration={duration}>\n      <div className=\"alert-container\">\n        <div className=\"alert-error alert\">\n          <div className=\"alert-icon\">\n            <i className=\"fa fa-exclamation-triangle\" />\n          </div>\n          <div className=\"alert-body\">\n            <div className=\"alert-title\">{message}</div>\n          </div>\n        </div>\n      </div>\n    </FadeIn>\n  );\n};\n","import React, { PureComponent } from 'react';\nimport { css, cx } from 'emotion';\nimport { GrafanaTheme, TimeZone, AbsoluteTimeRange, GraphSeriesXY, dateTimeForTimeZone } from '@grafana/data';\n\nimport {\n  selectThemeVariant,\n  Themeable,\n  GraphWithLegend,\n  LegendDisplayMode,\n  withTheme,\n  Collapse,\n  GraphSeriesToggler,\n  GraphSeriesTogglerAPI,\n  Chart,\n} from '@grafana/ui';\n\nconst MAX_NUMBER_OF_TIME_SERIES = 20;\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  timeSeriesDisclaimer: css`\n    label: time-series-disclaimer;\n    width: 300px;\n    margin: ${theme.spacing.sm} auto;\n    padding: 10px 0;\n    border-radius: ${theme.border.radius.md};\n    text-align: center;\n    background-color: ${selectThemeVariant({ light: theme.colors.white, dark: theme.colors.dark4 }, theme.type)};\n  `,\n  disclaimerIcon: css`\n    label: disclaimer-icon;\n    color: ${theme.colors.yellow};\n    margin-right: ${theme.spacing.xs};\n  `,\n  showAllTimeSeries: css`\n    label: show-all-time-series;\n    cursor: pointer;\n    color: ${theme.colors.linkExternal};\n  `,\n});\n\ninterface Props extends Themeable {\n  series?: GraphSeriesXY[];\n  width: number;\n  absoluteRange: AbsoluteTimeRange;\n  loading?: boolean;\n  showPanel: boolean;\n  showBars: boolean;\n  showLines: boolean;\n  isStacked: boolean;\n  showingGraph?: boolean;\n  showingTable?: boolean;\n  timeZone?: TimeZone;\n  onUpdateTimeRange: (absoluteRange: AbsoluteTimeRange) => void;\n  onToggleGraph?: (showingGraph: boolean) => void;\n  onHiddenSeriesChanged?: (hiddenSeries: string[]) => void;\n}\n\ninterface State {\n  hiddenSeries: string[];\n  showAllTimeSeries: boolean;\n}\n\nclass UnThemedExploreGraphPanel extends PureComponent<Props, State> {\n  state: State = {\n    hiddenSeries: [],\n    showAllTimeSeries: false,\n  };\n\n  onShowAllTimeSeries = () => {\n    this.setState({\n      showAllTimeSeries: true,\n    });\n  };\n\n  onClickGraphButton = () => {\n    const { onToggleGraph, showingGraph } = this.props;\n    if (onToggleGraph) {\n      onToggleGraph(showingGraph ?? false);\n    }\n  };\n\n  onChangeTime = (from: number, to: number) => {\n    const { onUpdateTimeRange } = this.props;\n    onUpdateTimeRange({ from, to });\n  };\n\n  renderGraph = () => {\n    const {\n      width,\n      series,\n      onHiddenSeriesChanged,\n      timeZone,\n      absoluteRange,\n      showPanel,\n      showingGraph,\n      showingTable,\n      showBars,\n      showLines,\n      isStacked,\n    } = this.props;\n    const { showAllTimeSeries } = this.state;\n\n    if (!series) {\n      return null;\n    }\n\n    const timeRange = {\n      from: dateTimeForTimeZone(timeZone, absoluteRange.from),\n      to: dateTimeForTimeZone(timeZone, absoluteRange.to),\n      raw: {\n        from: dateTimeForTimeZone(timeZone, absoluteRange.from),\n        to: dateTimeForTimeZone(timeZone, absoluteRange.to),\n      },\n    };\n    const height = showPanel === false ? 100 : showingGraph && showingTable ? 200 : 400;\n    const lineWidth = showLines ? 1 : 5;\n    const seriesToShow = showAllTimeSeries ? series : series.slice(0, MAX_NUMBER_OF_TIME_SERIES);\n\n    return (\n      <GraphSeriesToggler series={seriesToShow} onHiddenSeriesChanged={onHiddenSeriesChanged}>\n        {({ onSeriesToggle, toggledSeries }: GraphSeriesTogglerAPI) => {\n          return (\n            <GraphWithLegend\n              displayMode={LegendDisplayMode.List}\n              height={height}\n              isLegendVisible={true}\n              placement={'under'}\n              width={width}\n              timeRange={timeRange}\n              timeZone={timeZone}\n              showBars={showBars}\n              showLines={showLines}\n              showPoints={false}\n              onToggleSort={() => {}}\n              series={toggledSeries}\n              isStacked={isStacked}\n              lineWidth={lineWidth}\n              onSeriesToggle={onSeriesToggle}\n              onHorizontalRegionSelected={this.onChangeTime}\n            >\n              {/* For logs we are using mulit mode until we refactor logs histogram to use barWidth instead of lineWidth to render bars */}\n              <Chart.Tooltip mode={showBars ? 'multi' : 'single'} />\n            </GraphWithLegend>\n          );\n        }}\n      </GraphSeriesToggler>\n    );\n  };\n\n  render() {\n    const { series, showPanel, showingGraph, loading, theme } = this.props;\n    const { showAllTimeSeries } = this.state;\n    const style = getStyles(theme);\n\n    return (\n      <>\n        {series && series.length > MAX_NUMBER_OF_TIME_SERIES && !showAllTimeSeries && (\n          <div className={cx([style.timeSeriesDisclaimer])}>\n            <i className={cx(['fa fa-fw fa-warning', style.disclaimerIcon])} />\n            {`Showing only ${MAX_NUMBER_OF_TIME_SERIES} time series. `}\n            <span\n              className={cx([style.showAllTimeSeries])}\n              onClick={this.onShowAllTimeSeries}\n            >{`Show all ${series.length}`}</span>\n          </div>\n        )}\n\n        {showPanel && (\n          <Collapse\n            label=\"Graph\"\n            collapsible\n            isOpen={showingGraph}\n            loading={loading}\n            onToggle={this.onClickGraphButton}\n          >\n            {this.renderGraph()}\n          </Collapse>\n        )}\n\n        {!showPanel && this.renderGraph()}\n      </>\n    );\n  }\n}\n\nexport const ExploreGraphPanel = withTheme(UnThemedExploreGraphPanel);\nExploreGraphPanel.displayName = 'ExploreGraphPanel';\n","import React from 'react';\nimport { css } from 'emotion';\nimport { stylesFactory, useTheme, Forms } from '@grafana/ui';\nimport { GrafanaTheme, AppEvents } from '@grafana/data';\nimport appEvents from 'app/core/app_events';\nimport { CoreEvents } from 'app/types';\n\nexport interface RichHistorySettingsProps {\n  retentionPeriod: number;\n  starredTabAsFirstTab: boolean;\n  activeDatasourceOnly: boolean;\n  onChangeRetentionPeriod: (option: { label: string; value: number }) => void;\n  toggleStarredTabAsFirstTab: () => void;\n  toggleactiveDatasourceOnly: () => void;\n  deleteRichHistory: () => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    container: css`\n      padding-left: ${theme.spacing.sm};\n      font-size: ${theme.typography.size.sm};\n      .space-between {\n        margin-bottom: ${theme.spacing.lg};\n      }\n    `,\n    input: css`\n      max-width: 200px;\n    `,\n    switch: css`\n      display: flex;\n      align-items: center;\n    `,\n    label: css`\n      margin-left: ${theme.spacing.md};\n    `,\n  };\n});\n\nconst retentionPeriodOptions = [\n  { value: 2, label: '2 days' },\n  { value: 5, label: '5 days' },\n  { value: 7, label: '1 week' },\n  { value: 14, label: '2 weeks' },\n];\n\nexport function RichHistorySettings(props: RichHistorySettingsProps) {\n  const {\n    retentionPeriod,\n    starredTabAsFirstTab,\n    activeDatasourceOnly,\n    onChangeRetentionPeriod,\n    toggleStarredTabAsFirstTab,\n    toggleactiveDatasourceOnly,\n    deleteRichHistory,\n  } = props;\n  const theme = useTheme();\n  const styles = getStyles(theme);\n  const selectedOption = retentionPeriodOptions.find(v => v.value === retentionPeriod);\n\n  const onDelete = () => {\n    appEvents.emit(CoreEvents.showConfirmModal, {\n      title: 'Delete',\n      text: 'Are you sure you want to permanently delete your query history?',\n      yesText: 'Delete',\n      icon: 'fa-trash',\n      onConfirm: () => {\n        deleteRichHistory();\n        appEvents.emit(AppEvents.alertSuccess, ['Query history deleted']);\n      },\n    });\n  };\n\n  return (\n    <div className={styles.container}>\n      <Forms.Field\n        label=\"History time span\"\n        description=\"Select the period of time for which Grafana will save your query history\"\n        className=\"space-between\"\n      >\n        <div className={styles.input}>\n          <Forms.Select\n            value={selectedOption}\n            options={retentionPeriodOptions}\n            onChange={onChangeRetentionPeriod}\n          ></Forms.Select>\n        </div>\n      </Forms.Field>\n      <Forms.Field label=\"Default active tab\" description=\" \" className=\"space-between\">\n        <div className={styles.switch}>\n          <Forms.Switch value={starredTabAsFirstTab} onChange={toggleStarredTabAsFirstTab}></Forms.Switch>\n          <div className={styles.label}>Change the default active tab from “Query history” to “Starred”</div>\n        </div>\n      </Forms.Field>\n      <Forms.Field label=\"Data source behaviour\" description=\" \" className=\"space-between\">\n        <div className={styles.switch}>\n          <Forms.Switch value={activeDatasourceOnly} onChange={toggleactiveDatasourceOnly}></Forms.Switch>\n          <div className={styles.label}>Only show queries for data source currently active in Explore</div>\n        </div>\n      </Forms.Field>\n      <div\n        className={css`\n          font-weight: ${theme.typography.weight.bold};\n        `}\n      >\n        Clear query history\n      </div>\n      <div\n        className={css`\n          margin-bottom: ${theme.spacing.sm};\n        `}\n      >\n        Delete all of your query history, permanently.\n      </div>\n      <Forms.Button variant=\"destructive\" onClick={onDelete}>\n        Clear query history\n      </Forms.Button>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { css } from 'emotion';\nimport { uniqBy } from 'lodash';\n\n// Types\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\n\n// Utils\nimport { stylesFactory, useTheme } from '@grafana/ui';\nimport { GrafanaTheme, SelectableValue } from '@grafana/data';\n\nimport { SortOrder } from 'app/core/utils/explore';\nimport {\n  sortQueries,\n  mapNumbertoTimeInSlider,\n  createRetentionPeriodBoundary,\n  mapQueriesToHeadings,\n  createDatasourcesList,\n} from 'app/core/utils/richHistory';\n\n// Components\nimport RichHistoryCard from './RichHistoryCard';\nimport { sortOrderOptions } from './RichHistory';\nimport { Select, Slider } from '@grafana/ui';\n\nexport interface Props {\n  queries: RichHistoryQuery[];\n  sortOrder: SortOrder;\n  activeDatasourceOnly: boolean;\n  datasourceFilters: SelectableValue[] | null;\n  retentionPeriod: number;\n  exploreId: ExploreId;\n  height: number;\n  onChangeSortOrder: (sortOrder: SortOrder) => void;\n  onSelectDatasourceFilters: (value: SelectableValue[] | null) => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme, height: number) => {\n  const bgColor = theme.isLight ? theme.colors.gray5 : theme.colors.dark4;\n\n  /* 134px is based on the width of the Query history tabs bar, so the content is aligned to right side of the tab */\n  const cardWidth = '100% - 134px';\n  const sliderHeight = `${height - 200}px`;\n  return {\n    container: css`\n      display: flex;\n      .label-slider {\n        font-size: ${theme.typography.size.sm};\n        &:last-of-type {\n          margin-top: ${theme.spacing.lg};\n        }\n        &:first-of-type {\n          font-weight: ${theme.typography.weight.semibold};\n          margin-bottom: ${theme.spacing.md};\n        }\n      }\n    `,\n    containerContent: css`\n      width: calc(${cardWidth});\n    `,\n    containerSlider: css`\n      width: 127px;\n      margin-right: ${theme.spacing.sm};\n      .slider {\n        bottom: 10px;\n        height: ${sliderHeight};\n        width: 127px;\n        padding: ${theme.spacing.sm} 0;\n      }\n    `,\n    slider: css`\n      position: fixed;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n    `,\n    multiselect: css`\n      width: 60%;\n      .gf-form-select-box__multi-value {\n        background-color: ${bgColor};\n        padding: ${theme.spacing.xxs} ${theme.spacing.xs} ${theme.spacing.xxs} ${theme.spacing.sm};\n        border-radius: ${theme.border.radius.sm};\n      }\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    sessionName: css`\n      display: flex;\n      align-items: flex-start;\n      justify-content: flex-start;\n      margin-top: ${theme.spacing.lg};\n      h4 {\n        margin: 0 10px 0 0;\n      }\n    `,\n    heading: css`\n      font-size: ${theme.typography.heading.h4};\n      margin: ${theme.spacing.md} ${theme.spacing.xxs} ${theme.spacing.sm} ${theme.spacing.xxs};\n    `,\n    feedback: css`\n      height: 60px;\n      margin-top: ${theme.spacing.lg};\n      display: flex;\n      justify-content: center;\n      font-weight: ${theme.typography.weight.light};\n      font-size: ${theme.typography.size.sm};\n      a {\n        font-weight: ${theme.typography.weight.semibold};\n        margin-left: ${theme.spacing.xxs};\n      }\n    `,\n    queries: css`\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.regular};\n      margin-left: ${theme.spacing.xs};\n    `,\n  };\n});\n\nexport function RichHistoryQueriesTab(props: Props) {\n  const {\n    datasourceFilters,\n    onSelectDatasourceFilters,\n    queries,\n    onChangeSortOrder,\n    sortOrder,\n    activeDatasourceOnly,\n    retentionPeriod,\n    exploreId,\n    height,\n  } = props;\n\n  const [sliderRetentionFilter, setSliderRetentionFilter] = useState<[number, number]>([0, retentionPeriod]);\n\n  const theme = useTheme();\n  const styles = getStyles(theme, height);\n  const datasourcesRetrievedFromQueryHistory = uniqBy(queries, 'datasourceName').map(d => d.datasourceName);\n  const listOfDatasources = createDatasourcesList(datasourcesRetrievedFromQueryHistory);\n\n  const listOfDatasourceFilters = datasourceFilters?.map(d => d.value);\n  const filteredQueriesByDatasource = datasourceFilters\n    ? queries?.filter(q => listOfDatasourceFilters?.includes(q.datasourceName))\n    : queries;\n\n  const sortedQueries = sortQueries(filteredQueriesByDatasource, sortOrder);\n  const queriesWithinSelectedTimeline = sortedQueries?.filter(\n    q =>\n      q.ts < createRetentionPeriodBoundary(sliderRetentionFilter[0], true) &&\n      q.ts > createRetentionPeriodBoundary(sliderRetentionFilter[1], false)\n  );\n\n  /* mappedQueriesToHeadings is an object where query headings (stringified dates/data sources)\n   * are keys and arrays with queries that belong to that headings are values.\n   */\n  let mappedQueriesToHeadings = mapQueriesToHeadings(queriesWithinSelectedTimeline, sortOrder);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerSlider}>\n        <div className={styles.slider}>\n          <div className=\"label-slider\">\n            Filter history <br />\n            between\n          </div>\n          <div className=\"label-slider\">{mapNumbertoTimeInSlider(sliderRetentionFilter[0])}</div>\n          <div className=\"slider\">\n            <Slider\n              tooltipAlwaysVisible={false}\n              min={0}\n              max={retentionPeriod}\n              value={sliderRetentionFilter}\n              orientation=\"vertical\"\n              formatTooltipResult={mapNumbertoTimeInSlider}\n              reverse={true}\n              onAfterChange={setSliderRetentionFilter as () => number[]}\n            />\n          </div>\n          <div className=\"label-slider\">{mapNumbertoTimeInSlider(sliderRetentionFilter[1])}</div>\n        </div>\n      </div>\n\n      <div className={styles.containerContent}>\n        <div className={styles.selectors}>\n          {!activeDatasourceOnly && (\n            <div aria-label=\"Filter datasources\" className={styles.multiselect}>\n              <Select\n                isMulti={true}\n                options={listOfDatasources}\n                value={datasourceFilters}\n                placeholder=\"Filter queries for specific data sources(s)\"\n                onChange={onSelectDatasourceFilters}\n              />\n            </div>\n          )}\n          <div aria-label=\"Sort queries\" className={styles.sort}>\n            <Select\n              value={sortOrderOptions.filter(order => order.value === sortOrder)}\n              options={sortOrderOptions}\n              placeholder=\"Sort queries by\"\n              onChange={e => onChangeSortOrder(e.value as SortOrder)}\n            />\n          </div>\n        </div>\n        {Object.keys(mappedQueriesToHeadings).map(heading => {\n          return (\n            <div key={heading}>\n              <div className={styles.heading}>\n                {heading} <span className={styles.queries}>{mappedQueriesToHeadings[heading].length} queries</span>\n              </div>\n              {mappedQueriesToHeadings[heading].map((q: RichHistoryQuery) => {\n                const idx = listOfDatasources.findIndex(d => d.label === q.datasourceName);\n                return (\n                  <RichHistoryCard\n                    query={q}\n                    key={q.ts}\n                    exploreId={exploreId}\n                    dsImg={listOfDatasources[idx].imgUrl}\n                    isRemoved={listOfDatasources[idx].isRemoved}\n                  />\n                );\n              })}\n            </div>\n          );\n        })}\n        <div className={styles.feedback}>\n          Query history is a beta feature. The history is local to your browser and is not shared with others.\n          <a href=\"https://github.com/grafana/grafana/issues/new/choose\">Feedback?</a>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { css } from 'emotion';\nimport { uniqBy } from 'lodash';\n\n// Types\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\n\n// Utils\nimport { stylesFactory, useTheme } from '@grafana/ui';\nimport { GrafanaTheme, SelectableValue } from '@grafana/data';\n\nimport { SortOrder } from '../../../core/utils/explore';\nimport { sortQueries, createDatasourcesList } from '../../../core/utils/richHistory';\n\n// Components\nimport RichHistoryCard from './RichHistoryCard';\nimport { sortOrderOptions } from './RichHistory';\nimport { Select } from '@grafana/ui';\n\nexport interface Props {\n  queries: RichHistoryQuery[];\n  sortOrder: SortOrder;\n  activeDatasourceOnly: boolean;\n  datasourceFilters: SelectableValue[] | null;\n  exploreId: ExploreId;\n  onChangeSortOrder: (sortOrder: SortOrder) => void;\n  onSelectDatasourceFilters: (value: SelectableValue[] | null) => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  const bgColor = theme.isLight ? theme.colors.gray5 : theme.colors.dark4;\n  return {\n    container: css`\n      display: flex;\n    `,\n    containerContent: css`\n      width: 100%;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n    `,\n    multiselect: css`\n      width: 60%;\n      .gf-form-select-box__multi-value {\n        background-color: ${bgColor};\n        padding: ${theme.spacing.xxs} ${theme.spacing.xs} ${theme.spacing.xxs} ${theme.spacing.sm};\n        border-radius: ${theme.border.radius.sm};\n      }\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    feedback: css`\n      height: 60px;\n      margin-top: ${theme.spacing.lg};\n      display: flex;\n      justify-content: center;\n      font-weight: ${theme.typography.weight.light};\n      font-size: ${theme.typography.size.sm};\n      a {\n        font-weight: ${theme.typography.weight.semibold};\n        margin-left: ${theme.spacing.xxs};\n      }\n    `,\n  };\n});\n\nexport function RichHistoryStarredTab(props: Props) {\n  const {\n    datasourceFilters,\n    onSelectDatasourceFilters,\n    queries,\n    onChangeSortOrder,\n    sortOrder,\n    activeDatasourceOnly,\n    exploreId,\n  } = props;\n\n  const theme = useTheme();\n  const styles = getStyles(theme);\n\n  const datasourcesRetrievedFromQueryHistory = uniqBy(queries, 'datasourceName').map(d => d.datasourceName);\n  const listOfDatasources = createDatasourcesList(datasourcesRetrievedFromQueryHistory);\n\n  const listOfDatasourceFilters = datasourceFilters?.map(d => d.value);\n\n  const starredQueries = queries.filter(q => q.starred === true);\n  const starredQueriesFilteredByDatasource = datasourceFilters\n    ? starredQueries?.filter(q => listOfDatasourceFilters?.includes(q.datasourceName))\n    : starredQueries;\n\n  const sortedStarredQueries = sortQueries(starredQueriesFilteredByDatasource, sortOrder);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerContent}>\n        <div className={styles.selectors}>\n          {!activeDatasourceOnly && (\n            <div aria-label=\"Filter datasources\" className={styles.multiselect}>\n              <Select\n                isMulti={true}\n                options={listOfDatasources}\n                value={datasourceFilters}\n                placeholder=\"Filter queries for specific data sources(s)\"\n                onChange={onSelectDatasourceFilters}\n              />\n            </div>\n          )}\n          <div aria-label=\"Sort queries\" className={styles.sort}>\n            <Select\n              options={sortOrderOptions}\n              value={sortOrderOptions.filter(order => order.value === sortOrder)}\n              placeholder=\"Sort queries by\"\n              onChange={e => onChangeSortOrder(e.value as SortOrder)}\n            />\n          </div>\n        </div>\n        {sortedStarredQueries.map(q => {\n          const idx = listOfDatasources.findIndex(d => d.label === q.datasourceName);\n          return (\n            <RichHistoryCard\n              query={q}\n              key={q.ts}\n              exploreId={exploreId}\n              dsImg={listOfDatasources[idx].imgUrl}\n              isRemoved={listOfDatasources[idx].isRemoved}\n            />\n          );\n        })}\n        <div className={styles.feedback}>\n          Query history is a beta feature. The history is local to your browser and is not shared with others.\n          <a href=\"https://github.com/grafana/grafana/issues/new/choose\">Feedback?</a>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { PureComponent } from 'react';\nimport { css } from 'emotion';\n\n//Services & Utils\nimport { SortOrder } from 'app/core/utils/explore';\nimport { RICH_HISTORY_SETTING_KEYS } from 'app/core/utils/richHistory';\nimport store from 'app/core/store';\nimport { stylesFactory, withTheme } from '@grafana/ui';\n\n//Types\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\nimport { SelectableValue, GrafanaTheme } from '@grafana/data';\nimport { TabsBar, Tab, TabContent, Themeable, CustomScrollbar } from '@grafana/ui';\n\n//Components\nimport { RichHistorySettings } from './RichHistorySettings';\nimport { RichHistoryQueriesTab } from './RichHistoryQueriesTab';\nimport { RichHistoryStarredTab } from './RichHistoryStarredTab';\n\nexport enum Tabs {\n  RichHistory = 'Query history',\n  Starred = 'Starred',\n  Settings = 'Settings',\n}\n\nexport const sortOrderOptions = [\n  { label: 'Time ascending', value: SortOrder.Ascending },\n  { label: 'Time descending', value: SortOrder.Descending },\n  { label: 'Data source A-Z', value: SortOrder.DatasourceAZ },\n  { label: 'Data source Z-A', value: SortOrder.DatasourceZA },\n];\n\nexport interface RichHistoryProps extends Themeable {\n  richHistory: RichHistoryQuery[];\n  activeDatasourceInstance: string;\n  firstTab: Tabs;\n  exploreId: ExploreId;\n  height: number;\n  deleteRichHistory: () => void;\n  onClose: () => void;\n}\n\ninterface RichHistoryState {\n  activeTab: Tabs;\n  sortOrder: SortOrder;\n  retentionPeriod: number;\n  starredTabAsFirstTab: boolean;\n  activeDatasourceOnly: boolean;\n  datasourceFilters: SelectableValue[] | null;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  const borderColor = theme.isLight ? theme.colors.gray5 : theme.colors.dark6;\n  const tabBarBg = theme.isLight ? theme.colors.white : theme.colors.black;\n  const tabContentBg = theme.isLight ? theme.colors.gray7 : theme.colors.dark2;\n  return {\n    container: css`\n      height: 100%;\n      background-color: ${tabContentBg};\n    `,\n    tabContent: css`\n      background-color: ${tabContentBg};\n      padding: ${theme.spacing.md};\n    `,\n    close: css`\n      position: absolute;\n      right: ${theme.spacing.sm};\n      cursor: pointer;\n    `,\n    tabs: css`\n      background-color: ${tabBarBg};\n      padding-top: ${theme.spacing.sm};\n      border-color: ${borderColor};\n      ul {\n        margin-left: ${theme.spacing.md};\n      }\n    `,\n  };\n});\n\nclass UnThemedRichHistory extends PureComponent<RichHistoryProps, RichHistoryState> {\n  constructor(props: RichHistoryProps) {\n    super(props);\n    this.state = {\n      activeTab: this.props.firstTab,\n      sortOrder: SortOrder.Descending,\n      datasourceFilters: store.getObject(RICH_HISTORY_SETTING_KEYS.datasourceFilters, null),\n      retentionPeriod: store.getObject(RICH_HISTORY_SETTING_KEYS.retentionPeriod, 7),\n      starredTabAsFirstTab: store.getBool(RICH_HISTORY_SETTING_KEYS.starredTabAsFirstTab, false),\n      activeDatasourceOnly: store.getBool(RICH_HISTORY_SETTING_KEYS.activeDatasourceOnly, false),\n    };\n  }\n\n  onChangeRetentionPeriod = (retentionPeriod: { label: string; value: number }) => {\n    this.setState({\n      retentionPeriod: retentionPeriod.value,\n    });\n    store.set(RICH_HISTORY_SETTING_KEYS.retentionPeriod, retentionPeriod.value);\n  };\n\n  toggleStarredTabAsFirstTab = () => {\n    const starredTabAsFirstTab = !this.state.starredTabAsFirstTab;\n    this.setState({\n      starredTabAsFirstTab,\n    });\n    store.set(RICH_HISTORY_SETTING_KEYS.starredTabAsFirstTab, starredTabAsFirstTab);\n  };\n\n  toggleactiveDatasourceOnly = () => {\n    const activeDatasourceOnly = !this.state.activeDatasourceOnly;\n    this.setState({\n      activeDatasourceOnly,\n    });\n    store.set(RICH_HISTORY_SETTING_KEYS.activeDatasourceOnly, activeDatasourceOnly);\n  };\n\n  onSelectDatasourceFilters = (value: SelectableValue[] | null) => {\n    store.setObject(RICH_HISTORY_SETTING_KEYS.datasourceFilters, value);\n    this.setState({ datasourceFilters: value });\n  };\n\n  onSelectTab = (item: SelectableValue<Tabs>) => {\n    this.setState({ activeTab: item.value! });\n  };\n\n  onChangeSortOrder = (sortOrder: SortOrder) => this.setState({ sortOrder });\n\n  /* If user selects activeDatasourceOnly === true, set datasource filter to currently active datasource.\n   *  Filtering based on datasource won't be available. Otherwise set to null, as filtering will be\n   * available for user.\n   */\n  updateFilters() {\n    this.state.activeDatasourceOnly && this.props.activeDatasourceInstance\n      ? this.onSelectDatasourceFilters([\n          { label: this.props.activeDatasourceInstance, value: this.props.activeDatasourceInstance },\n        ])\n      : this.onSelectDatasourceFilters(this.state.datasourceFilters);\n  }\n\n  componentDidMount() {\n    this.updateFilters();\n  }\n  componentDidUpdate(prevProps: RichHistoryProps, prevState: RichHistoryState) {\n    if (\n      this.props.activeDatasourceInstance !== prevProps.activeDatasourceInstance ||\n      this.state.activeDatasourceOnly !== prevState.activeDatasourceOnly\n    ) {\n      this.updateFilters();\n    }\n  }\n\n  render() {\n    const { datasourceFilters, sortOrder, activeTab, activeDatasourceOnly, retentionPeriod } = this.state;\n    const { theme, richHistory, height, exploreId, deleteRichHistory, onClose } = this.props;\n    const styles = getStyles(theme);\n\n    const QueriesTab = {\n      label: 'Query history',\n      value: Tabs.RichHistory,\n      content: (\n        <RichHistoryQueriesTab\n          queries={richHistory}\n          sortOrder={sortOrder}\n          datasourceFilters={datasourceFilters}\n          activeDatasourceOnly={activeDatasourceOnly}\n          retentionPeriod={retentionPeriod}\n          onChangeSortOrder={this.onChangeSortOrder}\n          onSelectDatasourceFilters={this.onSelectDatasourceFilters}\n          exploreId={exploreId}\n          height={height}\n        />\n      ),\n      icon: 'fa fa-history',\n    };\n\n    const StarredTab = {\n      label: 'Starred',\n      value: Tabs.Starred,\n      content: (\n        <RichHistoryStarredTab\n          queries={richHistory}\n          sortOrder={sortOrder}\n          datasourceFilters={datasourceFilters}\n          activeDatasourceOnly={activeDatasourceOnly}\n          onChangeSortOrder={this.onChangeSortOrder}\n          onSelectDatasourceFilters={this.onSelectDatasourceFilters}\n          exploreId={exploreId}\n        />\n      ),\n      icon: 'fa fa-star',\n    };\n\n    const SettingsTab = {\n      label: 'Settings',\n      value: Tabs.Settings,\n      content: (\n        <RichHistorySettings\n          retentionPeriod={this.state.retentionPeriod}\n          starredTabAsFirstTab={this.state.starredTabAsFirstTab}\n          activeDatasourceOnly={this.state.activeDatasourceOnly}\n          onChangeRetentionPeriod={this.onChangeRetentionPeriod}\n          toggleStarredTabAsFirstTab={this.toggleStarredTabAsFirstTab}\n          toggleactiveDatasourceOnly={this.toggleactiveDatasourceOnly}\n          deleteRichHistory={deleteRichHistory}\n        />\n      ),\n      icon: 'gicon gicon-preferences',\n    };\n\n    let tabs = [QueriesTab, StarredTab, SettingsTab];\n    return (\n      <div className={styles.container}>\n        <TabsBar className={styles.tabs}>\n          {tabs.map(t => (\n            <Tab\n              key={t.value}\n              label={t.label}\n              active={t.value === activeTab}\n              onChangeTab={() => this.onSelectTab(t)}\n              icon={t.icon}\n            />\n          ))}\n          <div className={styles.close} onClick={onClose}>\n            <i className=\"fa fa-times\" title=\"Close query history\" />\n          </div>\n        </TabsBar>\n        <CustomScrollbar\n          className={css`\n            min-height: 100% !important;\n          `}\n        >\n          <TabContent className={styles.tabContent}>{tabs.find(t => t.value === activeTab)?.content}</TabContent>\n        </CustomScrollbar>\n      </div>\n    );\n  }\n}\n\nexport const RichHistory = withTheme(UnThemedRichHistory);\n","//\n// Main\n//\n\nfunction memoize (fn, options) {\n  var cache = options && options.cache\n    ? options.cache\n    : cacheDefault\n\n  var serializer = options && options.serializer\n    ? options.serializer\n    : serializerDefault\n\n  var strategy = options && options.strategy\n    ? options.strategy\n    : strategyDefault\n\n  return strategy(fn, {\n    cache: cache,\n    serializer: serializer\n  })\n}\n\n//\n// Strategy\n//\n\nfunction isPrimitive (value) {\n  return value == null || typeof value === 'number' || typeof value === 'boolean' // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\n\nfunction monadic (fn, cache, serializer, arg) {\n  var cacheKey = isPrimitive(arg) ? arg : serializer(arg)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.call(this, arg)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction variadic (fn, cache, serializer) {\n  var args = Array.prototype.slice.call(arguments, 3)\n  var cacheKey = serializer(args)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.apply(this, args)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction assemble (fn, context, strategy, cache, serialize) {\n  return strategy.bind(\n    context,\n    fn,\n    cache,\n    serialize\n  )\n}\n\nfunction strategyDefault (fn, options) {\n  var strategy = fn.length === 1 ? monadic : variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyVariadic (fn, options) {\n  var strategy = variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyMonadic (fn, options) {\n  var strategy = monadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\n//\n// Serializer\n//\n\nfunction serializerDefault () {\n  return JSON.stringify(arguments)\n}\n\n//\n// Cache\n//\n\nfunction ObjectWithoutPrototypeCache () {\n  this.cache = Object.create(null)\n}\n\nObjectWithoutPrototypeCache.prototype.has = function (key) {\n  return (key in this.cache)\n}\n\nObjectWithoutPrototypeCache.prototype.get = function (key) {\n  return this.cache[key]\n}\n\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n  this.cache[key] = value\n}\n\nvar cacheDefault = {\n  create: function create () {\n    return new ObjectWithoutPrototypeCache()\n  }\n}\n\n//\n// API\n//\n\nmodule.exports = memoize\nmodule.exports.strategies = {\n  variadic: strategyVariadic,\n  monadic: strategyMonadic\n}\n","// Libraries\nimport React, { PureComponent } from 'react';\nimport debounce from 'lodash/debounce';\nimport has from 'lodash/has';\nimport { hot } from 'react-hot-loader';\n// @ts-ignore\nimport { connect } from 'react-redux';\n// Components\nimport QueryEditor from './QueryEditor';\nimport { QueryRowActions } from './QueryRowActions';\n// Actions\nimport { changeQuery, modifyQueries, runQueries } from './state/actions';\n// Types\nimport { StoreState } from 'app/types';\nimport {\n  DataQuery,\n  DataSourceApi,\n  PanelData,\n  HistoryItem,\n  TimeRange,\n  AbsoluteTimeRange,\n  LoadingState,\n  ExploreMode,\n} from '@grafana/data';\n\nimport { ExploreItemState, ExploreId } from 'app/types/explore';\nimport { Emitter } from 'app/core/utils/emitter';\nimport { highlightLogsExpressionAction, removeQueryRowAction } from './state/actionTypes';\nimport { ErrorContainer } from './ErrorContainer';\n\ninterface PropsFromParent {\n  exploreId: ExploreId;\n  index: number;\n  exploreEvents: Emitter;\n}\n\ninterface QueryRowProps extends PropsFromParent {\n  changeQuery: typeof changeQuery;\n  className?: string;\n  exploreId: ExploreId;\n  datasourceInstance: DataSourceApi;\n  highlightLogsExpressionAction: typeof highlightLogsExpressionAction;\n  history: HistoryItem[];\n  query: DataQuery;\n  modifyQueries: typeof modifyQueries;\n  range: TimeRange;\n  absoluteRange: AbsoluteTimeRange;\n  removeQueryRowAction: typeof removeQueryRowAction;\n  runQueries: typeof runQueries;\n  queryResponse: PanelData;\n  mode: ExploreMode;\n  latency: number;\n}\n\ninterface QueryRowState {\n  textEditModeEnabled: boolean;\n}\n\n// Empty function to override blur execution on query field\nconst noopOnBlur = () => {};\n\nexport class QueryRow extends PureComponent<QueryRowProps, QueryRowState> {\n  state: QueryRowState = {\n    textEditModeEnabled: false,\n  };\n\n  onRunQuery = () => {\n    const { exploreId } = this.props;\n    this.props.runQueries(exploreId);\n  };\n\n  onChange = (query: DataQuery, override?: boolean) => {\n    const { datasourceInstance, exploreId, index } = this.props;\n    this.props.changeQuery(exploreId, query, index, override);\n    if (query && !override && datasourceInstance.getHighlighterExpression && index === 0) {\n      // Live preview of log search matches. Only use on first row for now\n      this.updateLogsHighlights(query);\n    }\n  };\n\n  componentWillUnmount() {\n    console.log('QueryRow will unmount');\n  }\n\n  onClickToggleDisabled = () => {\n    const { exploreId, index, query } = this.props;\n    const newQuery = {\n      ...query,\n      hide: !query.hide,\n    };\n    this.props.changeQuery(exploreId, newQuery, index, true);\n  };\n\n  onClickRemoveButton = () => {\n    const { exploreId, index } = this.props;\n    this.props.removeQueryRowAction({ exploreId, index });\n    this.props.runQueries(exploreId);\n  };\n\n  onClickToggleEditorMode = () => {\n    this.setState({ textEditModeEnabled: !this.state.textEditModeEnabled });\n  };\n\n  updateLogsHighlights = debounce((value: DataQuery) => {\n    const { datasourceInstance } = this.props;\n    if (datasourceInstance.getHighlighterExpression) {\n      const { exploreId } = this.props;\n      const expressions = datasourceInstance.getHighlighterExpression(value);\n      this.props.highlightLogsExpressionAction({ exploreId, expressions });\n    }\n  }, 500);\n\n  render() {\n    const {\n      datasourceInstance,\n      history,\n      query,\n      exploreEvents,\n      range,\n      absoluteRange,\n      queryResponse,\n      mode,\n      latency,\n    } = this.props;\n\n    const canToggleEditorModes =\n      mode === ExploreMode.Metrics && has(datasourceInstance, 'components.QueryCtrl.prototype.toggleEditorMode');\n    const isNotStarted = queryResponse.state === LoadingState.NotStarted;\n    const queryErrors = queryResponse.error && queryResponse.error.refId === query.refId ? [queryResponse.error] : [];\n    let QueryField;\n\n    if (mode === ExploreMode.Metrics && datasourceInstance.components?.ExploreMetricsQueryField) {\n      QueryField = datasourceInstance.components.ExploreMetricsQueryField;\n    } else if (mode === ExploreMode.Logs && datasourceInstance.components?.ExploreLogsQueryField) {\n      QueryField = datasourceInstance.components.ExploreLogsQueryField;\n    } else {\n      QueryField = datasourceInstance.components?.ExploreQueryField;\n    }\n\n    return (\n      <>\n        <div className=\"query-row\">\n          <div className=\"query-row-field flex-shrink-1\">\n            {QueryField ? (\n              <QueryField\n                datasource={datasourceInstance}\n                query={query}\n                history={history}\n                onRunQuery={this.onRunQuery}\n                onBlur={noopOnBlur}\n                onChange={this.onChange}\n                data={queryResponse}\n                absoluteRange={absoluteRange}\n                exploreMode={mode}\n              />\n            ) : (\n              <QueryEditor\n                error={queryErrors}\n                datasource={datasourceInstance}\n                onQueryChange={this.onChange}\n                onExecuteQuery={this.onRunQuery}\n                initialQuery={query}\n                exploreEvents={exploreEvents}\n                range={range}\n                textEditModeEnabled={this.state.textEditModeEnabled}\n              />\n            )}\n          </div>\n          <QueryRowActions\n            canToggleEditorModes={canToggleEditorModes}\n            isDisabled={query.hide}\n            isNotStarted={isNotStarted}\n            latency={latency}\n            onClickToggleEditorMode={this.onClickToggleEditorMode}\n            onClickToggleDisabled={this.onClickToggleDisabled}\n            onClickRemoveButton={this.onClickRemoveButton}\n          />\n        </div>\n        {queryErrors.length > 0 && <ErrorContainer queryError={queryErrors[0]} />}\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId, index }: QueryRowProps) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore[exploreId];\n  const { datasourceInstance, history, queries, range, absoluteRange, mode, queryResponse, latency } = item;\n  const query = queries[index];\n\n  return {\n    datasourceInstance,\n    history,\n    query,\n    range,\n    absoluteRange,\n    queryResponse,\n    mode,\n    latency,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeQuery,\n  highlightLogsExpressionAction,\n  modifyQueries,\n  removeQueryRowAction,\n  runQueries,\n};\n\nexport default hot(module)(\n  connect(mapStateToProps, mapDispatchToProps)(QueryRow) as React.ComponentType<PropsFromParent>\n);\n","import React, { PureComponent } from 'react';\nimport { toDuration } from '@grafana/data';\n\nconst INTERVAL = 150;\n\nexport interface Props {\n  time?: number;\n  // Use this to reset the timer. Any value is allowed just need to be !== from the previous.\n  // Keep in mind things like [] !== [] or {} !== {}.\n  resetKey?: any;\n  className?: string;\n  humanize?: boolean;\n}\n\nexport interface State {\n  elapsed: number;\n}\n\n/**\n * Shows an incremental time ticker of elapsed time from some event.\n */\nexport default class ElapsedTime extends PureComponent<Props, State> {\n  offset: number;\n  timer: number;\n\n  state = {\n    elapsed: 0,\n  };\n\n  start() {\n    this.offset = Date.now();\n    this.timer = window.setInterval(this.tick, INTERVAL);\n  }\n\n  tick = () => {\n    const jetzt = Date.now();\n    const elapsed = jetzt - this.offset;\n    this.setState({ elapsed });\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.time) {\n      clearInterval(this.timer);\n    } else if (this.props.time) {\n      this.start();\n    }\n\n    if (nextProps.resetKey !== this.props.resetKey) {\n      clearInterval(this.timer);\n      this.start();\n    }\n  }\n\n  componentDidMount() {\n    this.start();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { elapsed } = this.state;\n    const { className, time, humanize } = this.props;\n    const value = (time || elapsed) / 1000;\n    let displayValue = `${value.toFixed(1)}s`;\n    if (humanize) {\n      const duration = toDuration(elapsed);\n      const hours = duration.hours();\n      const minutes = duration.minutes();\n      const seconds = duration.seconds();\n      displayValue = hours ? `${hours}h ${minutes}m ${seconds}s` : minutes ? ` ${minutes}m ${seconds}s` : `${seconds}s`;\n    }\n    return <span className={`elapsed-time ${className}`}>{displayValue}</span>;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { css, cx } from 'emotion';\nimport tinycolor from 'tinycolor2';\n\nimport { Themeable, withTheme, getLogRowStyles } from '@grafana/ui';\nimport { GrafanaTheme, LogRowModel, TimeZone } from '@grafana/data';\n\nimport ElapsedTime from './ElapsedTime';\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  logsRowsLive: css`\n    label: logs-rows-live;\n    font-family: ${theme.typography.fontFamily.monospace};\n    font-size: ${theme.typography.size.sm};\n    display: flex;\n    flex-flow: column nowrap;\n    height: 65vh;\n    overflow-y: auto;\n    :first-child {\n      margin-top: auto !important;\n    }\n  `,\n  logsRowFade: css`\n    label: logs-row-fresh;\n    color: ${theme.colors.text};\n    background-color: ${tinycolor(theme.colors.blueLight)\n      .setAlpha(0.25)\n      .toString()};\n    animation: fade 1s ease-out 1s 1 normal forwards;\n    @keyframes fade {\n      from {\n        background-color: ${tinycolor(theme.colors.blueLight)\n          .setAlpha(0.25)\n          .toString()};\n      }\n      to {\n        background-color: transparent;\n      }\n    }\n  `,\n  logsRowsIndicator: css`\n    font-size: ${theme.typography.size.md};\n    padding-top: ${theme.spacing.sm};\n    display: flex;\n    align-items: center;\n  `,\n  button: css`\n    margin-right: ${theme.spacing.sm};\n  `,\n  fullWidth: css`\n    width: 100%;\n  `,\n});\n\nexport interface Props extends Themeable {\n  logRows?: LogRowModel[];\n  timeZone: TimeZone;\n  stopLive: () => void;\n  onPause: () => void;\n  onResume: () => void;\n  isPaused: boolean;\n}\n\ninterface State {\n  logRowsToRender?: LogRowModel[];\n}\n\nclass LiveLogs extends PureComponent<Props, State> {\n  private liveEndDiv: HTMLDivElement | null = null;\n  private scrollContainerRef = React.createRef<HTMLTableSectionElement>();\n  private lastScrollPos: number | null = null;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logRowsToRender: props.logRows,\n    };\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!prevProps.isPaused && this.props.isPaused) {\n      // So we paused the view and we changed the content size, but we want to keep the relative offset from the bottom.\n      if (this.lastScrollPos && this.scrollContainerRef.current) {\n        // There is last scroll pos from when user scrolled up a bit so go to that position.\n        const { clientHeight, scrollHeight } = this.scrollContainerRef.current;\n        const scrollTop = scrollHeight - (this.lastScrollPos + clientHeight);\n        this.scrollContainerRef.current.scrollTo(0, scrollTop);\n        this.lastScrollPos = null;\n      } else {\n        // We do not have any position to jump to su the assumption is user just clicked pause. We can just scroll\n        // to the bottom.\n        if (this.liveEndDiv) {\n          this.liveEndDiv.scrollIntoView(false);\n        }\n      }\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps: Props, state: State) {\n    if (!nextProps.isPaused) {\n      return {\n        // We update what we show only if not paused. We keep any background subscriptions running and keep updating\n        // our state, but we do not show the updates, this allows us start again showing correct result after resuming\n        // without creating a gap in the log results.\n        logRowsToRender: nextProps.logRows,\n      };\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Handle pausing when user scrolls up so that we stop resetting his position to the bottom when new row arrives.\n   * We do not need to throttle it here much, adding new rows should be throttled/buffered itself in the query epics\n   * and after you pause we remove the handler and add it after you manually resume, so this should not be fired often.\n   */\n  onScroll = (event: React.SyntheticEvent) => {\n    const { isPaused, onPause } = this.props;\n    const { scrollTop, clientHeight, scrollHeight } = event.currentTarget;\n    const distanceFromBottom = scrollHeight - (scrollTop + clientHeight);\n    if (distanceFromBottom >= 5 && !isPaused) {\n      onPause();\n      this.lastScrollPos = distanceFromBottom;\n    }\n  };\n\n  rowsToRender = () => {\n    const { isPaused } = this.props;\n    let { logRowsToRender: rowsToRender = [] } = this.state;\n    if (!isPaused) {\n      // A perf optimisation here. Show just 100 rows when streaming and full length when the streaming is paused.\n      rowsToRender = rowsToRender.slice(-100);\n    }\n    return rowsToRender;\n  };\n\n  render() {\n    const { theme, timeZone, onPause, onResume, isPaused } = this.props;\n    const styles = getStyles(theme);\n    const showUtc = timeZone === 'utc';\n    const { logsRow, logsRowLocalTime, logsRowMessage } = getLogRowStyles(theme);\n\n    return (\n      <div>\n        <table className={styles.fullWidth}>\n          <tbody\n            onScroll={isPaused ? undefined : this.onScroll}\n            className={cx(['logs-rows', styles.logsRowsLive])}\n            ref={this.scrollContainerRef}\n          >\n            {this.rowsToRender().map((row: LogRowModel) => {\n              return (\n                <tr className={cx(logsRow, styles.logsRowFade)} key={row.uid}>\n                  {showUtc && (\n                    <td className={cx(logsRowLocalTime)} title={`Local: ${row.timeLocal} (${row.timeFromNow})`}>\n                      {row.timeUtc}\n                    </td>\n                  )}\n                  {!showUtc && (\n                    <td className={cx(logsRowLocalTime)} title={`${row.timeUtc} (${row.timeFromNow})`}>\n                      {row.timeLocal}\n                    </td>\n                  )}\n                  <td className={cx(logsRowMessage)}>{row.entry}</td>\n                </tr>\n              );\n            })}\n            <tr\n              ref={element => {\n                this.liveEndDiv = element;\n                // This is triggered on every update so on every new row. It keeps the view scrolled at the bottom by\n                // default.\n                if (this.liveEndDiv && !isPaused) {\n                  this.liveEndDiv.scrollIntoView(false);\n                }\n              }}\n            />\n          </tbody>\n        </table>\n        <div className={cx([styles.logsRowsIndicator])}>\n          <button onClick={isPaused ? onResume : onPause} className={cx('btn btn-secondary', styles.button)}>\n            <i className={cx('fa', isPaused ? 'fa-play' : 'fa-pause')} />\n            &nbsp;\n            {isPaused ? 'Resume' : 'Pause'}\n          </button>\n          <button onClick={this.props.stopLive} className={cx('btn btn-inverse', styles.button)}>\n            <i className={'fa fa-stop'} />\n            &nbsp; Exit live mode\n          </button>\n          {isPaused || (\n            <span>\n              Last line received: <ElapsedTime resetKey={this.props.logRows} humanize={true} /> ago\n            </span>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const LiveLogsWithTheme = withTheme(LiveLogs);\n","import React, { forwardRef } from 'react';\n\nexport enum IconSide {\n  left = 'left',\n  right = 'right',\n}\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  splitted: boolean;\n  title: string;\n  onClick: () => void;\n  buttonClassName?: string;\n  iconClassName?: string;\n  iconSide?: IconSide;\n  disabled?: boolean;\n}\n\nfunction formatBtnTitle(title: string, iconSide?: string): string {\n  return iconSide === IconSide.left ? '\\xA0' + title : iconSide === IconSide.right ? title + '\\xA0' : title;\n}\n\nexport const ResponsiveButton = forwardRef<HTMLDivElement, Props>((props, ref) => {\n  const defaultProps = {\n    iconSide: IconSide.left,\n  };\n\n  props = { ...defaultProps, ...props };\n  const { title, onClick, buttonClassName, iconClassName, splitted, iconSide, disabled, ...divElementProps } = props;\n\n  return (\n    <div ref={ref} {...divElementProps}>\n      <button\n        className={`btn navbar-button ${buttonClassName ? buttonClassName : ''}`}\n        onClick={onClick}\n        disabled={disabled || false}\n      >\n        {iconClassName && iconSide === IconSide.left ? <i className={`${iconClassName}`} /> : null}\n        <span className=\"btn-title\">{!splitted ? formatBtnTitle(title, iconSide) : ''}</span>\n        {iconClassName && iconSide === IconSide.right ? <i className={`${iconClassName}`} /> : null}\n      </button>\n    </div>\n  );\n});\n","// Libraries\nimport React, { useState, useEffect } from 'react';\nimport { Resizable } from 're-resizable';\nimport { connect } from 'react-redux';\nimport { hot } from 'react-hot-loader';\nimport { css, cx } from 'emotion';\n\n// Services & Utils\nimport store from 'app/core/store';\nimport { stylesFactory, useTheme } from '@grafana/ui';\nimport { RICH_HISTORY_SETTING_KEYS } from 'app/core/utils/richHistory';\n\n// Types\nimport { StoreState } from 'app/types';\nimport { GrafanaTheme } from '@grafana/data';\nimport { ExploreId, RichHistoryQuery } from 'app/types/explore';\n\n// Components, enums\nimport { RichHistory, Tabs } from './RichHistory';\n\n//Actions\nimport { deleteRichHistory } from '../state/actions';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  const containerBackground = theme.isLight ? theme.colors.gray7 : theme.colors.dark2;\n  const containerBorderColor = theme.isLight ? theme.colors.gray5 : theme.colors.dark6;\n  const handleBackground = theme.isLight ? theme.colors.gray5 : theme.colors.gray15;\n  const handleDots = theme.isLight ? theme.colors.gray70 : theme.colors.gray33;\n  const handleBackgroundHover = theme.isLight ? theme.colors.gray70 : theme.colors.gray33;\n  const handleDotsHover = theme.isLight ? theme.colors.gray5 : theme.colors.dark7;\n\n  return {\n    container: css`\n      position: fixed !important;\n      bottom: 0;\n      background: ${containerBackground};\n      border-top: 1px solid ${containerBorderColor};\n      margin: 0px;\n      margin-right: -${theme.spacing.md};\n      margin-left: -${theme.spacing.md};\n    `,\n    drawerActive: css`\n      opacity: 1;\n      transition: transform 0.5s ease-in;\n    `,\n    drawerNotActive: css`\n      opacity: 0;\n      transform: translateY(400px);\n    `,\n    rzHandle: css`\n      background: ${handleBackground};\n      transition: 0.3s background ease-in-out;\n      position: relative;\n      width: 200px !important;\n      left: calc(50% - 100px) !important;\n      cursor: grab;\n      border-radius: 4px;\n\n      &:hover {\n        background-color: ${handleBackgroundHover};\n\n        &:after {\n          border-color: ${handleDotsHover};\n        }\n      }\n\n      &:after {\n        content: '';\n        display: block;\n        height: 2px;\n        position: relative;\n        top: 4px;\n        border-top: 4px dotted ${handleDots};\n        margin: 0 4px;\n      }\n    `,\n  };\n});\n\nexport interface Props {\n  width: number;\n  exploreId: ExploreId;\n  activeDatasourceInstance: string;\n  richHistory: RichHistoryQuery[];\n  firstTab: Tabs;\n  deleteRichHistory: typeof deleteRichHistory;\n  onClose: () => void;\n}\n\nexport function RichHistoryContainer(props: Props) {\n  const [visible, setVisible] = useState(false);\n  const [height, setHeight] = useState(400);\n\n  /* To create sliding animation for rich history drawer */\n  useEffect(() => {\n    const timer = setTimeout(() => setVisible(true), 10);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const { richHistory, width, firstTab, activeDatasourceInstance, exploreId, deleteRichHistory, onClose } = props;\n  const theme = useTheme();\n  const styles = getStyles(theme);\n  const drawerWidth = `${width + 31.5}px`;\n\n  return (\n    <Resizable\n      className={cx(styles.container, visible ? styles.drawerActive : styles.drawerNotActive)}\n      defaultSize={{ width: drawerWidth, height: '400px' }}\n      handleClasses={{ top: styles.rzHandle }}\n      enable={{\n        top: true,\n        right: false,\n        bottom: false,\n        left: false,\n        topRight: false,\n        bottomRight: false,\n        bottomLeft: false,\n        topLeft: false,\n      }}\n      maxHeight=\"100vh\"\n      maxWidth={drawerWidth}\n      minWidth={drawerWidth}\n      onResize={(e, dir, ref) => {\n        setHeight(Number(ref.style.height.slice(0, -2)));\n      }}\n    >\n      <RichHistory\n        richHistory={richHistory}\n        firstTab={firstTab}\n        activeDatasourceInstance={activeDatasourceInstance}\n        exploreId={exploreId}\n        deleteRichHistory={deleteRichHistory}\n        onClose={onClose}\n        height={height}\n      />\n    </Resizable>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const { datasourceInstance } = item;\n  const firstTab = store.getBool(RICH_HISTORY_SETTING_KEYS.starredTabAsFirstTab, false)\n    ? Tabs.Starred\n    : Tabs.RichHistory;\n  const { richHistory } = explore;\n  return {\n    richHistory,\n    firstTab,\n    activeDatasourceInstance: datasourceInstance?.name,\n  };\n}\n\nconst mapDispatchToProps = {\n  deleteRichHistory,\n};\n\nexport default hot(module)(connect(mapStateToProps, mapDispatchToProps)(RichHistoryContainer));\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar styles = {\n    top: {\n        width: '100%',\n        height: '10px',\n        top: '-5px',\n        left: '0px',\n        cursor: 'row-resize',\n    },\n    right: {\n        width: '10px',\n        height: '100%',\n        top: '0px',\n        right: '-5px',\n        cursor: 'col-resize',\n    },\n    bottom: {\n        width: '100%',\n        height: '10px',\n        bottom: '-5px',\n        left: '0px',\n        cursor: 'row-resize',\n    },\n    left: {\n        width: '10px',\n        height: '100%',\n        top: '0px',\n        left: '-5px',\n        cursor: 'col-resize',\n    },\n    topRight: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        right: '-10px',\n        top: '-10px',\n        cursor: 'ne-resize',\n    },\n    bottomRight: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        right: '-10px',\n        bottom: '-10px',\n        cursor: 'se-resize',\n    },\n    bottomLeft: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        left: '-10px',\n        bottom: '-10px',\n        cursor: 'sw-resize',\n    },\n    topLeft: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        left: '-10px',\n        top: '-10px',\n        cursor: 'nw-resize',\n    },\n};\nvar Resizer = /** @class */ (function (_super) {\n    __extends(Resizer, _super);\n    function Resizer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.onMouseDown = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        _this.onTouchStart = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        return _this;\n    }\n    Resizer.prototype.render = function () {\n        return (React.createElement(\"div\", { className: this.props.className || '', style: __assign(__assign({ position: 'absolute', userSelect: 'none' }, styles[this.props.direction]), (this.props.replaceStyles || {})), onMouseDown: this.onMouseDown, onTouchStart: this.onTouchStart }, this.props.children));\n    };\n    return Resizer;\n}(React.PureComponent));\nexports.Resizer = Resizer;\n","var baseHas = require('./_baseHas'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nmodule.exports = has;\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { changeRefreshInterval, runQueries } from './state/actions';\nimport { setPausedStateAction } from './state/actionTypes';\nimport { RefreshPicker } from '@grafana/ui';\nimport { ExploreId } from '../../types';\n\n/**\n * Hook that gives you all the functions needed to control the live tailing.\n */\nexport function useLiveTailControls(exploreId: ExploreId) {\n  const dispatch = useDispatch();\n\n  const pause = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: true }));\n  }, [exploreId, dispatch]);\n\n  const resume = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: false }));\n  }, [exploreId, dispatch]);\n\n  const stop = useCallback(() => {\n    // We need to pause here first because there is transition where we are not live but live logs are still shown\n    // to cross fade with the normal view. This will prevent reordering of the logs in the live view during the\n    // transition.\n    pause();\n\n    // TODO referencing this from perspective of refresh picker when there is designated button for it now is not\n    //  great. Needs a bit of refactoring.\n    dispatch(changeRefreshInterval(exploreId, RefreshPicker.offOption.value));\n    dispatch(runQueries(exploreId));\n  }, [exploreId, dispatch, pause]);\n\n  const start = useCallback(() => {\n    dispatch(changeRefreshInterval(exploreId, RefreshPicker.liveOption.value));\n  }, [exploreId, dispatch]);\n\n  return {\n    pause,\n    resume,\n    stop,\n    start,\n  };\n}\n\ntype Props = {\n  exploreId: ExploreId;\n  children: (controls: ReturnType<typeof useLiveTailControls>) => React.ReactElement;\n};\n\n/**\n * If you can't use the hook you can use this as a render prop pattern.\n */\nexport function LiveTailControls(props: Props) {\n  const controls = useLiveTailControls(props.exploreId);\n  return props.children(controls);\n}\n","import React, { useContext } from 'react';\nimport { css } from 'emotion';\nimport { ThemeContext, LinkButton, CallToActionCard } from '@grafana/ui';\n\nexport const NoDataSourceCallToAction = () => {\n  const theme = useContext(ThemeContext);\n\n  const message =\n    'Explore requires at least one data source. Once you have added a data source, you can query it here.';\n  const footer = (\n    <>\n      <i className=\"fa fa-rocket\" />\n      <> ProTip: You can also define data sources through configuration files. </>\n      <a\n        href=\"http://docs.grafana.org/administration/provisioning/#datasources?utm_source=explore\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        className=\"text-link\"\n      >\n        Learn more\n      </a>\n    </>\n  );\n\n  const ctaElement = (\n    <LinkButton size=\"lg\" href=\"/datasources/new\" icon=\"gicon gicon-datasources\">\n      Add data source\n    </LinkButton>\n  );\n\n  const cardClassName = css`\n    max-width: ${theme.breakpoints.lg};\n    margin-top: ${theme.spacing.md};\n    align-self: center;\n  `;\n\n  return (\n    <CallToActionCard\n      callToActionElement={ctaElement}\n      className={cardClassName}\n      footer={footer}\n      message={message}\n      theme={theme}\n    />\n  );\n};\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar resizer_1 = require(\"./resizer\");\nvar fast_memoize_1 = __importDefault(require(\"fast-memoize\"));\nvar DEFAULT_SIZE = {\n    width: 'auto',\n    height: 'auto',\n};\nvar clamp = fast_memoize_1.default(function (n, min, max) { return Math.max(Math.min(n, max), min); });\nvar snap = fast_memoize_1.default(function (n, size) { return Math.round(n / size) * size; });\nvar hasDirection = fast_memoize_1.default(function (dir, target) {\n    return new RegExp(dir, 'i').test(target);\n});\nvar findClosestSnap = fast_memoize_1.default(function (n, snapArray, snapGap) {\n    if (snapGap === void 0) { snapGap = 0; }\n    var closestGapIndex = snapArray.reduce(function (prev, curr, index) { return (Math.abs(curr - n) < Math.abs(snapArray[prev] - n) ? index : prev); }, 0);\n    var gap = Math.abs(snapArray[closestGapIndex] - n);\n    return snapGap === 0 || gap < snapGap ? snapArray[closestGapIndex] : n;\n});\nvar endsWith = fast_memoize_1.default(function (str, searchStr) {\n    return str.substr(str.length - searchStr.length, searchStr.length) === searchStr;\n});\nvar getStringSize = fast_memoize_1.default(function (n) {\n    n = n.toString();\n    if (n === 'auto') {\n        return n;\n    }\n    if (endsWith(n, 'px')) {\n        return n;\n    }\n    if (endsWith(n, '%')) {\n        return n;\n    }\n    if (endsWith(n, 'vh')) {\n        return n;\n    }\n    if (endsWith(n, 'vw')) {\n        return n;\n    }\n    if (endsWith(n, 'vmax')) {\n        return n;\n    }\n    if (endsWith(n, 'vmin')) {\n        return n;\n    }\n    return n + \"px\";\n});\nvar getPixelSize = function (size, parentSize) {\n    if (size && typeof size === 'string') {\n        if (endsWith(size, '%')) {\n            var ratio = Number(size.replace('%', '')) / 100;\n            return parentSize * ratio;\n        }\n        else if (endsWith(size, 'vw')) {\n            var ratio = Number(size.replace('vw', '')) / 100;\n            return window.innerWidth * ratio;\n        }\n        else if (endsWith(size, 'vh')) {\n            var ratio = Number(size.replace('vh', '')) / 100;\n            return window.innerHeight * ratio;\n        }\n    }\n    return size;\n};\nvar calculateNewMax = fast_memoize_1.default(function (parentSize, maxWidth, maxHeight, minWidth, minHeight) {\n    maxWidth = getPixelSize(maxWidth, parentSize.width);\n    maxHeight = getPixelSize(maxHeight, parentSize.height);\n    minWidth = getPixelSize(minWidth, parentSize.width);\n    minHeight = getPixelSize(minHeight, parentSize.height);\n    return {\n        maxWidth: typeof maxWidth === 'undefined' ? undefined : Number(maxWidth),\n        maxHeight: typeof maxHeight === 'undefined' ? undefined : Number(maxHeight),\n        minWidth: typeof minWidth === 'undefined' ? undefined : Number(minWidth),\n        minHeight: typeof minHeight === 'undefined' ? undefined : Number(minHeight),\n    };\n});\nvar definedProps = [\n    'style',\n    'className',\n    'grid',\n    'snap',\n    'bounds',\n    'size',\n    'defaultSize',\n    'minWidth',\n    'minHeight',\n    'maxWidth',\n    'maxHeight',\n    'lockAspectRatio',\n    'lockAspectRatioExtraWidth',\n    'lockAspectRatioExtraHeight',\n    'enable',\n    'handleStyles',\n    'handleClasses',\n    'handleWrapperStyle',\n    'handleWrapperClass',\n    'children',\n    'onResizeStart',\n    'onResize',\n    'onResizeStop',\n    'handleComponent',\n    'scale',\n    'resizeRatio',\n    'snapGap',\n];\n// HACK: This class is used to calculate % size.\nvar baseClassName = '__resizable_base__';\nvar Resizable = /** @class */ (function (_super) {\n    __extends(Resizable, _super);\n    function Resizable(props) {\n        var _this = _super.call(this, props) || this;\n        _this.ratio = 1;\n        _this.resizable = null;\n        // For parent boundary\n        _this.parentLeft = 0;\n        _this.parentTop = 0;\n        // For boundary\n        _this.resizableLeft = 0;\n        _this.resizableTop = 0;\n        // For target boundary\n        _this.targetLeft = 0;\n        _this.targetTop = 0;\n        _this.ref = function (c) {\n            if (c) {\n                _this.resizable = c;\n            }\n        };\n        _this.state = {\n            isResizing: false,\n            width: typeof (_this.propsSize && _this.propsSize.width) === 'undefined'\n                ? 'auto'\n                : _this.propsSize && _this.propsSize.width,\n            height: typeof (_this.propsSize && _this.propsSize.height) === 'undefined'\n                ? 'auto'\n                : _this.propsSize && _this.propsSize.height,\n            direction: 'right',\n            original: {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            },\n            backgroundStyle: {\n                height: '100%',\n                width: '100%',\n                backgroundColor: 'rgba(0,0,0,0)',\n                cursor: 'auto',\n                opacity: 0,\n                position: 'fixed',\n                zIndex: 9999,\n                top: '0',\n                left: '0',\n                bottom: '0',\n                right: '0',\n            },\n        };\n        _this.onResizeStart = _this.onResizeStart.bind(_this);\n        _this.onMouseMove = _this.onMouseMove.bind(_this);\n        _this.onMouseUp = _this.onMouseUp.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(Resizable.prototype, \"parentNode\", {\n        get: function () {\n            if (!this.resizable) {\n                return null;\n            }\n            return this.resizable.parentNode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"propsSize\", {\n        get: function () {\n            return this.props.size || this.props.defaultSize || DEFAULT_SIZE;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"base\", {\n        get: function () {\n            var parent = this.parentNode;\n            if (!parent) {\n                return undefined;\n            }\n            var children = [].slice.call(parent.children);\n            for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                var n = children_1[_i];\n                if (n instanceof HTMLElement) {\n                    if (n.classList.contains(baseClassName)) {\n                        return n;\n                    }\n                }\n            }\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"size\", {\n        get: function () {\n            var width = 0;\n            var height = 0;\n            if (typeof window !== 'undefined' && this.resizable) {\n                var orgWidth = this.resizable.offsetWidth;\n                var orgHeight = this.resizable.offsetHeight;\n                // HACK: Set position `relative` to get parent size.\n                //       This is because when re-resizable set `absolute`, I can not get base width correctly.\n                var orgPosition = this.resizable.style.position;\n                if (orgPosition !== 'relative') {\n                    this.resizable.style.position = 'relative';\n                }\n                // INFO: Use original width or height if set auto.\n                width = this.resizable.style.width !== 'auto' ? this.resizable.offsetWidth : orgWidth;\n                height = this.resizable.style.height !== 'auto' ? this.resizable.offsetHeight : orgHeight;\n                // Restore original position\n                this.resizable.style.position = orgPosition;\n            }\n            return { width: width, height: height };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"sizeStyle\", {\n        get: function () {\n            var _this = this;\n            var size = this.props.size;\n            var getSize = function (key) {\n                if (typeof _this.state[key] === 'undefined' || _this.state[key] === 'auto') {\n                    return 'auto';\n                }\n                if (_this.propsSize && _this.propsSize[key] && endsWith(_this.propsSize[key].toString(), '%')) {\n                    if (endsWith(_this.state[key].toString(), '%')) {\n                        return _this.state[key].toString();\n                    }\n                    var parentSize = _this.getParentSize();\n                    var value = Number(_this.state[key].toString().replace('px', ''));\n                    var percent = (value / parentSize[key]) * 100;\n                    return percent + \"%\";\n                }\n                return getStringSize(_this.state[key]);\n            };\n            var width = size && typeof size.width !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.width)\n                : getSize('width');\n            var height = size && typeof size.height !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.height)\n                : getSize('height');\n            return { width: width, height: height };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Resizable.prototype.getParentSize = function () {\n        if (!this.base || !this.parentNode) {\n            return { width: window.innerWidth, height: window.innerHeight };\n        }\n        // INFO: To calculate parent width with flex layout\n        var wrapChanged = false;\n        var wrap = this.parentNode.style.flexWrap;\n        var minWidth = this.base.style.minWidth;\n        if (wrap !== 'wrap') {\n            wrapChanged = true;\n            this.parentNode.style.flexWrap = 'wrap';\n            // HACK: Use relative to get parent padding size\n        }\n        this.base.style.position = 'relative';\n        this.base.style.minWidth = '100%';\n        var size = {\n            width: this.base.offsetWidth,\n            height: this.base.offsetHeight,\n        };\n        this.base.style.position = 'absolute';\n        if (wrapChanged) {\n            this.parentNode.style.flexWrap = wrap;\n        }\n        this.base.style.minWidth = minWidth;\n        return size;\n    };\n    Resizable.prototype.bindEvents = function () {\n        if (typeof window !== 'undefined') {\n            window.addEventListener('mouseup', this.onMouseUp);\n            window.addEventListener('mousemove', this.onMouseMove);\n            window.addEventListener('mouseleave', this.onMouseUp);\n            window.addEventListener('touchmove', this.onMouseMove);\n            window.addEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.unbindEvents = function () {\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('mouseup', this.onMouseUp);\n            window.removeEventListener('mousemove', this.onMouseMove);\n            window.removeEventListener('mouseleave', this.onMouseUp);\n            window.removeEventListener('touchmove', this.onMouseMove);\n            window.removeEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.componentDidMount = function () {\n        if (!this.resizable) {\n            return;\n        }\n        var computedStyle = window.getComputedStyle(this.resizable);\n        this.setState({\n            width: this.state.width || this.size.width,\n            height: this.state.height || this.size.height,\n            flexBasis: computedStyle.flexBasis !== 'auto' ? computedStyle.flexBasis : undefined,\n        });\n        var parent = this.parentNode;\n        if (!(parent instanceof HTMLElement)) {\n            return;\n        }\n        if (this.base) {\n            return;\n        }\n        var element = document.createElement('div');\n        element.style.width = '100%';\n        element.style.height = '100%';\n        element.style.position = 'absolute';\n        element.style.transform = 'scale(0, 0)';\n        element.style.left = '0';\n        element.style.flex = '0';\n        if (element.classList) {\n            element.classList.add(baseClassName);\n        }\n        else {\n            element.className += baseClassName;\n        }\n        parent.appendChild(element);\n    };\n    Resizable.prototype.componentWillUnmount = function () {\n        if (typeof window !== 'undefined') {\n            this.unbindEvents();\n            var parent_1 = this.parentNode;\n            if (!this.base || !parent_1) {\n                return;\n            }\n            if (!(parent_1 instanceof HTMLElement) || !(this.base instanceof Node)) {\n                return;\n            }\n            parent_1.removeChild(this.base);\n        }\n    };\n    Resizable.prototype.createSizeForCssProperty = function (newSize, kind) {\n        var propsSize = this.propsSize && this.propsSize[kind];\n        return this.state[kind] === 'auto' &&\n            this.state.original[kind] === newSize &&\n            (typeof propsSize === 'undefined' || propsSize === 'auto')\n            ? 'auto'\n            : newSize;\n    };\n    Resizable.prototype.calculateNewMaxFromBoundary = function (maxWidth, maxHeight) {\n        if (this.props.bounds === 'parent') {\n            var parent_2 = this.parentNode;\n            if (parent_2 instanceof HTMLElement) {\n                var boundWidth = parent_2.offsetWidth + (this.parentLeft - this.resizableLeft);\n                var boundHeight = parent_2.offsetHeight + (this.parentTop - this.resizableTop);\n                maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n                maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n            }\n        }\n        else if (this.props.bounds === 'window') {\n            if (typeof window !== 'undefined') {\n                var boundWidth = window.innerWidth - this.resizableLeft;\n                var boundHeight = window.innerHeight - this.resizableTop;\n                maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n                maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n            }\n        }\n        else if (this.props.bounds instanceof HTMLElement) {\n            var boundWidth = this.props.bounds.offsetWidth + (this.targetLeft - this.resizableLeft);\n            var boundHeight = this.props.bounds.offsetHeight + (this.targetTop - this.resizableTop);\n            maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n            maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n        }\n        return { maxWidth: maxWidth, maxHeight: maxHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromDirection = function (clientX, clientY) {\n        var scale = this.props.scale || 1;\n        var resizeRatio = this.props.resizeRatio || 1;\n        var _a = this.state, direction = _a.direction, original = _a.original;\n        var _b = this.props, lockAspectRatio = _b.lockAspectRatio, lockAspectRatioExtraHeight = _b.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _b.lockAspectRatioExtraWidth;\n        var newWidth = original.width;\n        var newHeight = original.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (hasDirection('right', direction)) {\n            newWidth = original.width + ((clientX - original.x) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('left', direction)) {\n            newWidth = original.width - ((clientX - original.x) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('bottom', direction)) {\n            newHeight = original.height + ((clientY - original.y) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        if (hasDirection('top', direction)) {\n            newHeight = original.height - ((clientY - original.y) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromAspectRatio = function (newWidth, newHeight, max, min) {\n        var _a = this.props, lockAspectRatio = _a.lockAspectRatio, lockAspectRatioExtraHeight = _a.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _a.lockAspectRatioExtraWidth;\n        var computedMinWidth = typeof min.width === 'undefined' ? 10 : min.width;\n        var computedMaxWidth = typeof max.width === 'undefined' || max.width < 0 ? newWidth : max.width;\n        var computedMinHeight = typeof min.height === 'undefined' ? 10 : min.height;\n        var computedMaxHeight = typeof max.height === 'undefined' || max.height < 0 ? newHeight : max.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (lockAspectRatio) {\n            var extraMinWidth = (computedMinHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMaxWidth = (computedMaxHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMinHeight = (computedMinWidth - extraWidth) / this.ratio + extraHeight;\n            var extraMaxHeight = (computedMaxWidth - extraWidth) / this.ratio + extraHeight;\n            var lockedMinWidth = Math.max(computedMinWidth, extraMinWidth);\n            var lockedMaxWidth = Math.min(computedMaxWidth, extraMaxWidth);\n            var lockedMinHeight = Math.max(computedMinHeight, extraMinHeight);\n            var lockedMaxHeight = Math.min(computedMaxHeight, extraMaxHeight);\n            newWidth = clamp(newWidth, lockedMinWidth, lockedMaxWidth);\n            newHeight = clamp(newHeight, lockedMinHeight, lockedMaxHeight);\n        }\n        else {\n            newWidth = clamp(newWidth, computedMinWidth, computedMaxWidth);\n            newHeight = clamp(newHeight, computedMinHeight, computedMaxHeight);\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.setBoundingClientRect = function () {\n        // For parent boundary\n        if (this.props.bounds === 'parent') {\n            var parent_3 = this.parentNode;\n            if (parent_3 instanceof HTMLElement) {\n                var parentRect = parent_3.getBoundingClientRect();\n                this.parentLeft = parentRect.left;\n                this.parentTop = parentRect.top;\n            }\n        }\n        // For target(html element) boundary\n        if (this.props.bounds instanceof HTMLElement) {\n            var targetRect = this.props.bounds.getBoundingClientRect();\n            this.targetLeft = targetRect.left;\n            this.targetTop = targetRect.top;\n        }\n        // For boundary\n        if (this.resizable) {\n            var _a = this.resizable.getBoundingClientRect(), left = _a.left, top_1 = _a.top;\n            this.resizableLeft = left;\n            this.resizableTop = top_1;\n        }\n    };\n    Resizable.prototype.onResizeStart = function (event, direction) {\n        if (!this.resizable) {\n            return;\n        }\n        var clientX = 0;\n        var clientY = 0;\n        if (event.nativeEvent instanceof MouseEvent) {\n            clientX = event.nativeEvent.clientX;\n            clientY = event.nativeEvent.clientY;\n            // When user click with right button the resize is stuck in resizing mode\n            // until users clicks again, dont continue if right click is used.\n            // HACK: MouseEvent does not have `which` from flow-bin v0.68.\n            if (event.nativeEvent.which === 3) {\n                return;\n            }\n        }\n        else if (event.nativeEvent instanceof TouchEvent) {\n            clientX = event.nativeEvent.touches[0].clientX;\n            clientY = event.nativeEvent.touches[0].clientY;\n        }\n        if (this.props.onResizeStart) {\n            if (this.resizable) {\n                var startResize = this.props.onResizeStart(event, direction, this.resizable);\n                if (startResize === false) {\n                    return;\n                }\n            }\n        }\n        // Fix #168\n        if (this.props.size) {\n            if (typeof this.props.size.height !== 'undefined' && this.props.size.height !== this.state.height) {\n                this.setState({ height: this.props.size.height });\n            }\n            if (typeof this.props.size.width !== 'undefined' && this.props.size.width !== this.state.width) {\n                this.setState({ width: this.props.size.width });\n            }\n        }\n        // For lockAspectRatio case\n        this.ratio =\n            typeof this.props.lockAspectRatio === 'number' ? this.props.lockAspectRatio : this.size.width / this.size.height;\n        var flexBasis;\n        var computedStyle = window.getComputedStyle(this.resizable);\n        if (computedStyle.flexBasis !== 'auto') {\n            var parent_4 = this.parentNode;\n            if (parent_4) {\n                var dir = window.getComputedStyle(parent_4).flexDirection;\n                this.flexDir = dir.startsWith('row') ? 'row' : 'column';\n                flexBasis = computedStyle.flexBasis;\n            }\n        }\n        // For boundary\n        this.setBoundingClientRect();\n        this.bindEvents();\n        var state = {\n            original: {\n                x: clientX,\n                y: clientY,\n                width: this.size.width,\n                height: this.size.height,\n            },\n            isResizing: true,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: window.getComputedStyle(event.target).cursor || 'auto' }),\n            direction: direction,\n            flexBasis: flexBasis,\n        };\n        this.setState(state);\n    };\n    Resizable.prototype.onMouseMove = function (event) {\n        if (!this.state.isResizing || !this.resizable) {\n            return;\n        }\n        var _a = this.props, maxWidth = _a.maxWidth, maxHeight = _a.maxHeight, minWidth = _a.minWidth, minHeight = _a.minHeight;\n        var clientX = event instanceof MouseEvent ? event.clientX : event.touches[0].clientX;\n        var clientY = event instanceof MouseEvent ? event.clientY : event.touches[0].clientY;\n        var _b = this.state, direction = _b.direction, original = _b.original, width = _b.width, height = _b.height;\n        var parentSize = this.getParentSize();\n        var max = calculateNewMax(parentSize, maxWidth, maxHeight, minWidth, minHeight);\n        maxWidth = max.maxWidth;\n        maxHeight = max.maxHeight;\n        minWidth = max.minWidth;\n        minHeight = max.minHeight;\n        // Calculate new size\n        var _c = this.calculateNewSizeFromDirection(clientX, clientY), newHeight = _c.newHeight, newWidth = _c.newWidth;\n        // Calculate max size from boundary settings\n        var boundaryMax = this.calculateNewMaxFromBoundary(maxWidth, maxHeight);\n        // Calculate new size from aspect ratio\n        var newSize = this.calculateNewSizeFromAspectRatio(newWidth, newHeight, { width: boundaryMax.maxWidth, height: boundaryMax.maxHeight }, { width: minWidth, height: minHeight });\n        newWidth = newSize.newWidth;\n        newHeight = newSize.newHeight;\n        if (this.props.grid) {\n            var newGridWidth = snap(newWidth, this.props.grid[0]);\n            var newGridHeight = snap(newHeight, this.props.grid[1]);\n            var gap = this.props.snapGap || 0;\n            newWidth = gap === 0 || Math.abs(newGridWidth - newWidth) <= gap ? newGridWidth : newWidth;\n            newHeight = gap === 0 || Math.abs(newGridHeight - newHeight) <= gap ? newGridHeight : newHeight;\n        }\n        if (this.props.snap && this.props.snap.x) {\n            newWidth = findClosestSnap(newWidth, this.props.snap.x, this.props.snapGap);\n        }\n        if (this.props.snap && this.props.snap.y) {\n            newHeight = findClosestSnap(newHeight, this.props.snap.y, this.props.snapGap);\n        }\n        var delta = {\n            width: newWidth - original.width,\n            height: newHeight - original.height,\n        };\n        if (width && typeof width === 'string') {\n            if (endsWith(width, '%')) {\n                var percent = (newWidth / parentSize.width) * 100;\n                newWidth = percent + \"%\";\n            }\n            else if (endsWith(width, 'vw')) {\n                var vw = (newWidth / window.innerWidth) * 100;\n                newWidth = vw + \"vw\";\n            }\n            else if (endsWith(width, 'vh')) {\n                var vh = (newWidth / window.innerHeight) * 100;\n                newWidth = vh + \"vh\";\n            }\n        }\n        if (height && typeof height === 'string') {\n            if (endsWith(height, '%')) {\n                var percent = (newHeight / parentSize.height) * 100;\n                newHeight = percent + \"%\";\n            }\n            else if (endsWith(height, 'vw')) {\n                var vw = (newHeight / window.innerWidth) * 100;\n                newHeight = vw + \"vw\";\n            }\n            else if (endsWith(height, 'vh')) {\n                var vh = (newHeight / window.innerHeight) * 100;\n                newHeight = vh + \"vh\";\n            }\n        }\n        var newState = {\n            width: this.createSizeForCssProperty(newWidth, 'width'),\n            height: this.createSizeForCssProperty(newHeight, 'height'),\n        };\n        if (this.flexDir === 'row') {\n            newState.flexBasis = newState.width;\n        }\n        else if (this.flexDir === 'column') {\n            newState.flexBasis = newState.height;\n        }\n        this.setState(newState);\n        if (this.props.onResize) {\n            this.props.onResize(event, direction, this.resizable, delta);\n        }\n    };\n    Resizable.prototype.onMouseUp = function (event) {\n        var _a = this.state, isResizing = _a.isResizing, direction = _a.direction, original = _a.original;\n        if (!isResizing || !this.resizable) {\n            return;\n        }\n        var delta = {\n            width: this.size.width - original.width,\n            height: this.size.height - original.height,\n        };\n        if (this.props.onResizeStop) {\n            this.props.onResizeStop(event, direction, this.resizable, delta);\n        }\n        if (this.props.size) {\n            this.setState(this.props.size);\n        }\n        this.unbindEvents();\n        this.setState({\n            isResizing: false,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: 'auto' }),\n        });\n    };\n    Resizable.prototype.updateSize = function (size) {\n        this.setState({ width: size.width, height: size.height });\n    };\n    Resizable.prototype.renderResizer = function () {\n        var _this = this;\n        var _a = this.props, enable = _a.enable, handleStyles = _a.handleStyles, handleClasses = _a.handleClasses, handleWrapperStyle = _a.handleWrapperStyle, handleWrapperClass = _a.handleWrapperClass, handleComponent = _a.handleComponent;\n        if (!enable) {\n            return null;\n        }\n        var resizers = Object.keys(enable).map(function (dir) {\n            if (enable[dir] !== false) {\n                return (React.createElement(resizer_1.Resizer, { key: dir, direction: dir, onResizeStart: _this.onResizeStart, replaceStyles: handleStyles && handleStyles[dir], className: handleClasses && handleClasses[dir] }, handleComponent && handleComponent[dir] ? handleComponent[dir] : null));\n            }\n            return null;\n        });\n        // #93 Wrap the resize box in span (will not break 100% width/height)\n        return (React.createElement(\"span\", { className: handleWrapperClass, style: handleWrapperStyle }, resizers));\n    };\n    Resizable.prototype.render = function () {\n        var _this = this;\n        var extendsProps = Object.keys(this.props).reduce(function (acc, key) {\n            if (definedProps.indexOf(key) !== -1) {\n                return acc;\n            }\n            acc[key] = _this.props[key];\n            return acc;\n        }, {});\n        var style = __assign(__assign(__assign({ position: 'relative', userSelect: this.state.isResizing ? 'none' : 'auto' }, this.props.style), this.sizeStyle), { maxWidth: this.props.maxWidth, maxHeight: this.props.maxHeight, minWidth: this.props.minWidth, minHeight: this.props.minHeight, boxSizing: 'border-box', flexShrink: 0 });\n        if (this.state.flexBasis) {\n            style.flexBasis = this.state.flexBasis;\n        }\n        return (React.createElement(\"div\", __assign({ ref: this.ref, style: style, className: this.props.className }, extendsProps),\n            this.state.isResizing && React.createElement(\"div\", { style: this.state.backgroundStyle }),\n            this.props.children,\n            this.renderResizer()));\n    };\n    Resizable.defaultProps = {\n        onResizeStart: function () { },\n        onResize: function () { },\n        onResizeStop: function () { },\n        enable: {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true,\n            topRight: true,\n            bottomRight: true,\n            bottomLeft: true,\n            topLeft: true,\n        },\n        style: {},\n        grid: [1, 1],\n        lockAspectRatio: false,\n        lockAspectRatioExtraWidth: 0,\n        lockAspectRatioExtraHeight: 0,\n        scale: 1,\n        resizeRatio: 1,\n        snapGap: 0,\n    };\n    return Resizable;\n}(React.PureComponent));\nexports.Resizable = Resizable;\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect } from 'react-redux';\nimport { Collapse } from '@grafana/ui';\n\nimport {\n  DataSourceApi,\n  RawTimeRange,\n  LogLevel,\n  TimeZone,\n  AbsoluteTimeRange,\n  LogRowModel,\n  LogsDedupStrategy,\n  TimeRange,\n  LogsMetaItem,\n  GraphSeriesXY,\n} from '@grafana/data';\n\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\nimport { StoreState } from 'app/types';\n\nimport { changeDedupStrategy, updateTimeRange } from './state/actions';\nimport { toggleLogLevelAction } from 'app/features/explore/state/actionTypes';\nimport { deduplicatedRowsSelector } from 'app/features/explore/state/selectors';\nimport { getTimeZone } from '../profile/state/selectors';\nimport { LiveLogsWithTheme } from './LiveLogs';\nimport { Logs } from './Logs';\nimport { LogsCrossFadeTransition } from './utils/LogsCrossFadeTransition';\nimport { LiveTailControls } from './useLiveTailControls';\nimport { getLinksFromLogsField } from '../panel/panellinks/linkSuppliers';\n\ninterface LogsContainerProps {\n  datasourceInstance?: DataSourceApi;\n  exploreId: ExploreId;\n  loading: boolean;\n\n  logsHighlighterExpressions?: string[];\n  logRows?: LogRowModel[];\n  logsMeta?: LogsMetaItem[];\n  logsSeries?: GraphSeriesXY[];\n  dedupedRows?: LogRowModel[];\n\n  onClickFilterLabel?: (key: string, value: string) => void;\n  onClickFilterOutLabel?: (key: string, value: string) => void;\n  onStartScanning: () => void;\n  onStopScanning: () => void;\n  timeZone: TimeZone;\n  scanning?: boolean;\n  scanRange?: RawTimeRange;\n  toggleLogLevelAction: typeof toggleLogLevelAction;\n  changeDedupStrategy: typeof changeDedupStrategy;\n  dedupStrategy: LogsDedupStrategy;\n  width: number;\n  isLive: boolean;\n  updateTimeRange: typeof updateTimeRange;\n  range: TimeRange;\n  syncedTimes: boolean;\n  absoluteRange: AbsoluteTimeRange;\n  isPaused: boolean;\n}\n\nexport class LogsContainer extends PureComponent<LogsContainerProps> {\n  onChangeTime = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  handleDedupStrategyChange = (dedupStrategy: LogsDedupStrategy) => {\n    this.props.changeDedupStrategy(this.props.exploreId, dedupStrategy);\n  };\n\n  handleToggleLogLevel = (hiddenLogLevels: LogLevel[]) => {\n    const { exploreId } = this.props;\n    this.props.toggleLogLevelAction({\n      exploreId,\n      hiddenLogLevels,\n    });\n  };\n\n  getLogRowContext = async (row: LogRowModel, options?: any): Promise<any> => {\n    const { datasourceInstance } = this.props;\n\n    if (datasourceInstance?.getLogRowContext) {\n      return datasourceInstance.getLogRowContext(row, options);\n    }\n\n    return [];\n  };\n\n  render() {\n    const {\n      loading,\n      logsHighlighterExpressions,\n      logRows,\n      logsMeta,\n      logsSeries,\n      dedupedRows,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      onStartScanning,\n      onStopScanning,\n      absoluteRange,\n      timeZone,\n      scanning,\n      range,\n      width,\n      isLive,\n      exploreId,\n    } = this.props;\n\n    return (\n      <>\n        <LogsCrossFadeTransition visible={isLive}>\n          <Collapse label=\"Logs\" loading={false} isOpen>\n            <LiveTailControls exploreId={exploreId}>\n              {controls => (\n                <LiveLogsWithTheme\n                  logRows={logRows}\n                  timeZone={timeZone}\n                  stopLive={controls.stop}\n                  isPaused={this.props.isPaused}\n                  onPause={controls.pause}\n                  onResume={controls.resume}\n                />\n              )}\n            </LiveTailControls>\n          </Collapse>\n        </LogsCrossFadeTransition>\n        <LogsCrossFadeTransition visible={!isLive}>\n          <Collapse label=\"Logs\" loading={loading} isOpen>\n            <Logs\n              dedupStrategy={this.props.dedupStrategy || LogsDedupStrategy.none}\n              logRows={logRows}\n              logsMeta={logsMeta}\n              logsSeries={logsSeries}\n              dedupedRows={dedupedRows}\n              highlighterExpressions={logsHighlighterExpressions}\n              loading={loading}\n              onChangeTime={this.onChangeTime}\n              onClickFilterLabel={onClickFilterLabel}\n              onClickFilterOutLabel={onClickFilterOutLabel}\n              onStartScanning={onStartScanning}\n              onStopScanning={onStopScanning}\n              onDedupStrategyChange={this.handleDedupStrategyChange}\n              onToggleLogLevel={this.handleToggleLogLevel}\n              absoluteRange={absoluteRange}\n              timeZone={timeZone}\n              scanning={scanning}\n              scanRange={range.raw}\n              width={width}\n              getRowContext={this.getLogRowContext}\n              getFieldLinks={getLinksFromLogsField}\n            />\n          </Collapse>\n        </LogsCrossFadeTransition>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: string }) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const {\n    logsHighlighterExpressions,\n    logsResult,\n    loading,\n    scanning,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    range,\n    absoluteRange,\n    dedupStrategy,\n  } = item;\n  const dedupedRows = deduplicatedRowsSelector(item);\n  const timeZone = getTimeZone(state.user);\n\n  return {\n    loading,\n    logsHighlighterExpressions,\n    logRows: logsResult && logsResult.rows,\n    logsMeta: logsResult && logsResult.meta,\n    logsSeries: logsResult && logsResult.series,\n    scanning,\n    timeZone,\n    dedupStrategy,\n    dedupedRows,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    range,\n    absoluteRange,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeDedupStrategy,\n  toggleLogLevelAction,\n  updateTimeRange,\n};\n\nexport default hot(module)(connect(mapStateToProps, mapDispatchToProps)(LogsContainer));\n","import omitBy from 'lodash/omitBy';\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { hot } from 'react-hot-loader';\nimport memoizeOne from 'memoize-one';\nimport classNames from 'classnames';\nimport { css } from 'emotion';\n\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\nimport { ToggleButtonGroup, ToggleButton, Tooltip, ButtonSelect, SetInterval } from '@grafana/ui';\nimport { RawTimeRange, TimeZone, TimeRange, DataQuery, ExploreMode } from '@grafana/data';\nimport { DataSourcePicker } from 'app/core/components/Select/DataSourcePicker';\nimport { StoreState } from 'app/types/store';\nimport {\n  changeDatasource,\n  clearQueries,\n  splitClose,\n  runQueries,\n  splitOpen,\n  syncTimes,\n  changeRefreshInterval,\n  changeMode,\n} from './state/actions';\nimport { updateLocation } from 'app/core/actions';\nimport { getTimeZone } from '../profile/state/selectors';\nimport { getDashboardSrv } from '../dashboard/services/DashboardSrv';\nimport kbn from '../../core/utils/kbn';\nimport { ExploreTimeControls } from './ExploreTimeControls';\nimport { LiveTailButton } from './LiveTailButton';\nimport { ResponsiveButton } from './ResponsiveButton';\nimport { RunButton } from './RunButton';\nimport { LiveTailControls } from './useLiveTailControls';\nimport { getExploreDatasources } from './state/selectors';\nimport { setDashboardQueriesToUpdateOnLoad } from '../dashboard/state/reducers';\n\nconst getStyles = memoizeOne(() => {\n  return {\n    liveTailButtons: css`\n      margin-left: 10px;\n      @media (max-width: 1110px) {\n        margin-left: 4px;\n      }\n    `,\n  };\n});\n\ninterface OwnProps {\n  exploreId: ExploreId;\n  onChangeTime: (range: RawTimeRange, changedByScanner?: boolean) => void;\n}\n\ninterface StateProps {\n  datasourceMissing: boolean;\n  loading: boolean;\n  range: TimeRange;\n  timeZone: TimeZone;\n  splitted: boolean;\n  syncedTimes: boolean;\n  refreshInterval?: string;\n  supportedModes: ExploreMode[];\n  selectedMode: ExploreMode;\n  hasLiveOption: boolean;\n  isLive: boolean;\n  isPaused: boolean;\n  originPanelId?: number;\n  queries: DataQuery[];\n  datasourceLoading?: boolean;\n  containerWidth: number;\n  datasourceName?: string;\n}\n\ninterface DispatchProps {\n  changeDatasource: typeof changeDatasource;\n  clearAll: typeof clearQueries;\n  runQueries: typeof runQueries;\n  closeSplit: typeof splitClose;\n  split: typeof splitOpen;\n  syncTimes: typeof syncTimes;\n  changeRefreshInterval: typeof changeRefreshInterval;\n  changeMode: typeof changeMode;\n  updateLocation: typeof updateLocation;\n  setDashboardQueriesToUpdateOnLoad: typeof setDashboardQueriesToUpdateOnLoad;\n}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\nexport class UnConnectedExploreToolbar extends PureComponent<Props> {\n  onChangeDatasource = async (option: { value: any }) => {\n    this.props.changeDatasource(this.props.exploreId, option.value);\n  };\n\n  onClearAll = () => {\n    this.props.clearAll(this.props.exploreId);\n  };\n\n  onRunQuery = () => {\n    return this.props.runQueries(this.props.exploreId);\n  };\n\n  onChangeRefreshInterval = (item: string) => {\n    const { changeRefreshInterval, exploreId } = this.props;\n    changeRefreshInterval(exploreId, item);\n  };\n\n  onModeChange = (mode: ExploreMode) => {\n    const { changeMode, exploreId } = this.props;\n    changeMode(exploreId, mode);\n  };\n\n  onChangeTimeSync = () => {\n    const { syncTimes, exploreId } = this.props;\n    syncTimes(exploreId);\n  };\n\n  returnToPanel = async ({ withChanges = false } = {}) => {\n    const { originPanelId, queries } = this.props;\n\n    const dashboardSrv = getDashboardSrv();\n    const dash = dashboardSrv.getCurrent();\n    const titleSlug = kbn.slugifyForUrl(dash.title);\n\n    if (withChanges) {\n      this.props.setDashboardQueriesToUpdateOnLoad({\n        panelId: originPanelId,\n        queries: this.cleanQueries(queries),\n      });\n    }\n\n    const dashViewOptions = {\n      fullscreen: withChanges || dash.meta.fullscreen,\n      edit: withChanges || dash.meta.isEditing,\n    };\n\n    this.props.updateLocation({\n      path: `/d/${dash.uid}/:${titleSlug}`,\n      query: {\n        ...omitBy(dashViewOptions, v => !v),\n        panelId: originPanelId,\n      },\n    });\n  };\n\n  // Remove explore specific parameters from queries\n  private cleanQueries(queries: DataQuery[]) {\n    return queries.map((query: DataQuery & { context?: string }) => {\n      delete query.context;\n      delete query.key;\n      return query;\n    });\n  }\n\n  getSelectedDatasource = () => {\n    const { datasourceName } = this.props;\n    const exploreDatasources = getExploreDatasources();\n    return datasourceName ? exploreDatasources.find(datasource => datasource.name === datasourceName) : undefined;\n  };\n\n  render() {\n    const {\n      datasourceMissing,\n      closeSplit,\n      exploreId,\n      loading,\n      range,\n      timeZone,\n      splitted,\n      syncedTimes,\n      refreshInterval,\n      onChangeTime,\n      split,\n      supportedModes,\n      selectedMode,\n      hasLiveOption,\n      isLive,\n      isPaused,\n      originPanelId,\n      datasourceLoading,\n      containerWidth,\n    } = this.props;\n\n    const styles = getStyles();\n    const originDashboardIsEditable = originPanelId && Number.isInteger(originPanelId);\n    const panelReturnClasses = classNames('btn', 'navbar-button', {\n      'btn--radius-right-0': originDashboardIsEditable,\n      'navbar-button navbar-button--border-right-0': originDashboardIsEditable,\n    });\n\n    const showSmallDataSourcePicker = (splitted ? containerWidth < 700 : containerWidth < 800) || false;\n    const showSmallTimePicker = splitted || containerWidth < 1210;\n\n    return (\n      <div className={splitted ? 'explore-toolbar splitted' : 'explore-toolbar'}>\n        <div className=\"explore-toolbar-item\">\n          <div className=\"explore-toolbar-header\">\n            <div className=\"explore-toolbar-header-title\">\n              {exploreId === 'left' && (\n                <span className=\"navbar-page-btn\">\n                  <i className=\"gicon gicon-explore\" />\n                  Explore\n                </span>\n              )}\n            </div>\n            {splitted && (\n              <a className=\"explore-toolbar-header-close\" onClick={() => closeSplit(exploreId)}>\n                <i className=\"fa fa-times fa-fw\" />\n              </a>\n            )}\n          </div>\n        </div>\n        <div className=\"explore-toolbar-item\">\n          <div className=\"explore-toolbar-content\">\n            {!datasourceMissing ? (\n              <div className=\"explore-toolbar-content-item\">\n                <div\n                  className={classNames(\n                    'explore-ds-picker',\n                    showSmallDataSourcePicker ? 'explore-ds-picker--small' : ''\n                  )}\n                >\n                  <DataSourcePicker\n                    onChange={this.onChangeDatasource}\n                    datasources={getExploreDatasources()}\n                    current={this.getSelectedDatasource()}\n                    showLoading={datasourceLoading}\n                    hideTextValue={showSmallDataSourcePicker}\n                  />\n                </div>\n                {supportedModes.length > 1 ? (\n                  <div className=\"query-type-toggle\">\n                    <ToggleButtonGroup label=\"\" transparent={true}>\n                      <ToggleButton\n                        key={ExploreMode.Metrics}\n                        value={ExploreMode.Metrics}\n                        onChange={this.onModeChange}\n                        selected={selectedMode === ExploreMode.Metrics}\n                      >\n                        {'Metrics'}\n                      </ToggleButton>\n                      <ToggleButton\n                        key={ExploreMode.Logs}\n                        value={ExploreMode.Logs}\n                        onChange={this.onModeChange}\n                        selected={selectedMode === ExploreMode.Logs}\n                      >\n                        {'Logs'}\n                      </ToggleButton>\n                    </ToggleButtonGroup>\n                  </div>\n                ) : null}\n              </div>\n            ) : null}\n\n            {originPanelId && Number.isInteger(originPanelId) && !splitted && (\n              <div className=\"explore-toolbar-content-item\">\n                <Tooltip content={'Return to panel'} placement=\"bottom\">\n                  <button className={panelReturnClasses} onClick={() => this.returnToPanel()}>\n                    <i className=\"fa fa-arrow-left\" />\n                  </button>\n                </Tooltip>\n                {originDashboardIsEditable && (\n                  <ButtonSelect\n                    className=\"navbar-button--attached btn--radius-left-0$\"\n                    options={[{ label: 'Return to panel with changes', value: '' }]}\n                    onChange={() => this.returnToPanel({ withChanges: true })}\n                    maxMenuHeight={380}\n                  />\n                )}\n              </div>\n            )}\n\n            {exploreId === 'left' && !splitted ? (\n              <div className=\"explore-toolbar-content-item explore-icon-align\">\n                <ResponsiveButton\n                  splitted={splitted}\n                  title=\"Split\"\n                  onClick={split}\n                  iconClassName=\"fa fa-fw fa-columns icon-margin-right\"\n                  disabled={isLive}\n                />\n              </div>\n            ) : null}\n            {!isLive && (\n              <div className=\"explore-toolbar-content-item\">\n                <ExploreTimeControls\n                  exploreId={exploreId}\n                  range={range}\n                  timeZone={timeZone}\n                  onChangeTime={onChangeTime}\n                  splitted={splitted}\n                  syncedTimes={syncedTimes}\n                  onChangeTimeSync={this.onChangeTimeSync}\n                  hideText={showSmallTimePicker}\n                />\n              </div>\n            )}\n\n            {!isLive && (\n              <div className=\"explore-toolbar-content-item explore-icon-align\">\n                <ResponsiveButton\n                  splitted={splitted}\n                  title=\"Clear All\"\n                  onClick={this.onClearAll}\n                  iconClassName=\"fa fa-fw fa-trash icon-margin-right\"\n                />\n              </div>\n            )}\n            <div className=\"explore-toolbar-content-item\">\n              <RunButton\n                refreshInterval={refreshInterval}\n                onChangeRefreshInterval={this.onChangeRefreshInterval}\n                splitted={splitted}\n                loading={loading || (isLive && !isPaused)}\n                onRun={this.onRunQuery}\n                showDropdown={!isLive}\n              />\n              {refreshInterval && <SetInterval func={this.onRunQuery} interval={refreshInterval} loading={loading} />}\n            </div>\n\n            {hasLiveOption && (\n              <div className={`explore-toolbar-content-item ${styles.liveTailButtons}`}>\n                <LiveTailControls exploreId={exploreId}>\n                  {controls => (\n                    <LiveTailButton\n                      splitted={splitted}\n                      isLive={isLive}\n                      isPaused={isPaused}\n                      start={controls.start}\n                      pause={controls.pause}\n                      resume={controls.resume}\n                      stop={controls.stop}\n                    />\n                  )}\n                </LiveTailControls>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: StoreState, { exploreId }: OwnProps): StateProps => {\n  const splitted = state.explore.split;\n  const syncedTimes = state.explore.syncedTimes;\n  const exploreItem: ExploreItemState = state.explore[exploreId];\n  const {\n    datasourceInstance,\n    datasourceMissing,\n    range,\n    refreshInterval,\n    loading,\n    supportedModes,\n    mode,\n    isLive,\n    isPaused,\n    originPanelId,\n    queries,\n    datasourceLoading,\n    containerWidth,\n  } = exploreItem;\n\n  const hasLiveOption = datasourceInstance?.meta?.streaming && mode === ExploreMode.Logs;\n\n  return {\n    datasourceMissing,\n    datasourceName: datasourceInstance?.name,\n    loading,\n    range,\n    timeZone: getTimeZone(state.user),\n    splitted,\n    refreshInterval,\n    supportedModes,\n    selectedMode: supportedModes.includes(mode) ? mode : supportedModes[0],\n    hasLiveOption,\n    isLive,\n    isPaused,\n    originPanelId,\n    queries,\n    syncedTimes,\n    datasourceLoading,\n    containerWidth,\n  };\n};\n\nconst mapDispatchToProps: DispatchProps = {\n  changeDatasource,\n  updateLocation,\n  changeRefreshInterval,\n  clearAll: clearQueries,\n  runQueries,\n  closeSplit: splitClose,\n  split: splitOpen,\n  syncTimes,\n  changeMode: changeMode,\n  setDashboardQueriesToUpdateOnLoad,\n};\n\nexport const ExploreToolbar = hot(module)(connect(mapStateToProps, mapDispatchToProps)(UnConnectedExploreToolbar));\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Components\nimport QueryRow from './QueryRow';\n\n// Types\nimport { Emitter } from 'app/core/utils/emitter';\nimport { ExploreId } from 'app/types/explore';\n\ninterface QueryRowsProps {\n  className?: string;\n  exploreEvents: Emitter;\n  exploreId: ExploreId;\n  queryKeys: string[];\n}\n\nexport default class QueryRows extends PureComponent<QueryRowsProps> {\n  render() {\n    const { className = '', exploreEvents, exploreId, queryKeys } = this.props;\n    return (\n      <div className={className}>\n        {queryKeys.map((key, index) => {\n          return <QueryRow key={key} exploreEvents={exploreEvents} exploreId={exploreId} index={index} />;\n        })}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect } from 'react-redux';\n\nimport { StoreState } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\n\nimport Explore from './Explore';\nimport { CustomScrollbar, ErrorBoundaryAlert } from '@grafana/ui';\nimport { resetExploreAction } from './state/actionTypes';\n\ninterface WrapperProps {\n  split: boolean;\n  resetExploreAction: typeof resetExploreAction;\n}\n\nexport class Wrapper extends Component<WrapperProps> {\n  componentWillUnmount() {\n    this.props.resetExploreAction({});\n  }\n\n  render() {\n    const { split } = this.props;\n\n    return (\n      <div className=\"page-scrollbar-wrapper\">\n        <CustomScrollbar autoHeightMin={'100%'} autoHeightMax={''} className=\"custom-scrollbar--page\">\n          <div className=\"explore-wrapper\">\n            <ErrorBoundaryAlert style=\"page\">\n              <Explore exploreId={ExploreId.left} />\n            </ErrorBoundaryAlert>\n            {split && (\n              <ErrorBoundaryAlert style=\"page\">\n                <Explore exploreId={ExploreId.right} />\n              </ErrorBoundaryAlert>\n            )}\n          </div>\n        </CustomScrollbar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: StoreState) => {\n  const { split } = state.explore;\n  return { split };\n};\n\nconst mapDispatchToProps = {\n  resetExploreAction,\n};\n\nexport default hot(module)(connect(mapStateToProps, mapDispatchToProps)(Wrapper));\n","import React, { PureComponent } from 'react';\n\nimport {\n  rangeUtil,\n  RawTimeRange,\n  LogLevel,\n  TimeZone,\n  AbsoluteTimeRange,\n  LogsMetaKind,\n  LogsDedupStrategy,\n  LogRowModel,\n  LogsDedupDescription,\n  LogsMetaItem,\n  GraphSeriesXY,\n  LinkModel,\n  Field,\n} from '@grafana/data';\nimport { Switch, LogLabels, ToggleButtonGroup, ToggleButton, LogRows } from '@grafana/ui';\nimport store from 'app/core/store';\n\nimport { ExploreGraphPanel } from './ExploreGraphPanel';\nimport { MetaInfoText } from './MetaInfoText';\n\nconst SETTINGS_KEYS = {\n  showLabels: 'grafana.explore.logs.showLabels',\n  showTime: 'grafana.explore.logs.showTime',\n  wrapLogMessage: 'grafana.explore.logs.wrapLogMessage',\n};\n\nfunction renderMetaItem(value: any, kind: LogsMetaKind) {\n  if (kind === LogsMetaKind.LabelsMap) {\n    return (\n      <span className=\"logs-meta-item__labels\">\n        <LogLabels labels={value} />\n      </span>\n    );\n  }\n  return value;\n}\n\ninterface Props {\n  logRows?: LogRowModel[];\n  logsMeta?: LogsMetaItem[];\n  logsSeries?: GraphSeriesXY[];\n  dedupedRows?: LogRowModel[];\n\n  width: number;\n  highlighterExpressions?: string[];\n  loading: boolean;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  scanning?: boolean;\n  scanRange?: RawTimeRange;\n  dedupStrategy: LogsDedupStrategy;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  onClickFilterLabel?: (key: string, value: string) => void;\n  onClickFilterOutLabel?: (key: string, value: string) => void;\n  onStartScanning?: () => void;\n  onStopScanning?: () => void;\n  onDedupStrategyChange: (dedupStrategy: LogsDedupStrategy) => void;\n  onToggleLogLevel: (hiddenLogLevels: LogLevel[]) => void;\n  getRowContext?: (row: LogRowModel, options?: any) => Promise<any>;\n  getFieldLinks: (field: Field, rowIndex: number) => Array<LinkModel<Field>>;\n}\n\ninterface State {\n  showLabels: boolean;\n  showTime: boolean;\n  wrapLogMessage: boolean;\n}\n\nexport class Logs extends PureComponent<Props, State> {\n  state = {\n    showLabels: store.getBool(SETTINGS_KEYS.showLabels, false),\n    showTime: store.getBool(SETTINGS_KEYS.showTime, true),\n    wrapLogMessage: store.getBool(SETTINGS_KEYS.wrapLogMessage, true),\n  };\n\n  onChangeDedup = (dedup: LogsDedupStrategy) => {\n    const { onDedupStrategyChange } = this.props;\n    if (this.props.dedupStrategy === dedup) {\n      return onDedupStrategyChange(LogsDedupStrategy.none);\n    }\n    return onDedupStrategyChange(dedup);\n  };\n\n  onChangeLabels = (event?: React.SyntheticEvent) => {\n    const target = event && (event.target as HTMLInputElement);\n    if (target) {\n      const showLabels = target.checked;\n      this.setState({\n        showLabels,\n      });\n      store.set(SETTINGS_KEYS.showLabels, showLabels);\n    }\n  };\n\n  onChangeTime = (event?: React.SyntheticEvent) => {\n    const target = event && (event.target as HTMLInputElement);\n    if (target) {\n      const showTime = target.checked;\n      this.setState({\n        showTime,\n      });\n      store.set(SETTINGS_KEYS.showTime, showTime);\n    }\n  };\n\n  onChangewrapLogMessage = (event?: React.SyntheticEvent) => {\n    const target = event && (event.target as HTMLInputElement);\n    if (target) {\n      const wrapLogMessage = target.checked;\n      this.setState({\n        wrapLogMessage,\n      });\n      store.set(SETTINGS_KEYS.wrapLogMessage, wrapLogMessage);\n    }\n  };\n\n  onToggleLogLevel = (hiddenRawLevels: string[]) => {\n    const hiddenLogLevels: LogLevel[] = hiddenRawLevels.map(level => LogLevel[level as LogLevel]);\n    this.props.onToggleLogLevel(hiddenLogLevels);\n  };\n\n  onClickScan = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onStartScanning) {\n      this.props.onStartScanning();\n    }\n  };\n\n  onClickStopScan = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onStopScanning) {\n      this.props.onStopScanning();\n    }\n  };\n\n  render() {\n    const {\n      logRows,\n      logsMeta,\n      logsSeries,\n      highlighterExpressions,\n      loading = false,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      timeZone,\n      scanning,\n      scanRange,\n      width,\n      dedupedRows,\n      absoluteRange,\n      onChangeTime,\n      getFieldLinks,\n    } = this.props;\n\n    if (!logRows) {\n      return null;\n    }\n\n    const { showLabels, showTime, wrapLogMessage } = this.state;\n    const { dedupStrategy } = this.props;\n    const hasData = logRows && logRows.length > 0;\n    const dedupCount = dedupedRows\n      ? dedupedRows.reduce((sum, row) => (row.duplicates ? sum + row.duplicates : sum), 0)\n      : 0;\n    const meta = logsMeta ? [...logsMeta] : [];\n\n    if (dedupStrategy !== LogsDedupStrategy.none) {\n      meta.push({\n        label: 'Dedup count',\n        value: dedupCount,\n        kind: LogsMetaKind.Number,\n      });\n    }\n\n    const scanText = scanRange ? `Scanning ${rangeUtil.describeTimeRange(scanRange)}` : 'Scanning...';\n    const series = logsSeries ? logsSeries : [];\n\n    return (\n      <div className=\"logs-panel\">\n        <div className=\"logs-panel-graph\">\n          <ExploreGraphPanel\n            series={series}\n            width={width}\n            onHiddenSeriesChanged={this.onToggleLogLevel}\n            loading={loading}\n            absoluteRange={absoluteRange}\n            isStacked={true}\n            showPanel={false}\n            showingGraph={true}\n            showingTable={true}\n            timeZone={timeZone}\n            showBars={true}\n            showLines={false}\n            onUpdateTimeRange={onChangeTime}\n          />\n        </div>\n        <div className=\"logs-panel-options\">\n          <div className=\"logs-panel-controls\">\n            <Switch label=\"Time\" checked={showTime} onChange={this.onChangeTime} transparent />\n            <Switch label=\"Unique labels\" checked={showLabels} onChange={this.onChangeLabels} transparent />\n            <Switch label=\"Wrap lines\" checked={wrapLogMessage} onChange={this.onChangewrapLogMessage} transparent />\n            <ToggleButtonGroup label=\"Dedup\" transparent={true}>\n              {Object.keys(LogsDedupStrategy).map((dedupType: string, i) => (\n                <ToggleButton\n                  key={i}\n                  value={dedupType}\n                  onChange={this.onChangeDedup}\n                  selected={dedupStrategy === dedupType}\n                  // @ts-ignore\n                  tooltip={LogsDedupDescription[dedupType]}\n                >\n                  {dedupType}\n                </ToggleButton>\n              ))}\n            </ToggleButtonGroup>\n          </div>\n        </div>\n\n        {hasData && meta && (\n          <MetaInfoText\n            metaItems={meta.map(item => {\n              return {\n                label: item.label,\n                value: renderMetaItem(item.value, item.kind),\n              };\n            })}\n          />\n        )}\n\n        <LogRows\n          logRows={logRows}\n          deduplicatedRows={dedupedRows}\n          dedupStrategy={dedupStrategy}\n          getRowContext={this.props.getRowContext}\n          highlighterExpressions={highlighterExpressions}\n          rowLimit={logRows ? logRows.length : undefined}\n          onClickFilterLabel={onClickFilterLabel}\n          onClickFilterOutLabel={onClickFilterOutLabel}\n          showLabels={showLabels}\n          showTime={showTime}\n          wrapLogMessage={wrapLogMessage}\n          timeZone={timeZone}\n          getFieldLinks={getFieldLinks}\n        />\n\n        {!loading && !hasData && !scanning && (\n          <div className=\"logs-panel-nodata\">\n            No logs found.\n            <a className=\"link\" onClick={this.onClickScan}>\n              Scan for older logs\n            </a>\n          </div>\n        )}\n\n        {scanning && (\n          <div className=\"logs-panel-nodata\">\n            <span>{scanText}</span>\n            <a className=\"link\" onClick={this.onClickStopScan}>\n              Stop scan\n            </a>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { memo, useContext } from 'react';\nimport { css } from 'emotion';\nimport { GrafanaTheme } from '@grafana/data';\nimport { stylesFactory, ThemeContext } from '@grafana/ui';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => ({\n  metaContainer: css`\n    flex: 1;\n    color: ${theme.colors.textWeak};\n    margin-bottom: ${theme.spacing.d};\n    min-width: 30%;\n    display: flex;\n  `,\n  metaItem: css`\n    margin-right: ${theme.spacing.d};\n    display: flex;\n    align-items: baseline;\n  `,\n  metaLabel: css`\n    margin-right: calc(${theme.spacing.d} / 2);\n    font-size: ${theme.typography.size.sm};\n    font-weight: ${theme.typography.weight.semibold};\n  `,\n  metaValue: css`\n    font-family: ${theme.typography.fontFamily.monospace};\n  `,\n}));\n\nexport interface MetaItemProps {\n  label?: string;\n  value: string;\n}\n\nexport const MetaInfoItem = memo(function MetaInfoItem(props: MetaItemProps) {\n  const theme = useContext(ThemeContext);\n  const style = getStyles(theme);\n  const { label, value } = props;\n\n  return (\n    <div className={style.metaItem}>\n      {label && <span className={style.metaLabel}>{label}:</span>}\n      <span className={style.metaValue}>{value}</span>\n    </div>\n  );\n});\n\nexport interface MetaInfoTextProps {\n  metaItems: MetaItemProps[];\n}\n\nexport const MetaInfoText = memo(function MetaInfoText(props: MetaInfoTextProps) {\n  const theme = useContext(ThemeContext);\n  const style = getStyles(theme);\n  const { metaItems } = props;\n\n  return (\n    <div className={style.metaContainer}>\n      {metaItems.map((item, index) => (\n        <MetaInfoItem key={`${index}-${item.label}`} label={item.label} value={item.value} />\n      ))}\n    </div>\n  );\n});\n\nexport default MetaInfoText;\n","import React from 'react';\n\nfunction formatLatency(value: number) {\n  return `${(value / 1000).toFixed(1)}s`;\n}\n\nexport type Props = {\n  canToggleEditorModes: boolean;\n  isDisabled?: boolean;\n  isNotStarted: boolean;\n  latency: number;\n  onClickToggleEditorMode: () => void;\n  onClickToggleDisabled: () => void;\n  onClickRemoveButton: () => void;\n};\n\nexport function QueryRowActions(props: Props) {\n  const {\n    canToggleEditorModes,\n    onClickToggleEditorMode,\n    onClickToggleDisabled,\n    onClickRemoveButton,\n    isDisabled,\n    isNotStarted,\n    latency,\n  } = props;\n\n  return (\n    <div className=\"gf-form-inline flex-shrink-0\">\n      {canToggleEditorModes && (\n        <div className=\"gf-form\">\n          <button\n            aria-label=\"Edit mode button\"\n            className=\"gf-form-label gf-form-label--btn\"\n            onClick={onClickToggleEditorMode}\n          >\n            <i className=\"fa fa-pencil\" />\n          </button>\n        </div>\n      )}\n      <div className=\"gf-form\">\n        <button disabled className=\"gf-form-label\" title=\"Query row latency\">\n          {formatLatency(latency)}\n        </button>\n      </div>\n      <div className=\"gf-form\">\n        <button\n          disabled={isNotStarted}\n          className=\"gf-form-label gf-form-label--btn\"\n          onClick={onClickToggleDisabled}\n          title=\"Disable/enable query\"\n        >\n          <i className={isDisabled ? 'fa fa-eye-slash' : 'fa fa-eye'} />\n        </button>\n      </div>\n      <div className=\"gf-form\">\n        <button className=\"gf-form-label gf-form-label--btn\" onClick={onClickRemoveButton} title=\"Remove query\">\n          <i className=\"fa fa-minus\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { css } from 'emotion';\n\nimport { Tooltip, useTheme, stylesFactory } from '@grafana/ui';\nimport { GrafanaTheme } from '@grafana/data';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    noRightBorderStyle: css`\n      label: noRightBorderStyle;\n      border-right: 0;\n    `,\n    /*\n     * Required top-padding, otherwise is fa-link icon in active state\n     * cut off on top due to fontAwesome icon position\n     */\n    topPadding: css`\n      label: topPadding;\n      padding-top: 1px;\n    `,\n  };\n});\n\ninterface TimeSyncButtonProps {\n  isSynced: boolean;\n  onClick: () => void;\n}\n\nexport function TimeSyncButton(props: TimeSyncButtonProps) {\n  const { onClick, isSynced } = props;\n  const theme = useTheme();\n  const styles = getStyles(theme);\n\n  const syncTimesTooltip = () => {\n    const { isSynced } = props;\n    const tooltip = isSynced ? 'Unsync all views' : 'Sync all views to this time range';\n    return <>{tooltip}</>;\n  };\n\n  return (\n    <Tooltip content={syncTimesTooltip} placement=\"bottom\">\n      <button\n        className={classNames('btn navbar-button navbar-button--attached', {\n          [`explore-active-button`]: isSynced,\n        })}\n        aria-label={isSynced ? 'Synced times' : 'Unsynced times'}\n        onClick={() => onClick()}\n      >\n        <i className={classNames('fa fa-link', styles.topPadding, isSynced && 'icon-brand-gradient')} />\n      </button>\n    </Tooltip>\n  );\n}\n","// Libaries\nimport React, { Component } from 'react';\n\n// Types\nimport { ExploreId } from 'app/types';\nimport { TimeRange, TimeZone, RawTimeRange, dateTimeForTimeZone } from '@grafana/data';\n\n// State\n\n// Components\nimport { TimeSyncButton } from './TimeSyncButton';\nimport { TimePickerWithHistory } from 'app/core/components/TimePicker/TimePickerWithHistory';\n\n// Utils & Services\nimport { getShiftedTimeRange, getZoomedTimeRange } from 'app/core/utils/timePicker';\n\nexport interface Props {\n  exploreId: ExploreId;\n  hideText?: boolean;\n  range: TimeRange;\n  timeZone: TimeZone;\n  splitted: boolean;\n  syncedTimes: boolean;\n  onChangeTimeSync: () => void;\n  onChangeTime: (range: RawTimeRange) => void;\n}\n\nexport class ExploreTimeControls extends Component<Props> {\n  onMoveTimePicker = (direction: number) => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getShiftedTimeRange(direction, range);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  onMoveForward = () => this.onMoveTimePicker(1);\n  onMoveBack = () => this.onMoveTimePicker(-1);\n\n  onChangeTimePicker = (timeRange: TimeRange) => {\n    this.props.onChangeTime(timeRange.raw);\n  };\n\n  onZoom = () => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getZoomedTimeRange(range, 2);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  render() {\n    const { range, timeZone, splitted, syncedTimes, onChangeTimeSync, hideText } = this.props;\n    const timeSyncButton = splitted ? <TimeSyncButton onClick={onChangeTimeSync} isSynced={syncedTimes} /> : undefined;\n    const timePickerCommonProps = {\n      value: range,\n      timeZone,\n      onMoveBackward: this.onMoveBack,\n      onMoveForward: this.onMoveForward,\n      onZoom: this.onZoom,\n      hideText,\n    };\n\n    return (\n      <TimePickerWithHistory\n        {...timePickerCommonProps}\n        timeSyncButton={timeSyncButton}\n        isSynced={syncedTimes}\n        onChange={this.onChangeTimePicker}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport memoizeOne from 'memoize-one';\nimport { css } from 'emotion';\nimport { CSSTransition } from 'react-transition-group';\n\nconst transitionDuration = 500;\n// We add a bit of delay to the transition as another perf optimisation. As at the start we need to render\n// quite a bit of new rows, if we start transition at the same time there can be frame rate drop. This gives time\n// for react to first render them and then do the animation.\nconst transitionDelay = 100;\n\nconst getStyles = memoizeOne(() => {\n  return {\n    logsEnter: css`\n      label: logsEnter;\n      position: absolute;\n      opacity: 0;\n      height: auto;\n      width: 100%;\n    `,\n    logsEnterActive: css`\n      label: logsEnterActive;\n      opacity: 1;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n    logsExit: css`\n      label: logsExit;\n      position: absolute;\n      opacity: 1;\n      height: auto;\n      width: 100%;\n    `,\n    logsExitActive: css`\n      label: logsExitActive;\n      opacity: 0;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n  };\n});\n\ntype Props = {\n  children: React.ReactNode;\n  visible: boolean;\n};\n\n/**\n * Cross fade transition component that is tied a bit too much to the logs containers so not very useful elsewhere\n * right now.\n */\nexport function LogsCrossFadeTransition(props: Props) {\n  const { visible, children } = props;\n  const styles = getStyles();\n  return (\n    <CSSTransition\n      in={visible}\n      mountOnEnter={true}\n      unmountOnExit={true}\n      timeout={transitionDuration + transitionDelay}\n      classNames={{\n        enter: styles.logsEnter,\n        enterActive: styles.logsEnterActive,\n        exit: styles.logsExit,\n        exitActive: styles.logsExitActive,\n      }}\n    >\n      {children}\n    </CSSTransition>\n  );\n}\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nmodule.exports = baseHas;\n","import React from 'react';\nimport { RefreshPicker } from '@grafana/ui';\nimport memoizeOne from 'memoize-one';\nimport { css } from 'emotion';\nimport classNames from 'classnames';\n\nimport { ResponsiveButton } from './ResponsiveButton';\n\nconst getStyles = memoizeOne(() => {\n  return {\n    selectButtonOverride: css`\n      label: selectButtonOverride;\n      .select-button-value {\n        color: white !important;\n      }\n    `,\n  };\n});\n\ntype Props = {\n  splitted: boolean;\n  loading: boolean;\n  onRun: () => void;\n  refreshInterval?: string;\n  onChangeRefreshInterval: (interval: string) => void;\n  showDropdown: boolean;\n};\n\nexport function RunButton(props: Props) {\n  const { splitted, loading, onRun, onChangeRefreshInterval, refreshInterval, showDropdown } = props;\n  const styles = getStyles();\n  const runButton = (\n    <ResponsiveButton\n      splitted={splitted}\n      title=\"Run Query\"\n      onClick={onRun}\n      buttonClassName={classNames('navbar-button--secondary', { 'btn--radius-right-0': showDropdown })}\n      iconClassName={loading ? 'fa fa-spinner fa-fw fa-spin run-icon' : 'fa fa-refresh fa-fw'}\n    />\n  );\n\n  if (showDropdown) {\n    return (\n      <RefreshPicker\n        onIntervalChanged={onChangeRefreshInterval}\n        value={refreshInterval}\n        buttonSelectClassName={`navbar-button--secondary ${styles.selectButtonOverride}`}\n        refreshButton={runButton}\n      />\n    );\n  }\n  return runButton;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport tinycolor from 'tinycolor2';\nimport { css } from 'emotion';\nimport { CSSTransition } from 'react-transition-group';\nimport { useTheme, Tooltip, stylesFactory, selectThemeVariant } from '@grafana/ui';\nimport { GrafanaTheme } from '@grafana/data';\n\n//Components\nimport { ResponsiveButton } from './ResponsiveButton';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  const bgColor = selectThemeVariant({ light: theme.colors.gray5, dark: theme.colors.dark1 }, theme.type);\n  const orangeLighter = tinycolor(theme.colors.orangeDark)\n    .lighten(10)\n    .toString();\n  const pulseTextColor = tinycolor(theme.colors.orangeDark)\n    .desaturate(90)\n    .toString();\n  return {\n    noRightBorderStyle: css`\n      label: noRightBorderStyle;\n      border-right: 0;\n    `,\n    liveButton: css`\n      label: liveButton;\n      margin: 0;\n    `,\n    isLive: css`\n      label: isLive;\n      border-color: ${theme.colors.orangeDark};\n      color: ${theme.colors.orangeDark};\n      background: transparent;\n      &:focus {\n        background: transparent;\n        border-color: ${theme.colors.orangeDark};\n        color: ${theme.colors.orangeDark};\n      }\n      &:hover {\n        background-color: ${bgColor};\n      }\n      &:active,\n      &:hover {\n        border-color: ${orangeLighter};\n        color: ${orangeLighter};\n      }\n    `,\n    isPaused: css`\n      label: isPaused;\n      border-color: ${theme.colors.orangeDark};\n      background: transparent;\n      animation: pulse 3s ease-out 0s infinite normal forwards;\n      &:focus {\n        background: transparent;\n        border-color: ${theme.colors.orangeDark};\n      }\n      &:hover {\n        background-color: ${bgColor};\n      }\n      &:active,\n      &:hover {\n        border-color: ${orangeLighter};\n      }\n      @keyframes pulse {\n        0% {\n          color: ${pulseTextColor};\n        }\n        50% {\n          color: ${theme.colors.orangeDark};\n        }\n        100% {\n          color: ${pulseTextColor};\n        }\n      }\n    `,\n    stopButtonEnter: css`\n      label: stopButtonEnter;\n      width: 0;\n      opacity: 0;\n      overflow: hidden;\n    `,\n    stopButtonEnterActive: css`\n      label: stopButtonEnterActive;\n      opacity: 1;\n      width: 32px;\n    `,\n    stopButtonExit: css`\n      label: stopButtonExit;\n      width: 32px;\n      opacity: 1;\n      overflow: hidden;\n    `,\n    stopButtonExitActive: css`\n      label: stopButtonExitActive;\n      opacity: 0;\n      width: 0;\n    `,\n  };\n});\n\nconst defaultLiveTooltip = () => {\n  return <>Live</>;\n};\n\ntype LiveTailButtonProps = {\n  splitted: boolean;\n  start: () => void;\n  stop: () => void;\n  pause: () => void;\n  resume: () => void;\n  isLive: boolean;\n  isPaused: boolean;\n};\nexport function LiveTailButton(props: LiveTailButtonProps) {\n  const { start, pause, resume, isLive, isPaused, stop, splitted } = props;\n  const theme = useTheme();\n  const styles = getStyles(theme);\n\n  const onClickMain = isLive ? (isPaused ? resume : pause) : start;\n\n  return (\n    <>\n      <Tooltip content={defaultLiveTooltip} placement=\"bottom\">\n        <ResponsiveButton\n          splitted={splitted}\n          buttonClassName={classNames('btn navbar-button', styles.liveButton, {\n            [`btn--radius-right-0 explore-active-button ${styles.noRightBorderStyle}`]: isLive,\n            [styles.isLive]: isLive && !isPaused,\n            [styles.isPaused]: isLive && isPaused,\n          })}\n          iconClassName={classNames(\n            'fa',\n            isPaused || !isLive ? 'fa-play' : 'fa-pause',\n            isLive && 'icon-brand-gradient'\n          )}\n          onClick={onClickMain}\n          title={'\\xa0Live'}\n        />\n      </Tooltip>\n      <CSSTransition\n        mountOnEnter={true}\n        unmountOnExit={true}\n        timeout={500}\n        in={isLive}\n        classNames={{\n          enter: styles.stopButtonEnter,\n          enterActive: styles.stopButtonEnterActive,\n          exit: styles.stopButtonExit,\n          exitActive: styles.stopButtonExitActive,\n        }}\n      >\n        <div>\n          <button\n            className={`btn navbar-button navbar-button--attached explore-active-button ${styles.isLive}`}\n            onClick={stop}\n          >\n            <i className={classNames('fa fa-stop icon-brand-gradient')} />\n          </button>\n        </div>\n      </CSSTransition>\n    </>\n  );\n}\n","// Libraries\nimport React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { css, cx } from 'emotion';\nimport { connect } from 'react-redux';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport memoizeOne from 'memoize-one';\n\n// Services & Utils\nimport store from 'app/core/store';\n\n// Components\nimport { ErrorBoundaryAlert, stylesFactory } from '@grafana/ui';\nimport LogsContainer from './LogsContainer';\nimport QueryRows from './QueryRows';\nimport TableContainer from './TableContainer';\nimport RichHistoryContainer from './RichHistory/RichHistoryContainer';\n// Actions\nimport {\n  changeSize,\n  initializeExplore,\n  modifyQueries,\n  scanStart,\n  setQueries,\n  refreshExplore,\n  updateTimeRange,\n  toggleGraph,\n  addQueryRow,\n} from './state/actions';\n// Types\nimport {\n  DataQuery,\n  DataSourceApi,\n  PanelData,\n  RawTimeRange,\n  TimeRange,\n  GraphSeriesXY,\n  TimeZone,\n  AbsoluteTimeRange,\n  LoadingState,\n  ExploreMode,\n} from '@grafana/data';\n\nimport { ExploreItemState, ExploreUrlState, ExploreId, ExploreUpdateState, ExploreUIState } from 'app/types/explore';\nimport { StoreState } from 'app/types';\nimport {\n  ensureQueries,\n  DEFAULT_RANGE,\n  DEFAULT_UI_STATE,\n  getTimeRangeFromUrl,\n  getTimeRange,\n  lastUsedDatasourceKeyForOrgId,\n  getFirstNonQueryRowSpecificError,\n} from 'app/core/utils/explore';\nimport { Emitter } from 'app/core/utils/emitter';\nimport { ExploreToolbar } from './ExploreToolbar';\nimport { NoDataSourceCallToAction } from './NoDataSourceCallToAction';\nimport { getTimeZone } from '../profile/state/selectors';\nimport { ErrorContainer } from './ErrorContainer';\nimport { scanStopAction } from './state/actionTypes';\nimport { ExploreGraphPanel } from './ExploreGraphPanel';\n\nconst getStyles = stylesFactory(() => {\n  return {\n    logsMain: css`\n      label: logsMain;\n      // Is needed for some transition animations to work.\n      position: relative;\n    `,\n    button: css`\n      margin: 1em 4px 0 0;\n    `,\n  };\n});\n\nexport interface ExploreProps {\n  changeSize: typeof changeSize;\n  datasourceInstance: DataSourceApi;\n  datasourceMissing: boolean;\n  exploreId: ExploreId;\n  initializeExplore: typeof initializeExplore;\n  initialized: boolean;\n  modifyQueries: typeof modifyQueries;\n  update: ExploreUpdateState;\n  refreshExplore: typeof refreshExplore;\n  scanning?: boolean;\n  scanRange?: RawTimeRange;\n  scanStart: typeof scanStart;\n  scanStopAction: typeof scanStopAction;\n  setQueries: typeof setQueries;\n  split: boolean;\n  queryKeys: string[];\n  initialDatasource: string;\n  initialQueries: DataQuery[];\n  initialRange: TimeRange;\n  mode: ExploreMode;\n  initialUI: ExploreUIState;\n  isLive: boolean;\n  syncedTimes: boolean;\n  updateTimeRange: typeof updateTimeRange;\n  graphResult?: GraphSeriesXY[];\n  loading?: boolean;\n  absoluteRange: AbsoluteTimeRange;\n  showingGraph?: boolean;\n  showingTable?: boolean;\n  timeZone?: TimeZone;\n  onHiddenSeriesChanged?: (hiddenSeries: string[]) => void;\n  toggleGraph: typeof toggleGraph;\n  queryResponse: PanelData;\n  originPanelId: number;\n  addQueryRow: typeof addQueryRow;\n}\n\ninterface ExploreState {\n  showRichHistory: boolean;\n}\n\n/**\n * Explore provides an area for quick query iteration for a given datasource.\n * Once a datasource is selected it populates the query section at the top.\n * When queries are run, their results are being displayed in the main section.\n * The datasource determines what kind of query editor it brings, and what kind\n * of results viewers it supports. The state is managed entirely in Redux.\n *\n * SPLIT VIEW\n *\n * Explore can have two Explore areas side-by-side. This is handled in `Wrapper.tsx`.\n * Since there can be multiple Explores (e.g., left and right) each action needs\n * the `exploreId` as first parameter so that the reducer knows which Explore state\n * is affected.\n *\n * DATASOURCE REQUESTS\n *\n * A click on Run Query creates transactions for all DataQueries for all expanded\n * result viewers. New runs are discarding previous runs. Upon completion a transaction\n * saves the result. The result viewers construct their data from the currently existing\n * transactions.\n *\n * The result viewers determine some of the query options sent to the datasource, e.g.,\n * `format`, to indicate eventual transformations by the datasources' result transformers.\n */\nexport class Explore extends React.PureComponent<ExploreProps, ExploreState> {\n  el: any;\n  exploreEvents: Emitter;\n\n  constructor(props: ExploreProps) {\n    super(props);\n    this.exploreEvents = new Emitter();\n    this.state = {\n      showRichHistory: false,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      initialized,\n      exploreId,\n      initialDatasource,\n      initialQueries,\n      initialRange,\n      mode,\n      initialUI,\n      originPanelId,\n    } = this.props;\n    const width = this.el ? this.el.offsetWidth : 0;\n\n    // initialize the whole explore first time we mount and if browser history contains a change in datasource\n    if (!initialized) {\n      this.props.initializeExplore(\n        exploreId,\n        initialDatasource,\n        initialQueries,\n        initialRange,\n        mode,\n        width,\n        this.exploreEvents,\n        initialUI,\n        originPanelId\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.exploreEvents.removeAllListeners();\n  }\n\n  componentDidUpdate(prevProps: ExploreProps) {\n    this.refreshExplore();\n  }\n\n  getRef = (el: any) => {\n    this.el = el;\n  };\n\n  onChangeTime = (rawRange: RawTimeRange) => {\n    const { updateTimeRange, exploreId } = this.props;\n    updateTimeRange({ exploreId, rawRange });\n  };\n\n  // Use this in help pages to set page to a single query\n  onClickExample = (query: DataQuery) => {\n    this.props.setQueries(this.props.exploreId, [query]);\n  };\n\n  onClickFilterLabel = (key: string, value: string) => {\n    this.onModifyQueries({ type: 'ADD_FILTER', key, value });\n  };\n\n  onClickFilterOutLabel = (key: string, value: string) => {\n    this.onModifyQueries({ type: 'ADD_FILTER_OUT', key, value });\n  };\n\n  onClickAddQueryRowButton = () => {\n    const { exploreId, queryKeys } = this.props;\n    this.props.addQueryRow(exploreId, queryKeys.length);\n  };\n\n  onModifyQueries = (action: any, index?: number) => {\n    const { datasourceInstance } = this.props;\n    if (datasourceInstance?.modifyQuery) {\n      const modifier = (queries: DataQuery, modification: any) =>\n        datasourceInstance.modifyQuery!(queries, modification);\n      this.props.modifyQueries(this.props.exploreId, action, modifier, index);\n    }\n  };\n\n  onResize = (size: { height: number; width: number }) => {\n    this.props.changeSize(this.props.exploreId, size);\n  };\n\n  onStartScanning = () => {\n    // Scanner will trigger a query\n    this.props.scanStart(this.props.exploreId);\n  };\n\n  onStopScanning = () => {\n    this.props.scanStopAction({ exploreId: this.props.exploreId });\n  };\n\n  onToggleGraph = (showingGraph: boolean) => {\n    const { toggleGraph, exploreId } = this.props;\n    toggleGraph(exploreId, showingGraph);\n  };\n\n  onUpdateTimeRange = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  toggleShowRichHistory = () => {\n    this.setState(state => {\n      return {\n        showRichHistory: !state.showRichHistory,\n      };\n    });\n  };\n\n  refreshExplore = () => {\n    const { exploreId, update } = this.props;\n\n    if (update.queries || update.ui || update.range || update.datasource || update.mode) {\n      this.props.refreshExplore(exploreId);\n    }\n  };\n\n  renderEmptyState = () => {\n    return (\n      <div className=\"explore-container\">\n        <NoDataSourceCallToAction />\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      datasourceInstance,\n      datasourceMissing,\n      exploreId,\n      split,\n      queryKeys,\n      mode,\n      graphResult,\n      loading,\n      absoluteRange,\n      showingGraph,\n      showingTable,\n      timeZone,\n      queryResponse,\n      syncedTimes,\n      isLive,\n    } = this.props;\n    const { showRichHistory } = this.state;\n    const exploreClass = split ? 'explore explore-split' : 'explore';\n    const styles = getStyles();\n    const StartPage = datasourceInstance?.components?.ExploreStartPage;\n    const showStartPage = !queryResponse || queryResponse.state === LoadingState.NotStarted;\n\n    // gets an error without a refID, so non-query-row-related error, like a connection error\n    const queryErrors = queryResponse.error ? [queryResponse.error] : undefined;\n    const queryError = getFirstNonQueryRowSpecificError(queryErrors);\n\n    return (\n      <div className={exploreClass} ref={this.getRef}>\n        <ExploreToolbar exploreId={exploreId} onChangeTime={this.onChangeTime} />\n        {datasourceMissing ? this.renderEmptyState() : null}\n        {datasourceInstance && (\n          <div className=\"explore-container\">\n            <QueryRows exploreEvents={this.exploreEvents} exploreId={exploreId} queryKeys={queryKeys} />\n            <div className=\"gf-form\">\n              <button\n                aria-label=\"Add row button\"\n                className={`gf-form-label gf-form-label--btn ${styles.button}`}\n                onClick={this.onClickAddQueryRowButton}\n                disabled={isLive}\n              >\n                <i className={'fa fa-fw fa-plus icon-margin-right'} />\n                <span className=\"btn-title\">{'\\xA0' + 'Add query'}</span>\n              </button>\n              <button\n                aria-label=\"Rich history button\"\n                className={cx(`gf-form-label gf-form-label--btn ${styles.button}`, {\n                  ['explore-active-button']: showRichHistory,\n                })}\n                onClick={this.toggleShowRichHistory}\n              >\n                <i className={'fa fa-fw fa-history icon-margin-right '} />\n                <span className=\"btn-title\">{'\\xA0' + 'Query history'}</span>\n              </button>\n            </div>\n            <ErrorContainer queryError={queryError} />\n            <AutoSizer onResize={this.onResize} disableHeight>\n              {({ width }) => {\n                if (width === 0) {\n                  return null;\n                }\n\n                return (\n                  <main className={`m-t-2 ${styles.logsMain}`} style={{ width }}>\n                    <ErrorBoundaryAlert>\n                      {showStartPage && StartPage && (\n                        <div className={'grafana-info-box grafana-info-box--max-lg'}>\n                          <StartPage\n                            onClickExample={this.onClickExample}\n                            datasource={datasourceInstance}\n                            exploreMode={mode}\n                          />\n                        </div>\n                      )}\n                      {!showStartPage && (\n                        <>\n                          {mode === ExploreMode.Metrics && (\n                            <ExploreGraphPanel\n                              series={graphResult}\n                              width={width}\n                              loading={loading}\n                              absoluteRange={absoluteRange}\n                              isStacked={false}\n                              showPanel={true}\n                              showingGraph={showingGraph}\n                              showingTable={showingTable}\n                              timeZone={timeZone}\n                              onToggleGraph={this.onToggleGraph}\n                              onUpdateTimeRange={this.onUpdateTimeRange}\n                              showBars={false}\n                              showLines={true}\n                            />\n                          )}\n                          {mode === ExploreMode.Metrics && (\n                            <TableContainer width={width} exploreId={exploreId} onClickCell={this.onClickFilterLabel} />\n                          )}\n                          {mode === ExploreMode.Logs && (\n                            <LogsContainer\n                              width={width}\n                              exploreId={exploreId}\n                              syncedTimes={syncedTimes}\n                              onClickFilterLabel={this.onClickFilterLabel}\n                              onClickFilterOutLabel={this.onClickFilterOutLabel}\n                              onStartScanning={this.onStartScanning}\n                              onStopScanning={this.onStopScanning}\n                            />\n                          )}\n                        </>\n                      )}\n                      {showRichHistory && (\n                        <RichHistoryContainer\n                          width={width}\n                          exploreId={exploreId}\n                          onClose={this.toggleShowRichHistory}\n                        />\n                      )}\n                    </ErrorBoundaryAlert>\n                  </main>\n                );\n              }}\n            </AutoSizer>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst ensureQueriesMemoized = memoizeOne(ensureQueries);\nconst getTimeRangeFromUrlMemoized = memoizeOne(getTimeRangeFromUrl);\n\nfunction mapStateToProps(state: StoreState, { exploreId }: ExploreProps): Partial<ExploreProps> {\n  const explore = state.explore;\n  const { split, syncedTimes } = explore;\n  const item: ExploreItemState = explore[exploreId];\n  const timeZone = getTimeZone(state.user);\n  const {\n    datasourceInstance,\n    datasourceMissing,\n    initialized,\n    queryKeys,\n    urlState,\n    update,\n    isLive,\n    supportedModes,\n    mode,\n    graphResult,\n    loading,\n    showingGraph,\n    showingTable,\n    absoluteRange,\n    queryResponse,\n  } = item;\n\n  const { datasource, queries, range: urlRange, mode: urlMode, ui, originPanelId } = (urlState ||\n    {}) as ExploreUrlState;\n  const initialDatasource = datasource || store.get(lastUsedDatasourceKeyForOrgId(state.user.orgId));\n  const initialQueries: DataQuery[] = ensureQueriesMemoized(queries);\n  const initialRange = urlRange\n    ? getTimeRangeFromUrlMemoized(urlRange, timeZone)\n    : getTimeRange(timeZone, DEFAULT_RANGE);\n\n  let newMode: ExploreMode | undefined;\n\n  if (supportedModes.length) {\n    const urlModeIsValid = supportedModes.includes(urlMode);\n    const modeStateIsValid = supportedModes.includes(mode);\n\n    if (modeStateIsValid) {\n      newMode = mode;\n    } else if (urlModeIsValid) {\n      newMode = urlMode;\n    } else {\n      newMode = supportedModes[0];\n    }\n  } else {\n    newMode = [ExploreMode.Metrics, ExploreMode.Logs].includes(urlMode) ? urlMode : undefined;\n  }\n\n  const initialUI = ui || DEFAULT_UI_STATE;\n\n  return {\n    datasourceInstance,\n    datasourceMissing,\n    initialized,\n    split,\n    queryKeys,\n    update,\n    initialDatasource,\n    initialQueries,\n    initialRange,\n    mode: newMode,\n    initialUI,\n    isLive,\n    graphResult,\n    loading,\n    showingGraph,\n    showingTable,\n    absoluteRange,\n    queryResponse,\n    originPanelId,\n    syncedTimes,\n    timeZone,\n  };\n}\n\nconst mapDispatchToProps: Partial<ExploreProps> = {\n  changeSize,\n  initializeExplore,\n  modifyQueries,\n  refreshExplore,\n  scanStart,\n  scanStopAction,\n  setQueries,\n  updateTimeRange,\n  toggleGraph,\n  addQueryRow,\n};\n\nexport default hot(module)(\n  // @ts-ignore\n  connect(mapStateToProps, mapDispatchToProps)(Explore)\n) as React.ComponentType<{ exploreId: ExploreId }>;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { hot } from 'react-hot-loader';\nimport { css, cx } from 'emotion';\nimport { stylesFactory, useTheme, Forms } from '@grafana/ui';\nimport { GrafanaTheme, AppEvents, DataSourceApi } from '@grafana/data';\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\nimport { copyStringToClipboard, createUrlFromRichHistory, createDataQuery } from 'app/core/utils/richHistory';\nimport appEvents from 'app/core/app_events';\nimport { StoreState } from 'app/types';\n\nimport { changeDatasource, updateRichHistory, setQueries } from '../state/actions';\nexport interface Props {\n  query: RichHistoryQuery;\n  dsImg: string;\n  isRemoved: boolean;\n  changeDatasource: typeof changeDatasource;\n  updateRichHistory: typeof updateRichHistory;\n  setQueries: typeof setQueries;\n  exploreId: ExploreId;\n  datasourceInstance: DataSourceApi;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme, isRemoved: boolean) => {\n  /* Hard-coded value so all buttons and icons on right side of card are aligned */\n  const rigtColumnWidth = '240px';\n  const rigtColumnContentWidth = '170px';\n\n  const borderColor = theme.isLight ? theme.colors.gray5 : theme.colors.gray25;\n\n  /* If datasource was removed, card will have inactive color */\n  const cardColor = theme.isLight\n    ? isRemoved\n      ? theme.colors.gray95\n      : theme.colors.white\n    : isRemoved\n    ? theme.colors.gray15\n    : theme.colors.gray05;\n  const cardBoxShadow = theme.isLight ? `0px 2px 2px ${borderColor}` : `0px 2px 4px black`;\n\n  return {\n    queryCard: css`\n      display: flex;\n      flex-direction: column;\n      border: 1px solid ${borderColor};\n      margin: ${theme.spacing.sm} 0;\n      box-shadow: ${cardBoxShadow};\n      background-color: ${cardColor};\n      border-radius: ${theme.border.radius.sm};\n      .starred {\n        color: ${theme.colors.orange};\n      }\n    `,\n    cardRow: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: ${theme.spacing.sm};\n      border-bottom: none;\n      :first-of-type {\n        border-bottom: 1px solid ${borderColor};\n        padding: ${theme.spacing.xs} ${theme.spacing.sm};\n      }\n      img {\n        height: ${theme.typography.size.base};\n        max-width: ${theme.typography.size.base};\n        margin-right: ${theme.spacing.sm};\n      }\n    `,\n    datasourceContainer: css`\n      display: flex;\n      align-items: center;\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.semibold};\n    `,\n    queryActionButtons: css`\n      max-width: ${rigtColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      font-size: ${theme.typography.size.base};\n      i {\n        margin: ${theme.spacing.xs};\n        cursor: pointer;\n      }\n    `,\n    queryContainer: css`\n      font-weight: ${theme.typography.weight.semibold};\n      width: calc(100% - ${rigtColumnWidth});\n    `,\n    queryRow: css`\n      border-top: 1px solid ${borderColor};\n      word-break: break-all;\n      padding: 4px 2px;\n      :first-child {\n        border-top: none;\n        padding: 0 0 4px 0;\n      }\n    `,\n    updateCommentContainer: css`\n      width: calc(100% + ${rigtColumnWidth});\n      margin-top: ${theme.spacing.sm};\n    `,\n    comment: css`\n      overflow-wrap: break-word;\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.regular};\n      margin-top: ${theme.spacing.xs};\n    `,\n    commentButtonRow: css`\n      > * {\n        margin-right: ${theme.spacing.sm};\n      }\n    `,\n    textArea: css`\n      border: 1px solid ${borderColor};\n      background: inherit;\n      color: inherit;\n      width: 100%;\n      font-size: ${theme.typography.size.sm};\n      &placeholder {\n        padding: 0 ${theme.spacing.sm};\n      }\n    `,\n    runButton: css`\n      max-width: ${rigtColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      button {\n        height: auto;\n        padding: ${theme.spacing.sm} ${theme.spacing.md};\n        span {\n          white-space: normal !important;\n        }\n      }\n    `,\n  };\n});\n\nexport function RichHistoryCard(props: Props) {\n  const {\n    query,\n    dsImg,\n    isRemoved,\n    updateRichHistory,\n    changeDatasource,\n    exploreId,\n    datasourceInstance,\n    setQueries,\n  } = props;\n  const [activeUpdateComment, setActiveUpdateComment] = useState(false);\n  const [comment, setComment] = useState<string | undefined>(query.comment);\n\n  const toggleActiveUpdateComment = () => setActiveUpdateComment(!activeUpdateComment);\n  const theme = useTheme();\n  const styles = getStyles(theme, isRemoved);\n\n  const onRunQuery = async () => {\n    const dataQueries = query.queries.map((q, i) => createDataQuery(query, q, i));\n    if (query.datasourceName !== datasourceInstance?.name) {\n      await changeDatasource(exploreId, query.datasourceName);\n      setQueries(exploreId, dataQueries);\n    } else {\n      setQueries(exploreId, dataQueries);\n    }\n  };\n\n  const onCopyQuery = () => {\n    const queries = query.queries.join('\\n\\n');\n    copyStringToClipboard(queries);\n    appEvents.emit(AppEvents.alertSuccess, ['Query copied to clipboard']);\n  };\n\n  const onCreateLink = () => {\n    const url = createUrlFromRichHistory(query);\n    copyStringToClipboard(url);\n    appEvents.emit(AppEvents.alertSuccess, ['Link copied to clipboard']);\n  };\n\n  const onDeleteQuery = () => {\n    updateRichHistory(query.ts, 'delete');\n    appEvents.emit(AppEvents.alertSuccess, ['Query deleted']);\n  };\n\n  const onStarrQuery = () => {\n    updateRichHistory(query.ts, 'starred');\n  };\n\n  const onUpdateComment = () => {\n    updateRichHistory(query.ts, 'comment', comment);\n    toggleActiveUpdateComment();\n  };\n\n  const onCancelUpdateComment = () => {\n    toggleActiveUpdateComment();\n    setComment(query.comment);\n  };\n\n  const updateComment = (\n    <div className={styles.updateCommentContainer}>\n      <Forms.TextArea\n        value={comment}\n        placeholder={comment ? undefined : 'An optional description of what the query does.'}\n        onChange={e => setComment(e.currentTarget.value)}\n        className={styles.textArea}\n      />\n      <div className={styles.commentButtonRow}>\n        <Forms.Button onClick={onUpdateComment}>Save comment</Forms.Button>\n        <Forms.Button variant=\"secondary\" onClick={onCancelUpdateComment}>\n          Cancel\n        </Forms.Button>\n      </div>\n    </div>\n  );\n\n  const queryActionButtons = (\n    <div className={styles.queryActionButtons}>\n      <i\n        className=\"fa fa-fw fa-comment-o\"\n        onClick={toggleActiveUpdateComment}\n        title={query.comment?.length > 0 ? 'Edit comment' : 'Add comment'}\n      ></i>\n      <i className=\"fa fa-fw fa-copy\" onClick={onCopyQuery} title=\"Copy query to clipboard\"></i>\n      {!isRemoved && <i className=\"fa fa-fw fa-link\" onClick={onCreateLink} title=\"Copy link to clipboard\"></i>}\n      <i className={'fa fa-trash'} title={'Delete query'} onClick={onDeleteQuery}></i>\n      <i\n        className={cx('fa fa-fw', query.starred ? 'fa-star starred' : 'fa-star-o')}\n        onClick={onStarrQuery}\n        title={query.starred ? 'Unstar query' : 'Star query'}\n      ></i>\n    </div>\n  );\n\n  return (\n    <div className={styles.queryCard}>\n      <div className={styles.cardRow}>\n        <div className={styles.datasourceContainer}>\n          <img src={dsImg} aria-label=\"Data source icon\" />\n          <div aria-label=\"Data source name\">\n            {isRemoved ? 'Data source does not exist anymore' : query.datasourceName}\n          </div>\n        </div>\n        {queryActionButtons}\n      </div>\n      <div className={cx(styles.cardRow)}>\n        <div className={styles.queryContainer}>\n          {query.queries.map((q, i) => {\n            return (\n              <div aria-label=\"Query text\" key={`${q}-${i}`} className={styles.queryRow}>\n                {q}\n              </div>\n            );\n          })}\n          {!activeUpdateComment && query.comment && (\n            <div aria-label=\"Query comment\" className={styles.comment}>\n              {query.comment}\n            </div>\n          )}\n          {activeUpdateComment && updateComment}\n        </div>\n        {!activeUpdateComment && (\n          <div className={styles.runButton}>\n            <Forms.Button variant=\"secondary\" onClick={onRunQuery} disabled={isRemoved}>\n              {datasourceInstance?.name === query.datasourceName ? 'Run query' : 'Switch data source and run query'}\n            </Forms.Button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const { datasourceInstance } = explore[exploreId];\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  return {\n    exploreId,\n    datasourceInstance,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeDatasource,\n  updateRichHistory,\n  setQueries,\n};\n\nexport default hot(module)(connect(mapStateToProps, mapDispatchToProps)(RichHistoryCard));\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Services\nimport { getAngularLoader, AngularComponent } from '@grafana/runtime';\nimport { getTimeSrv } from 'app/features/dashboard/services/TimeSrv';\n\n// Types\nimport { Emitter } from 'app/core/utils/emitter';\nimport { DataQuery } from '@grafana/data';\nimport { TimeRange } from '@grafana/data';\nimport 'app/features/plugins/plugin_loader';\nimport { dateTime } from '@grafana/data';\n\ninterface QueryEditorProps {\n  error?: any;\n  datasource: any;\n  onExecuteQuery?: () => void;\n  onQueryChange?: (value: DataQuery) => void;\n  initialQuery: DataQuery;\n  exploreEvents: Emitter;\n  range: TimeRange;\n  textEditModeEnabled?: boolean;\n}\n\nexport default class QueryEditor extends PureComponent<QueryEditorProps, any> {\n  element: any;\n  component: AngularComponent;\n  angularScope: any;\n\n  async componentDidMount() {\n    if (!this.element) {\n      return;\n    }\n\n    const { datasource, initialQuery, exploreEvents, range } = this.props;\n    this.initTimeSrv(range);\n\n    const loader = getAngularLoader();\n    const template = '<plugin-component type=\"query-ctrl\"> </plugin-component>';\n    const target = { datasource: datasource.name, ...initialQuery };\n    const scopeProps = {\n      ctrl: {\n        datasource,\n        target,\n        refresh: () => {\n          setTimeout(() => {\n            this.props.onQueryChange?.(target);\n            this.props.onExecuteQuery?.();\n          }, 1);\n        },\n        onQueryChange: () => {\n          setTimeout(() => {\n            this.props.onQueryChange?.(target);\n          }, 1);\n        },\n        events: exploreEvents,\n        panel: { datasource, targets: [target] },\n        dashboard: {},\n      },\n    };\n\n    this.component = loader.load(this.element, scopeProps, template);\n    this.angularScope = scopeProps.ctrl;\n\n    setTimeout(() => {\n      this.props.onQueryChange?.(target);\n      this.props.onExecuteQuery?.();\n    }, 1);\n  }\n\n  componentDidUpdate(prevProps: QueryEditorProps) {\n    const hasToggledEditorMode = prevProps.textEditModeEnabled !== this.props.textEditModeEnabled;\n    const hasNewError = prevProps.error !== this.props.error;\n\n    if (this.component) {\n      if (hasToggledEditorMode && this.angularScope && this.angularScope.toggleEditorMode) {\n        this.angularScope.toggleEditorMode();\n      }\n\n      if (hasNewError || hasToggledEditorMode) {\n        // Some query controllers listen to data error events and need a digest\n        // for some reason this needs to be done in next tick\n        setTimeout(this.component.digest);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.component) {\n      this.component.destroy();\n    }\n  }\n\n  initTimeSrv(range: TimeRange) {\n    const timeSrv = getTimeSrv();\n    timeSrv.init({\n      time: {\n        from: dateTime(range.from),\n        to: dateTime(range.to),\n      },\n      refresh: false,\n      getTimezone: () => 'utc',\n      timeRangeUpdated: () => console.log('refreshDashboard!'),\n    });\n  }\n\n  render() {\n    return <div className=\"gf-form-query\" ref={element => (this.element = element)} style={{ width: '100%' }} />;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect } from 'react-redux';\nimport { DataFrame } from '@grafana/data';\nimport { Table, Collapse } from '@grafana/ui';\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\nimport { StoreState } from 'app/types';\nimport { toggleTable } from './state/actions';\nimport { config } from 'app/core/config';\nimport { PANEL_BORDER } from 'app/core/constants';\nimport { MetaInfoText } from './MetaInfoText';\n\ninterface TableContainerProps {\n  exploreId: ExploreId;\n  loading: boolean;\n  width: number;\n  onClickCell: (key: string, value: string) => void;\n  showingTable: boolean;\n  tableResult?: DataFrame;\n  toggleTable: typeof toggleTable;\n}\n\nexport class TableContainer extends PureComponent<TableContainerProps> {\n  onClickTableButton = () => {\n    this.props.toggleTable(this.props.exploreId, this.props.showingTable);\n  };\n\n  getTableHeight() {\n    const { tableResult } = this.props;\n\n    if (!tableResult || tableResult.length === 0) {\n      return 200;\n    }\n\n    // tries to estimate table height\n    return Math.max(Math.min(600, tableResult.length * 35) + 35);\n  }\n\n  render() {\n    const { loading, onClickCell, showingTable, tableResult, width } = this.props;\n\n    const height = this.getTableHeight();\n    const tableWidth = width - config.theme.panelPadding * 2 - PANEL_BORDER;\n    const hasTableResult = tableResult?.length;\n\n    return (\n      <Collapse label=\"Table\" loading={loading} collapsible isOpen={showingTable} onToggle={this.onClickTableButton}>\n        {hasTableResult ? (\n          <Table data={tableResult} width={tableWidth} height={height} onCellClick={onClickCell} />\n        ) : (\n          <MetaInfoText metaItems={[{ value: '0 series returned' }]} />\n        )}\n      </Collapse>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: string }) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const { loading: loadingInState, showingTable, tableResult } = item;\n  const loading = tableResult && tableResult.length > 0 ? false : loadingInState;\n  return { loading, showingTable, tableResult };\n}\n\nconst mapDispatchToProps = {\n  toggleTable,\n};\n\nexport default hot(module)(connect(mapStateToProps, mapDispatchToProps)(TableContainer));\n"],"sourceRoot":""}